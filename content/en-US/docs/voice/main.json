{
  "General": "General",
  "Welcome": "Welcome",
  "<div align=\"center\">\n\t<br />\n\t<p>\n\t\t<a href=\"https://discord.js.org\"><img src=\"https://discord.js.org/static/logo.svg\" width=\"546\" alt=\"discord.js\" /></a>\n\t</p>\n\t<br />\n\t\t<p>\n\t\t<a href=\"https://discord.gg/djs\"><img src=\"https://img.shields.io/discord/222078108977594368?color=5865F2&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/voice\"><img src=\"https://img.shields.io/npm/v/@discordjs/voice.svg?maxAge=3600\" alt=\"npm version\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/voice\"><img src=\"https://img.shields.io/npm/dt/@discordjs/voice.svg?maxAge=3600\" alt=\"npm downloads\" /></a>\n\t\t<a href=\"https://github.com/discordjs/discord.js/actions\"><img src=\"https://github.com/discordjs/discord.js/actions/workflows/test.yml/badge.svg\" alt=\"Build status\" /></a>\n\t\t<a href=\"https://codecov.io/gh/discordjs/voice\"><img src=\"https://codecov.io/gh/discordjs/voice/branch/main/graph/badge.svg\" alt=\"Code coverage\" /></a>\n\t\t<a href=\"https://www.patreon.com/discordjs\"><img src=\"https://img.shields.io/badge/donate-patreon-F96854.svg\" alt=\"Patreon\" /></a>\n\t</p>\n</div>\n\n## About\n\nAn implementation of the Discord Voice API for Node.js, written in TypeScript.\n\n**Features:**\n\n- Send and receive\\* audio in Discord voice-based channels\n- A strong focus on reliability and predictable behaviour\n- Horizontal scalability and libraries other than [discord.js](https://discord.js.org/) are supported with custom adapters\n- A robust audio processing system that can handle a wide range of audio sources\n\n\\*_Audio receive is not documented by Discord so stable support is not guaranteed_\n\n## Installation\n\n**Node.js 16.9.0 or newer is required.**\n\n```sh-session\nnpm install @discordjs/voice\nyarn add @discordjs/voice\npnpm add @discordjs/voice\n```\n\n## Dependencies\n\nThis library has several optional dependencies to support a variety\nof different platforms. Install one dependency from each of the\ncategories shown below. The dependencies are listed in order of\npreference for performance. If you can't install one of the options,\ntry installing another.\n\n**Encryption Libraries (npm install):**\n\n- `sodium`: ^3.0.2\n- `tweetnacl`: ^1.0.3\n- `libsodium-wrappers`: ^0.7.9\n\n**Opus Libraries (npm install):**\n\n- `@discordjs/opus`: ^0.4.0\n- `opusscript`: ^0.0.7\n\n**FFmpeg:**\n\n- [`FFmpeg`](https://ffmpeg.org/) (installed and added to environment)\n- `ffmpeg-static`: ^4.2.7 (npm install)\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))\n- [Documentation](https://discord.js.org/#/docs/voice)\n- [Examples](https://github.com/discordjs/discord.js/tree/main/packages/voice/examples)\n- [discord.js Discord server](https://discord.gg/djs)\n- [GitHub](https://github.com/discordjs/discord.js/tree/main/packages/voice)\n- [npm](https://www.npmjs.com/package/@discordjs/voice)\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs/voice).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/main/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [discord.js Server](https://discord.gg/djs).\n": "<div align=\"center\">\n\t<br />\n\t<p>\n\t\t<a href=\"https://discord.js.org\"><img src=\"https://discord.js.org/static/logo.svg\" width=\"546\" alt=\"discord.js\" /></a>\n\t</p>\n\t<br />\n\t\t<p>\n\t\t<a href=\"https://discord.gg/djs\"><img src=\"https://img.shields.io/discord/222078108977594368?color=5865F2&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/voice\"><img src=\"https://img.shields.io/npm/v/@discordjs/voice.svg?maxAge=3600\" alt=\"npm version\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/voice\"><img src=\"https://img.shields.io/npm/dt/@discordjs/voice.svg?maxAge=3600\" alt=\"npm downloads\" /></a>\n\t\t<a href=\"https://github.com/discordjs/discord.js/actions\"><img src=\"https://github.com/discordjs/discord.js/actions/workflows/test.yml/badge.svg\" alt=\"Build status\" /></a>\n\t\t<a href=\"https://codecov.io/gh/discordjs/voice\"><img src=\"https://codecov.io/gh/discordjs/voice/branch/main/graph/badge.svg\" alt=\"Code coverage\" /></a>\n\t\t<a href=\"https://www.patreon.com/discordjs\"><img src=\"https://img.shields.io/badge/donate-patreon-F96854.svg\" alt=\"Patreon\" /></a>\n\t</p>\n</div>\n\n## About\n\nAn implementation of the Discord Voice API for Node.js, written in TypeScript.\n\n**Features:**\n\n- Send and receive\\* audio in Discord voice-based channels\n- A strong focus on reliability and predictable behaviour\n- Horizontal scalability and libraries other than [discord.js](https://discord.js.org/) are supported with custom adapters\n- A robust audio processing system that can handle a wide range of audio sources\n\n\\*_Audio receive is not documented by Discord so stable support is not guaranteed_\n\n## Installation\n\n**Node.js 16.9.0 or newer is required.**\n\n```sh-session\nnpm install @discordjs/voice\nyarn add @discordjs/voice\npnpm add @discordjs/voice\n```\n\n## Dependencies\n\nThis library has several optional dependencies to support a variety\nof different platforms. Install one dependency from each of the\ncategories shown below. The dependencies are listed in order of\npreference for performance. If you can't install one of the options,\ntry installing another.\n\n**Encryption Libraries (npm install):**\n\n- `sodium`: ^3.0.2\n- `tweetnacl`: ^1.0.3\n- `libsodium-wrappers`: ^0.7.9\n\n**Opus Libraries (npm install):**\n\n- `@discordjs/opus`: ^0.4.0\n- `opusscript`: ^0.0.7\n\n**FFmpeg:**\n\n- [`FFmpeg`](https://ffmpeg.org/) (installed and added to environment)\n- `ffmpeg-static`: ^4.2.7 (npm install)\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))\n- [Documentation](https://discord.js.org/#/docs/voice)\n- [Examples](https://github.com/discordjs/discord.js/tree/main/packages/voice/examples)\n- [discord.js Discord server](https://discord.gg/djs)\n- [GitHub](https://github.com/discordjs/discord.js/tree/main/packages/voice)\n- [npm](https://www.npmjs.com/package/@discordjs/voice)\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs/voice).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/main/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [discord.js Server](https://discord.gg/djs).\n",
  "Used to play audio resources (i.e. tracks, streams) to voice connections.": "Used to play audio resources (i.e. tracks, streams) to voice connections.",
  "The state that the AudioPlayer is in.": "The state that the AudioPlayer is in.",
  "The behavior that the player should follow when it enters certain situations.": "The behavior that the player should follow when it enters certain situations.",
  "The debug logger function, if debugging is enabled.": "The debug logger function, if debugging is enabled.",
  "A list of VoiceConnections that are registered to this AudioPlayer. The player will attempt to play audio\nto the streams in this list.": "A list of VoiceConnections that are registered to this AudioPlayer. The player will attempt to play audio\nto the streams in this list.",
  "A list of subscribed voice connections that can currently receive audio to play.": "A list of subscribed voice connections that can currently receive audio to play.",
  "The state that the player is in.": "The state that the player is in.",
  "Instructs the given connections to each prepare this packet to be played at the start of the\nnext cycle.": "Instructs the given connections to each prepare this packet to be played at the start of the\nnext cycle.",
  "The Opus packet to be prepared by each receiver": "The Opus packet to be prepared by each receiver",
  "The connections that should play this packet": "The connections that should play this packet",
  "Signals to all the subscribed connections that they should send a packet to Discord indicating\nthey are no longer speaking. Called once playback of a resource ends.": "Signals to all the subscribed connections that they should send a packet to Discord indicating\nthey are no longer speaking. Called once playback of a resource ends.",
  "Called roughly every 20ms by the global audio player timer. Dispatches any audio packets that are buffered\nby the active connections of this audio player.": "Called roughly every 20ms by the global audio player timer. Dispatches any audio packets that are buffered\nby the active connections of this audio player.",
  "Called roughly every 20ms by the global audio player timer. Attempts to read an audio packet from the\nunderlying resource of the stream, and then has all the active connections of the audio player prepare it\n(encrypt it, append header data) so that it is ready to play at the start of the next cycle.": "Called roughly every 20ms by the global audio player timer. Attempts to read an audio packet from the\nunderlying resource of the stream, and then has all the active connections of the audio player prepare it\n(encrypt it, append header data) so that it is ready to play at the start of the next cycle.",
  "Checks whether the underlying resource (if any) is playable (readable)": "Checks whether the underlying resource (if any) is playable (readable)",
  "Pauses playback of the current resource, if any.": "Pauses playback of the current resource, if any.",
  "If true, the player will play 5 packets of silence after pausing to prevent audio glitches": "If true, the player will play 5 packets of silence after pausing to prevent audio glitches",
  "Plays a new resource on the player. If the player is already playing a resource, the existing resource is destroyed\n(it cannot be reused, even in another player) and is replaced with the new resource.": "Plays a new resource on the player. If the player is already playing a resource, the existing resource is destroyed\n(it cannot be reused, even in another player) and is replaced with the new resource.",
  "The resource to play": "The resource to play",
  "Stops playback of the current resource and destroys the resource. The player will either transition to the Idle state,\nor remain in its current state until the silence padding frames of the resource have been played.": "Stops playback of the current resource and destroys the resource. The player will either transition to the Idle state,\nor remain in its current state until the silence padding frames of the resource have been played.",
  "If true, will force the player to enter the Idle state even if the resource has silence padding frames": "If true, will force the player to enter the Idle state even if the resource has silence padding frames",
  "Subscribes a VoiceConnection to the audio player's play list. If the VoiceConnection is already subscribed,\nthen the existing subscription is used.": "Subscribes a VoiceConnection to the audio player's play list. If the VoiceConnection is already subscribed,\nthen the existing subscription is used.",
  "The connection to subscribe": "The connection to subscribe",
  "Unpauses playback of the current resource, if any.": "Unpauses playback of the current resource, if any.",
  "Unsubscribes a subscription - i.e. removes a voice connection from the play list of the audio player.": "Unsubscribes a subscription - i.e. removes a voice connection from the play list of the audio player.",
  "The subscription to remove": "The subscription to remove",
  "An error emitted by an AudioPlayer. Contains an attached resource to aid with\ndebugging and identifying where the error came from.": "An error emitted by an AudioPlayer. Contains an attached resource to aid with\ndebugging and identifying where the error came from.",
  "The resource associated with the audio player at the time the error was thrown.": "The resource associated with the audio player at the time the error was thrown.",
  "Create .stack property on a target object": "Create .stack property on a target object",
  "A readable stream of Opus packets received from a specific entity\nin a Discord voice connection.": "A readable stream of Opus packets received from a specific entity\nin a Discord voice connection.",
  "Is `true` after `readable.destroy()` has been called.": "Is `true` after `readable.destroy()` has been called.",
  "The end behavior of the receive stream.": "The end behavior of the receive stream.",
  "Is `true` if it is safe to call `readable.read()`, which means\nthe stream has not been destroyed or emitted `'error'` or `'end'`.": "Is `true` if it is safe to call `readable.read()`, which means\nthe stream has not been destroyed or emitted `'error'` or `'end'`.",
  "Returns whether the stream was destroyed or errored before emitting `'end'`.": "Returns whether the stream was destroyed or errored before emitting `'end'`.",
  "Returns whether `'data'` has been emitted.": "Returns whether `'data'` has been emitted.",
  "Getter for the property `encoding` of a given `Readable` stream. The `encoding`property can be set using the `readable.setEncoding()` method.": "Getter for the property `encoding` of a given `Readable` stream. The `encoding`property can be set using the `readable.setEncoding()` method.",
  "Becomes `true` when `'end'` event is emitted.": "Becomes `true` when `'end'` event is emitted.",
  "This property reflects the current state of a `Readable` stream as described\nin the `Three states` section.": "This property reflects the current state of a `Readable` stream as described\nin the `Three states` section.",
  "Returns the value of `highWaterMark` passed when creating this `Readable`.": "Returns the value of `highWaterMark` passed when creating this `Readable`.",
  "This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the `highWaterMark`.": "This property contains the number of bytes (or objects) in the queue\nready to be read. The value provides introspection data regarding\nthe status of the `highWaterMark`.",
  "Getter for the property `objectMode` of a given `Readable` stream.": "Getter for the property `objectMode` of a given `Readable` stream.",
  "Sets or gets the default captureRejection value for all emitters.": "Sets or gets the default captureRejection value for all emitters.",
  "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.",
  "Event emitter\nThe defined events on documents including:\n1. close\n2. data\n3. end\n4. error\n5. pause\n6. readable\n7. resume": "Event emitter\nThe defined events on documents including:\n1. close\n2. data\n3. end\n4. error\n5. pause\n6. readable\n7. resume",
  "Destroy the stream. Optionally emit an `'error'` event, and emit a `'close'`event (unless `emitClose` is set to `false`). After this call, the readable\nstream will release any internal resources and subsequent calls to `push()`will be ignored.": "Destroy the stream. Optionally emit an `'error'` event, and emit a `'close'`event (unless `emitClose` is set to `false`). After this call, the readable\nstream will release any internal resources and subsequent calls to `push()`will be ignored.",
  "Error which will be passed as payload in `'error'` event": "Error which will be passed as payload in `'error'` event",
  "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.",
  "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
  "The `readable.isPaused()` method returns the current operating state of the`Readable`. This is used primarily by the mechanism that underlies the`readable.pipe()` method. In most\ntypical cases, there will be no reason to\nuse this method directly.": "The `readable.isPaused()` method returns the current operating state of the`Readable`. This is used primarily by the mechanism that underlies the`readable.pipe()` method. In most\ntypical cases, there will be no reason to\nuse this method directly.",
  "Returns the number of listeners listening to the event named `eventName`.": "Returns the number of listeners listening to the event named `eventName`.",
  "The name of the event being listened for": "The name of the event being listened for",
  "Returns a copy of the array of listeners for the event named `eventName`.": "Returns a copy of the array of listeners for the event named `eventName`.",
  "Alias for `emitter.removeListener()`.": "Alias for `emitter.removeListener()`.",
  "The `readable.pause()` method will cause a stream in flowing mode to stop\nemitting `'data'` events, switching out of flowing mode. Any data that\nbecomes available will remain in the internal buffer.": "The `readable.pause()` method will cause a stream in flowing mode to stop\nemitting `'data'` events, switching out of flowing mode. Any data that\nbecomes available will remain in the internal buffer.",
  "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).",
  "The `readable.read()` method pulls some data out of the internal buffer and\nreturns it. If no data available to be read, `null` is returned. By default,\nthe data will be returned as a `Buffer` object unless an encoding has been\nspecified using the `readable.setEncoding()` method or the stream is operating\nin object mode.": "The `readable.read()` method pulls some data out of the internal buffer and\nreturns it. If no data available to be read, `null` is returned. By default,\nthe data will be returned as a `Buffer` object unless an encoding has been\nspecified using the `readable.setEncoding()` method or the stream is operating\nin object mode.",
  "Optional argument to specify how much data to read.": "Optional argument to specify how much data to read.",
  "Removes all listeners, or those of the specified `eventName`.": "Removes all listeners, or those of the specified `eventName`.",
  "The `readable.resume()` method causes an explicitly paused `Readable` stream to\nresume emitting `'data'` events, switching the stream into flowing mode.": "The `readable.resume()` method causes an explicitly paused `Readable` stream to\nresume emitting `'data'` events, switching the stream into flowing mode.",
  "The `readable.setEncoding()` method sets the character encoding for\ndata read from the `Readable` stream.": "The `readable.setEncoding()` method sets the character encoding for\ndata read from the `Readable` stream.",
  "The encoding to use.": "The encoding to use.",
  "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
  "The `readable.unpipe()` method detaches a `Writable` stream previously attached\nusing the {@link pipe} method.": "The `readable.unpipe()` method detaches a `Writable` stream previously attached\nusing the {@link pipe} method.",
  "Optional specific stream to unpipe": "Optional specific stream to unpipe",
  "Passing `chunk` as `null` signals the end of the stream (EOF) and behaves the\nsame as `readable.push(null)`, after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.": "Passing `chunk` as `null` signals the end of the stream (EOF) and behaves the\nsame as `readable.push(null)`, after which no more data can be written. The EOF\nsignal is put at the end of the buffer and any buffered data will still be\nflushed.",
  "Chunk of data to unshift onto the read queue. For streams not operating in object mode, `chunk` must be a string, `Buffer`, `Uint8Array` or `null`. For object mode\nstreams, `chunk` may be any JavaScript value.": "Chunk of data to unshift onto the read queue. For streams not operating in object mode, `chunk` must be a string, `Buffer`, `Uint8Array` or `null`. For object mode\nstreams, `chunk` may be any JavaScript value.",
  "Encoding of string chunks. Must be a valid `Buffer` encoding, such as `'utf8'` or `'ascii'`.": "Encoding of string chunks. Must be a valid `Buffer` encoding, such as `'utf8'` or `'ascii'`.",
  "Prior to Node.js 0.10, streams did not implement the entire `stream` module API\nas it is currently defined. (See `Compatibility` for more information.)": "Prior to Node.js 0.10, streams did not implement the entire `stream` module API\nas it is currently defined. (See `Compatibility` for more information.)",
  "An \"old style\" readable stream": "An \"old style\" readable stream",
  "A utility method for creating Readable Streams out of iterators.": "A utility method for creating Readable Streams out of iterators.",
  "Returns whether the stream has been read from or cancelled.": "Returns whether the stream has been read from or cancelled.",
  "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.",
  "The emitter to query": "The emitter to query",
  "The event name": "The event name",
  "```js\nconst { on, EventEmitter } = require('events');": "```js\nconst { on, EventEmitter } = require('events');",
  "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.",
  "Represents an audio resource that can be played by an audio player.": "Represents an audio resource that can be played by an audio player.",
  "The audio player that the resource is subscribed to, if any.": "The audio player that the resource is subscribed to, if any.",
  "The pipeline used to convert the input stream into a playable format. For example, this may\ncontain an FFmpeg component for arbitrary inputs, and it may contain a VolumeTransformer component\nfor resources with inline volume transformation enabled.": "The pipeline used to convert the input stream into a playable format. For example, this may\ncontain an FFmpeg component for arbitrary inputs, and it may contain a VolumeTransformer component\nfor resources with inline volume transformation enabled.",
  "If using an Opus encoder to create this audio resource, then this will be a prism-media opus.Encoder.\nYou can use this to control settings such as bitrate, FEC, PLP.": "If using an Opus encoder to create this audio resource, then this will be a prism-media opus.Encoder.\nYou can use this to control settings such as bitrate, FEC, PLP.",
  "Optional metadata that can be used to identify the resource.": "Optional metadata that can be used to identify the resource.",
  "An object-mode Readable stream that emits Opus packets. This is what is played by audio players.": "An object-mode Readable stream that emits Opus packets. This is what is played by audio players.",
  "The playback duration of this audio resource, given in milliseconds.": "The playback duration of this audio resource, given in milliseconds.",
  "The number of silence frames to append to the end of the resource's audio stream, to prevent interpolation glitches.": "The number of silence frames to append to the end of the resource's audio stream, to prevent interpolation glitches.",
  "The number of remaining silence frames to play. If -1, the frames have not yet started playing.": "The number of remaining silence frames to play. If -1, the frames have not yet started playing.",
  "Whether or not the stream for this resource has started (data has become readable)": "Whether or not the stream for this resource has started (data has become readable)",
  "If the resource was created with inline volume transformation enabled, then this will be a\nprism-media VolumeTransformer. You can use this to alter the volume of the stream.": "If the resource was created with inline volume transformation enabled, then this will be a\nprism-media VolumeTransformer. You can use this to alter the volume of the stream.",
  "Whether this resource has ended or not.": "Whether this resource has ended or not.",
  "Whether this resource is readable. If the underlying resource is no longer readable, this will still return true\nwhile there are silence padding frames left to play.": "Whether this resource is readable. If the underlying resource is no longer readable, this will still return true\nwhile there are silence padding frames left to play.",
  "Attempts to read an Opus packet from the audio resource. If a packet is available, the playbackDuration\nis incremented.": "Attempts to read an Opus packet from the audio resource. If a packet is available, the playbackDuration\nis incremented.",
  "Represents a subscription of a voice connection to an audio player, allowing\nthe audio player to play audio on the voice connection.": "Represents a subscription of a voice connection to an audio player, allowing\nthe audio player to play audio on the voice connection.",
  "The voice connection of this subscription.": "The voice connection of this subscription.",
  "The audio player of this subscription.": "The audio player of this subscription.",
  "Unsubscribes the connection from the audio player, meaning that the\naudio player cannot stream audio to it until a new subscription is made.": "Unsubscribes the connection from the audio player, meaning that the\naudio player cannot stream audio to it until a new subscription is made.",
  "Maps audio SSRCs to data of users in voice connections.": "Maps audio SSRCs to data of users in voice connections.",
  "The underlying map.": "The underlying map.",
  "Deletes the stored voice data about a user.": "Deletes the stored voice data about a user.",
  "The target of the delete operation, either their audio SSRC or user id": "The target of the delete operation, either their audio SSRC or user id",
  "Gets the stored voice data of a user.": "Gets the stored voice data of a user.",
  "The target, either their user id or audio SSRC": "The target, either their user id or audio SSRC",
  "Updates the map with new user data": "Updates the map with new user data",
  "The data to update with": "The data to update with",
  "Tracks the speaking states of users in a voice channel.": "Tracks the speaking states of users in a voice channel.",
  "The currently speaking users, mapped to the milliseconds since UNIX epoch at which they started speaking.": "The currently speaking users, mapped to the milliseconds since UNIX epoch at which they started speaking.",
  "The delay after a packet is received from a user until they're marked as not speaking anymore.": "The delay after a packet is received from a user until they're marked as not speaking anymore.",
  "A connection to the voice server of a Guild, can be used to play audio in voice channels.": "A connection to the voice server of a Guild, can be used to play audio in voice channels.",
  "The data required to establish the voice connection": "The data required to establish the voice connection",
  "The options used to create this voice connection": "The options used to create this voice connection",
  "The state of the voice connection.": "The state of the voice connection.",
  "A configuration storing all the data needed to reconnect to a Guild's voice server.": "A configuration storing all the data needed to reconnect to a Guild's voice server.",
  "The two packets needed to successfully establish a voice connection. They are received\nfrom the main Discord gateway after signalling to change the voice state.": "The two packets needed to successfully establish a voice connection. They are received\nfrom the main Discord gateway after signalling to change the voice state.",
  "The receiver of this voice connection. You should join the voice channel with `selfDeaf` set\nto false for this feature to work properly.": "The receiver of this voice connection. You should join the voice channel with `selfDeaf` set\nto false for this feature to work properly.",
  "The number of consecutive rejoin attempts. Initially 0, and increments for each rejoin.\nWhen a connection is successfully established, it resets to 0.": "The number of consecutive rejoin attempts. Initially 0, and increments for each rejoin.\nWhen a connection is successfully established, it resets to 0.",
  "The latest ping (in milliseconds) for the WebSocket connection and audio playback for this voice\nconnection, if this data is available.": "The latest ping (in milliseconds) for the WebSocket connection and audio playback for this voice\nconnection, if this data is available.",
  "The current state of the voice connection.": "The current state of the voice connection.",
  "Registers a `VOICE_SERVER_UPDATE` packet to the voice connection. This will cause it to reconnect using the\nnew data provided in the packet.": "Registers a `VOICE_SERVER_UPDATE` packet to the voice connection. This will cause it to reconnect using the\nnew data provided in the packet.",
  "The received `VOICE_SERVER_UPDATE` packet": "The received `VOICE_SERVER_UPDATE` packet",
  "Registers a `VOICE_STATE_UPDATE` packet to the voice connection. Most importantly, it stores the id of the\nchannel that the client is connected to.": "Registers a `VOICE_STATE_UPDATE` packet to the voice connection. Most importantly, it stores the id of the\nchannel that the client is connected to.",
  "The received `VOICE_STATE_UPDATE` packet": "The received `VOICE_STATE_UPDATE` packet",
  "Attempts to configure a networking instance for this voice connection using the received packets.\nBoth packets are required, and any existing networking instance will be destroyed.": "Attempts to configure a networking instance for this voice connection using the received packets.\nBoth packets are required, and any existing networking instance will be destroyed.",
  "Destroys the VoiceConnection, preventing it from connecting to voice again.\nThis method should be called when you no longer require the VoiceConnection to\nprevent memory leaks.": "Destroys the VoiceConnection, preventing it from connecting to voice again.\nThis method should be called when you no longer require the VoiceConnection to\nprevent memory leaks.",
  "Whether the adapter can be used": "Whether the adapter can be used",
  "Disconnects the VoiceConnection, allowing the possibility of rejoining later on.": "Disconnects the VoiceConnection, allowing the possibility of rejoining later on.",
  "Dispatches the previously prepared audio packet (if any)": "Dispatches the previously prepared audio packet (if any)",
  "Called when the networking instance for this connection closes. If the close code is 4014 (do not reconnect),\nthe voice connection will transition to the Disconnected state which will store the close code. You can\ndecide whether or not to reconnect when this occurs by listening for the state change and calling reconnect().": "Called when the networking instance for this connection closes. If the close code is 4014 (do not reconnect),\nthe voice connection will transition to the Disconnected state which will store the close code. You can\ndecide whether or not to reconnect when this occurs by listening for the state change and calling reconnect().",
  "The close code": "The close code",
  "Propagates debug messages from the underlying network instance.": "Propagates debug messages from the underlying network instance.",
  "The debug message to propagate": "The debug message to propagate",
  "Propagates errors from the underlying network instance.": "Propagates errors from the underlying network instance.",
  "The error to propagate": "The error to propagate",
  "Called when the state of the networking instance changes. This is used to derive the state of the voice connection.": "Called when the state of the networking instance changes. This is used to derive the state of the voice connection.",
  "The previous state": "The previous state",
  "The new state": "The new state",
  "Called when a subscription of this voice connection to an audio player is removed.": "Called when a subscription of this voice connection to an audio player is removed.",
  "The removed subscription": "The removed subscription",
  "Prepares an audio packet and dispatches it immediately.": "Prepares an audio packet and dispatches it immediately.",
  "The Opus packet to play": "The Opus packet to play",
  "Prepares an audio packet for dispatch.": "Prepares an audio packet for dispatch.",
  "The Opus packet to prepare": "The Opus packet to prepare",
  "Attempts to rejoin (better explanation soon:tm:)": "Attempts to rejoin (better explanation soon:tm:)",
  "Updates the speaking status of the voice connection. This is used when audio players are done playing audio,\nand need to signal that the connection is no longer playing audio.": "Updates the speaking status of the voice connection. This is used when audio players are done playing audio,\nand need to signal that the connection is no longer playing audio.",
  "Whether or not to show as speaking": "Whether or not to show as speaking",
  "Subscribes to an audio player, allowing the player to play audio on this voice connection.": "Subscribes to an audio player, allowing the player to play audio on this voice connection.",
  "The audio player to subscribe to": "The audio player to subscribe to",
  "Called when the networking state changes, and the new ws/udp packet/message handlers need to be rebound\nto the new instances.": "Called when the networking state changes, and the new ws/udp packet/message handlers need to be rebound\nto the new instances.",
  "The new networking state": "The new networking state",
  "The old networking state, if there is one": "The old networking state, if there is one",
  "Attaches to a VoiceConnection, allowing you to receive audio packets from other\nusers that are speaking.": "Attaches to a VoiceConnection, allowing you to receive audio packets from other\nusers that are speaking.",
  "The connection data of the receiver.": "The connection data of the receiver.",
  "The speaking map of the receiver.": "The speaking map of the receiver.",
  "Maps SSRCs to Discord user ids.": "Maps SSRCs to Discord user ids.",
  "The current audio subscriptions of this receiver.": "The current audio subscriptions of this receiver.",
  "The attached connection of this receiver.": "The attached connection of this receiver.",
  "Called when the UDP socket of the attached connection receives a message.": "Called when the UDP socket of the attached connection receives a message.",
  "The received message": "The received message",
  "Called when a packet is received on the attached connection's WebSocket.": "Called when a packet is received on the attached connection's WebSocket.",
  "The received packet": "The received packet",
  "Parses an audio packet, decrypting it to yield an Opus packet.": "Parses an audio packet, decrypting it to yield an Opus packet.",
  "The buffer to parse": "The buffer to parse",
  "The encryption mode": "The encryption mode",
  "The nonce buffer used by the connection for encryption": "The nonce buffer used by the connection for encryption",
  "The secret key used by the connection for encryption": "The secret key used by the connection for encryption",
  "Creates a subscription for the given user id.": "Creates a subscription for the given user id.",
  "When the player has paused itself. Only possible with the \"pause\" no subscriber behavior.": "When the player has paused itself. Only possible with the \"pause\" no subscriber behavior.",
  "When the player is waiting for an audio resource to become readable before transitioning to Playing.": "When the player is waiting for an audio resource to become readable before transitioning to Playing.",
  "When there is currently no resource for the player to be playing.": "When there is currently no resource for the player to be playing.",
  "When the player has been manually paused.": "When the player has been manually paused.",
  "When the player is actively playing an audio resource.": "When the player is actively playing an audio resource.",
  "The different behaviors an audio receive stream can have for deciding when to end.": "The different behaviors an audio receive stream can have for deciding when to end.",
  "The stream will end after a given time period of no audio packets.": "The stream will end after a given time period of no audio packets.",
  "The stream will end after a given time period of silence/no audio packets.": "The stream will end after a given time period of silence/no audio packets.",
  "The stream will only end when manually destroyed.": "The stream will only end when manually destroyed.",
  "Describes the behavior of the player when an audio packet is played but there are no available\nvoice connections to play to.": "Describes the behavior of the player when an audio packet is played but there are no available\nvoice connections to play to.",
  "Pauses playing the stream until a voice connection becomes available.": "Pauses playing the stream until a voice connection becomes available.",
  "Continues to play through the resource regardless.": "Continues to play through the resource regardless.",
  "The player stops and enters the Idle state.": "The player stops and enters the Idle state.",
  "The different types of stream that can exist within the pipeline.": "The different types of stream that can exist within the pipeline.",
  "The reasons a voice connection can be in the disconnected state.": "The reasons a voice connection can be in the disconnected state.",
  "When the adapter was unable to send a message requested by the VoiceConnection.": "When the adapter was unable to send a message requested by the VoiceConnection.",
  "When a VOICE_SERVER_UPDATE packet is received with a null endpoint, causing the connection to be severed.": "When a VOICE_SERVER_UPDATE packet is received with a null endpoint, causing the connection to be severed.",
  "When a manual disconnect was requested.": "When a manual disconnect was requested.",
  "When the WebSocket connection has been closed.": "When the WebSocket connection has been closed.",
  "The various status codes a voice connection can hold at any one time.": "The various status codes a voice connection can hold at any one time.",
  "The `VOICE_SERVER_UPDATE` and `VOICE_STATE_UPDATE` packets have been received, now attempting to establish a voice connection.": "The `VOICE_SERVER_UPDATE` and `VOICE_STATE_UPDATE` packets have been received, now attempting to establish a voice connection.",
  "The voice connection has been destroyed and untracked, it cannot be reused.": "The voice connection has been destroyed and untracked, it cannot be reused.",
  "The voice connection has either been severed or not established.": "The voice connection has either been severed or not established.",
  "A voice connection has been established, and is ready to be used.": "A voice connection has been established, and is ready to be used.",
  "Sending a packet to the main Discord gateway to indicate we want to change our voice state.": "Sending a packet to the main Discord gateway to indicate we want to change our voice state.",
  "The state that an AudioPlayer is in when it is waiting for a resource to become readable. Once this\nhappens, the AudioPlayer will enter the Playing state. If the resource ends/errors before this, then\nit will re-enter the Idle state.": "The state that an AudioPlayer is in when it is waiting for a resource to become readable. Once this\nhappens, the AudioPlayer will enter the Playing state. If the resource ends/errors before this, then\nit will re-enter the Idle state.",
  "The resource that the AudioPlayer is waiting for": "The resource that the AudioPlayer is waiting for",
  "The state that an AudioPlayer is in when it has no resource to play. This is the starting state.": "The state that an AudioPlayer is in when it has no resource to play. This is the starting state.",
  "The state that an AudioPlayer is in when it has either been explicitly paused by the user, or done\nautomatically by the AudioPlayer itself if there are no available subscribers.": "The state that an AudioPlayer is in when it has either been explicitly paused by the user, or done\nautomatically by the AudioPlayer itself if there are no available subscribers.",
  "The playback duration in milliseconds of the current audio resource. This includes filler silence packets\nthat have been played when the resource was buffering.": "The playback duration in milliseconds of the current audio resource. This includes filler silence packets\nthat have been played when the resource was buffering.",
  "The current resource of the audio player.": "The current resource of the audio player.",
  "How many silence packets still need to be played to avoid audio interpolation due to the stream suddenly pausing.": "How many silence packets still need to be played to avoid audio interpolation due to the stream suddenly pausing.",
  "The state that an AudioPlayer is in when it is actively playing an AudioResource. When playback ends,\nit will enter the Idle state.": "The state that an AudioPlayer is in when it is actively playing an AudioResource. When playback ends,\nit will enter the Idle state.",
  "The number of consecutive times that the audio resource has been unable to provide an Opus frame.": "The number of consecutive times that the audio resource has been unable to provide an Opus frame.",
  "The resource that is being played.": "The resource that is being played.",
  "When provided the corresponding `AbortController` can be used to cancel an asynchronous action.": "When provided the corresponding `AbortController` can be used to cancel an asynchronous action.",
  "Options that can be passed when creating an audio player, used to specify its behavior.": "Options that can be passed when creating an audio player, used to specify its behavior.",
  "Options that are set when creating a new audio resource.": "Options that are set when creating a new audio resource.",
  "Whether or not inline volume should be enabled. If enabled, you will be able to change the volume\nof the stream on-the-fly. However, this also increases the performance cost of playback. Defaults to `false`.": "Whether or not inline volume should be enabled. If enabled, you will be able to change the volume\nof the stream on-the-fly. However, this also increases the performance cost of playback. Defaults to `false`.",
  "The type of the input stream. Defaults to `StreamType.Arbitrary`.": "The type of the input stream. Defaults to `StreamType.Arbitrary`.",
  "Optional metadata that can be attached to the resource (e.g. track title, random id).\nThis is useful for identification purposes when the resource is passed around in events.\nSee {@link AudioResource.metadata}": "Optional metadata that can be attached to the resource (e.g. track title, random id).\nThis is useful for identification purposes when the resource is passed around in events.\nSee {@link AudioResource.metadata}",
  "The number of silence frames to append to the end of the resource's audio stream, to prevent interpolation glitches.\nDefaults to 5.": "The number of silence frames to append to the end of the resource's audio stream, to prevent interpolation glitches.\nDefaults to 5.",
  "The options that can be given when creating a voice connection.": "The options that can be given when creating a voice connection.",
  "If true, debug messages will be enabled for the voice connection and its\nrelated components. Defaults to false.": "If true, debug messages will be enabled for the voice connection and its\nrelated components. Defaults to false.",
  "Methods that are provided by the implementer of a Discord gateway DiscordGatewayAdapter.": "Methods that are provided by the implementer of a Discord gateway DiscordGatewayAdapter.",
  "This will be called by @discordjs/voice when the adapter can safely be destroyed as it will no\nlonger be used.": "This will be called by @discordjs/voice when the adapter can safely be destroyed as it will no\nlonger be used.",
  "Implement this method such that the given payload is sent to the main Discord gateway connection.": "Implement this method such that the given payload is sent to the main Discord gateway connection.",
  "Methods that are provided by the @discordjs/voice library to implementations of\nDiscord gateway DiscordGatewayAdapters.": "Methods that are provided by the @discordjs/voice library to implementations of\nDiscord gateway DiscordGatewayAdapters.",
  "Call this when the adapter can no longer be used (e.g. due to a disconnect from the main gateway)": "Call this when the adapter can no longer be used (e.g. due to a disconnect from the main gateway)",
  "Call this when you receive a VOICE_SERVER_UPDATE payload that is relevant to the adapter.": "Call this when you receive a VOICE_SERVER_UPDATE payload that is relevant to the adapter.",
  "Call this when you receive a VOICE_STATE_UPDATE payload that is relevant to the adapter.": "Call this when you receive a VOICE_STATE_UPDATE payload that is relevant to the adapter.",
  "The options that can be given when joining a voice channel.": "The options that can be given when joining a voice channel.",
  "The id of the Discord voice channel to join.": "The id of the Discord voice channel to join.",
  "An optional group identifier for the voice connection.": "An optional group identifier for the voice connection.",
  "The id of the guild that the voice channel belongs to.": "The id of the guild that the voice channel belongs to.",
  "Whether to join the channel deafened (defaults to true)": "Whether to join the channel deafened (defaults to true)",
  "Whether to join the channel muted (defaults to true)": "Whether to join the channel muted (defaults to true)",
  "The resulting information after probing an audio stream": "The resulting information after probing an audio stream",
  "The readable audio stream to use. You should use this rather than the input stream, as the probing\nfunction can sometimes read the input stream to its end and cause the stream to close.": "The readable audio stream to use. You should use this rather than the input stream, as the probing\nfunction can sometimes read the input stream to its end and cause the stream to close.",
  "The recommended stream type for this audio stream.": "The recommended stream type for this audio stream.",
  "The events that an SSRCMap may emit.": "The events that an SSRCMap may emit.",
  "The events that a SpeakingMap can emit.": "The events that a SpeakingMap can emit.",
  "Emitted when a user stops speaking.": "Emitted when a user stops speaking.",
  "Emitted when a user starts speaking.": "Emitted when a user starts speaking.",
  "The state that a VoiceConnection will be in when it is establishing a connection to a Discord\nvoice server.": "The state that a VoiceConnection will be in when it is establishing a connection to a Discord\nvoice server.",
  "The state that a VoiceConnection will be in when it has been permanently been destroyed by the\nuser and untracked by the library. It cannot be reconnected, instead, a new VoiceConnection\nneeds to be established.": "The state that a VoiceConnection will be in when it has been permanently been destroyed by the\nuser and untracked by the library. It cannot be reconnected, instead, a new VoiceConnection\nneeds to be established.",
  "The state that a VoiceConnection will be in when it is not connected to a Discord voice server nor is\nit attempting to connect. You can manually attempt to reconnect using VoiceConnection#reconnect.": "The state that a VoiceConnection will be in when it is not connected to a Discord voice server nor is\nit attempting to connect. You can manually attempt to reconnect using VoiceConnection#reconnect.",
  "The state that a VoiceConnection will be in when its WebSocket connection was closed.\nYou can manually attempt to reconnect using VoiceConnection#reconnect.": "The state that a VoiceConnection will be in when its WebSocket connection was closed.\nYou can manually attempt to reconnect using VoiceConnection#reconnect.",
  "The close code of the WebSocket connection to the Discord voice server.": "The close code of the WebSocket connection to the Discord voice server.",
  "The state that a VoiceConnection will be in when it has an active connection to a Discord\nvoice server.": "The state that a VoiceConnection will be in when it has an active connection to a Discord\nvoice server.",
  "The state that a VoiceConnection will be in when it is waiting to receive a VOICE_SERVER_UPDATE and\nVOICE_STATE_UPDATE packet from Discord, provided by the adapter.": "The state that a VoiceConnection will be in when it is waiting to receive a VOICE_SERVER_UPDATE and\nVOICE_STATE_UPDATE packet from Discord, provided by the adapter.",
  "The known data for a user in a Discord voice connection.": "The known data for a user in a Discord voice connection.",
  "The SSRC of the user's audio stream.": "The SSRC of the user's audio stream.",
  "The Discord user id of the user.": "The Discord user id of the user.",
  "The SSRC of the user's video stream (if one exists)\nCannot be 0. If undefined, the user has no video stream.": "The SSRC of the user's video stream (if one exists)\nCannot be 0. If undefined, the user has no video stream.",
  "The various states that the player can be in.": "The various states that the player can be in.",
  "A function used to build adapters. It accepts a methods parameter that contains functions that\ncan be called by the implementer when new data is received on its gateway connection. In return,\nthe implementer will return some methods that the library can call - e.g. to send messages on\nthe gateway, or to signal that the adapter can be removed.": "A function used to build adapters. It accepts a methods parameter that contains functions that\ncan be called by the implementer when new data is received on its gateway connection. In return,\nthe implementer will return some methods that the library can call - e.g. to send messages on\nthe gateway, or to signal that the adapter can be removed.",
  "The states that a VoiceConnection can be in when it is not connected to a Discord voice server nor is\nit attempting to connect. You can manually attempt to connect using VoiceConnection#reconnect.": "The states that a VoiceConnection can be in when it is not connected to a Discord voice server nor is\nit attempting to connect. You can manually attempt to connect using VoiceConnection#reconnect.",
  "The various states that a voice connection can be in.": "The various states that a voice connection can be in."
}