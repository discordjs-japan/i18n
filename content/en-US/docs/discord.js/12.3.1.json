{
  "General": "General",
  "Welcome": "Welcome",
  "<div align=\"center\">\n  <br />\n  <p>\n    <a href=\"https://discord.js.org\"><img src=\"/static/logo.svg\" width=\"546\" alt=\"discord.js\" id=\"djs-logo\" /></a>\n  </p>\n  <br />\n  <p>\n    <a href=\"https://discord.gg/bRCvFy9\"><img src=\"https://img.shields.io/discord/222078108977594368?color=7289da&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n    <a href=\"https://www.npmjs.com/package/discord.js\"><img src=\"https://img.shields.io/npm/v/discord.js.svg?maxAge=3600\" alt=\"NPM version\" /></a>\n    <a href=\"https://www.npmjs.com/package/discord.js\"><img src=\"https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600\" alt=\"NPM downloads\" /></a>\n    <a href=\"https://travis-ci.org/discordjs/discord.js\"><img src=\"https://travis-ci.org/discordjs/discord.js.svg\" alt=\"Build status\" /></a>\n    <a href=\"https://david-dm.org/discordjs/discord.js\"><img src=\"https://img.shields.io/david/discordjs/discord.js.svg?maxAge=3600\" alt=\"Dependencies\" /></a>\n    <a href=\"https://www.patreon.com/discordjs\"><img src=\"https://img.shields.io/badge/donate-patreon-F96854.svg\" alt=\"Patreon\" /></a>\n  </p>\n  <p>\n    <a href=\"https://nodei.co/npm/discord.js/\"><img src=\"https://nodei.co/npm/discord.js.png?downloads=true&stars=true\" alt=\"NPM info\" /></a>\n  </p>\n</div>\n\n# Welcome!\n\nWelcome to the discord.js v12 documentation.\n\n## About\n\ndiscord.js is a powerful [Node.js](https://nodejs.org) module that allows you to easily interact with the\n[Discord API](https://discord.com/developers/docs/intro).\n\n- Object-oriented\n- Predictable abstractions\n- Performant\n- 100% coverage of the Discord API\n\n## Installation\n\n**Node.js 12.0.0 or newer is required.**  \nIgnore any warnings about unmet peer dependencies, as they're all optional.\n\nWithout voice support: `npm install discord.js`  \nWith voice support ([@discordjs/opus](https://www.npmjs.com/package/@discordjs/opus)): `npm install discord.js @discordjs/opus`  \nWith voice support ([opusscript](https://www.npmjs.com/package/opusscript)): `npm install discord.js opusscript`\n\n### Audio engines\n\nThe preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus.\nUsing opusscript is only recommended for development environments where @discordjs/opus is tough to get working.\nFor production bots, using @discordjs/opus should be considered a necessity, especially if they're going to be running on multiple servers.\n\n### Optional packages\n\n- [zlib-sync](https://www.npmjs.com/package/zlib-sync) for WebSocket data compression and inflation (`npm install zlib-sync`)\n- [erlpack](https://github.com/discord/erlpack) for significantly faster WebSocket data (de)serialisation (`npm install discord/erlpack`)\n- One of the following packages can be installed for faster voice packet encryption and decryption:\n  - [sodium](https://www.npmjs.com/package/sodium) (`npm install sodium`)\n  - [libsodium.js](https://www.npmjs.com/package/libsodium-wrappers) (`npm install libsodium-wrappers`)\n- [bufferutil](https://www.npmjs.com/package/bufferutil) for a much faster WebSocket connection (`npm install bufferutil`)\n- [utf-8-validate](https://www.npmjs.com/package/utf-8-validate) in combination with `bufferutil` for much faster WebSocket processing (`npm install utf-8-validate`)\n\n## Example usage\n\n```js\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\n\nclient.on('ready', () => {\n  console.log(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', msg => {\n  if (msg.content === 'ping') {\n    msg.reply('pong');\n  }\n});\n\nclient.login('token');\n```\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))\n- [Documentation](https://discord.js.org/#/docs/main/master/general/welcome)\n- [Guide](https://discordjs.guide/) ([source](https://github.com/discordjs/guide)) - this is still for stable  \n  See also the WIP [Update Guide](https://discordjs.guide/additional-info/changes-in-v12.html) also including updated and removed items in the library.\n- [Discord.js Discord server](https://discord.gg/bRCvFy9)\n- [Discord API Discord server](https://discord.gg/discord-api)\n- [GitHub](https://github.com/discordjs/discord.js)\n- [NPM](https://www.npmjs.com/package/discord.js)\n- [Related libraries](https://discordapi.com/unofficial/libs.html)\n\n### Extensions\n\n- [RPC](https://www.npmjs.com/package/discord-rpc) ([source](https://github.com/discordjs/RPC))\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [Discord.js Server](https://discord.gg/bRCvFy9).\n": "<div align=\"center\">\n  <br />\n  <p>\n    <a href=\"https://discord.js.org\"><img src=\"/static/logo.svg\" width=\"546\" alt=\"discord.js\" id=\"djs-logo\" /></a>\n  </p>\n  <br />\n  <p>\n    <a href=\"https://discord.gg/bRCvFy9\"><img src=\"https://img.shields.io/discord/222078108977594368?color=7289da&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n    <a href=\"https://www.npmjs.com/package/discord.js\"><img src=\"https://img.shields.io/npm/v/discord.js.svg?maxAge=3600\" alt=\"NPM version\" /></a>\n    <a href=\"https://www.npmjs.com/package/discord.js\"><img src=\"https://img.shields.io/npm/dt/discord.js.svg?maxAge=3600\" alt=\"NPM downloads\" /></a>\n    <a href=\"https://travis-ci.org/discordjs/discord.js\"><img src=\"https://travis-ci.org/discordjs/discord.js.svg\" alt=\"Build status\" /></a>\n    <a href=\"https://david-dm.org/discordjs/discord.js\"><img src=\"https://img.shields.io/david/discordjs/discord.js.svg?maxAge=3600\" alt=\"Dependencies\" /></a>\n    <a href=\"https://www.patreon.com/discordjs\"><img src=\"https://img.shields.io/badge/donate-patreon-F96854.svg\" alt=\"Patreon\" /></a>\n  </p>\n  <p>\n    <a href=\"https://nodei.co/npm/discord.js/\"><img src=\"https://nodei.co/npm/discord.js.png?downloads=true&stars=true\" alt=\"NPM info\" /></a>\n  </p>\n</div>\n\n# Welcome!\n\nWelcome to the discord.js v12 documentation.\n\n## About\n\ndiscord.js is a powerful [Node.js](https://nodejs.org) module that allows you to easily interact with the\n[Discord API](https://discord.com/developers/docs/intro).\n\n- Object-oriented\n- Predictable abstractions\n- Performant\n- 100% coverage of the Discord API\n\n## Installation\n\n**Node.js 12.0.0 or newer is required.**  \nIgnore any warnings about unmet peer dependencies, as they're all optional.\n\nWithout voice support: `npm install discord.js`  \nWith voice support ([@discordjs/opus](https://www.npmjs.com/package/@discordjs/opus)): `npm install discord.js @discordjs/opus`  \nWith voice support ([opusscript](https://www.npmjs.com/package/opusscript)): `npm install discord.js opusscript`\n\n### Audio engines\n\nThe preferred audio engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus.\nUsing opusscript is only recommended for development environments where @discordjs/opus is tough to get working.\nFor production bots, using @discordjs/opus should be considered a necessity, especially if they're going to be running on multiple servers.\n\n### Optional packages\n\n- [zlib-sync](https://www.npmjs.com/package/zlib-sync) for WebSocket data compression and inflation (`npm install zlib-sync`)\n- [erlpack](https://github.com/discord/erlpack) for significantly faster WebSocket data (de)serialisation (`npm install discord/erlpack`)\n- One of the following packages can be installed for faster voice packet encryption and decryption:\n  - [sodium](https://www.npmjs.com/package/sodium) (`npm install sodium`)\n  - [libsodium.js](https://www.npmjs.com/package/libsodium-wrappers) (`npm install libsodium-wrappers`)\n- [bufferutil](https://www.npmjs.com/package/bufferutil) for a much faster WebSocket connection (`npm install bufferutil`)\n- [utf-8-validate](https://www.npmjs.com/package/utf-8-validate) in combination with `bufferutil` for much faster WebSocket processing (`npm install utf-8-validate`)\n\n## Example usage\n\n```js\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\n\nclient.on('ready', () => {\n  console.log(`Logged in as ${client.user.tag}!`);\n});\n\nclient.on('message', msg => {\n  if (msg.content === 'ping') {\n    msg.reply('pong');\n  }\n});\n\nclient.login('token');\n```\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))\n- [Documentation](https://discord.js.org/#/docs/main/master/general/welcome)\n- [Guide](https://discordjs.guide/) ([source](https://github.com/discordjs/guide)) - this is still for stable  \n  See also the WIP [Update Guide](https://discordjs.guide/additional-info/changes-in-v12.html) also including updated and removed items in the library.\n- [Discord.js Discord server](https://discord.gg/bRCvFy9)\n- [Discord API Discord server](https://discord.gg/discord-api)\n- [GitHub](https://github.com/discordjs/discord.js)\n- [NPM](https://www.npmjs.com/package/discord.js)\n- [Related libraries](https://discordapi.com/unofficial/libs.html)\n\n### Extensions\n\n- [RPC](https://www.npmjs.com/package/discord-rpc) ([source](https://github.com/discordjs/RPC))\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/master/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [Discord.js Server](https://discord.gg/bRCvFy9).\n",
  "Updating your code": "Updating your code",
  "# Version 12.0.0\n\nv12.0.0 contains many new and improved features, optimisations, and bug fixes.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/12.0.0) for a full list of changes.\nYou can also visit [the guide](https://discordjs.guide/additional-info/changes-in-v12.html) for help with updating your v11 code to v12.\n\n# Version 11.1.0\n\nv11.1.0 features improved voice and gateway stability, as well as support for new features such as audit logs and searching for messages.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/11.1.0) for a full list of changes, including\ninformation about deprecations.\n\n# Version 11\n\nVersion 11 contains loads of new and improved features, optimisations, and bug fixes.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/11.0.0) for a full list of changes.\n\n## Significant additions\n\n- Message Reactions and Embeds (rich text)\n- Support for uws and erlpack for better performance\n- OAuthApplication support\n- Web distributions\n\n## Breaking changes\n\n### Client.login() no longer supports logging in with email + password\n\nLogging in with an email and password has always been heavily discouraged since the advent of proper token support, but in v11 we have made the decision to completely remove the functionality, since Hammer & Chisel have [officially stated](https://github.com/hammerandchisel/discord-api-docs/issues/69#issuecomment-223886862) it simply shouldn't be done.\n\nUser accounts can still log in with tokens just like bot accounts. To obtain the token for a user account, you can log in to Discord with that account, and use Ctrl + Shift + I to open the developer tools. In the console tab, evaluating `localStorage.token` will give you the token for that account.\n\n### ClientUser.setEmail()/setPassword() now require the current password, as well as setUsername() on user accounts\n\nSince you can no longer log in with email and password, you must provide the current account password to the `setEmail()`, `setPassword()`, and `setUsername()` methods for user accounts (self-bots).\n\n### Removed TextBasedChannel.sendTTSMessage()\n\nThis method was deemed to be an entirely pointless shortcut that virtually nobody even used.\nThe same results can be achieved by passing options to `send()` or `sendMessage()`.\n\nExample:\n\n```js\nchannel.send('Hi there', { tts: true });\n```\n\n### Using Collection.find()/exists() with IDs will throw an error\n\nThis is simply to help prevent a common mistake that is made frequently.\nTo find something or check its existence using an ID, you should use `.get()` and `.has()` which are part of the [ES6 Map class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map), which Collection is an extension of.\n\n# Version 10\n\nVersion 10's non-BC changes focus on cleaning up some inconsistencies that exist in previous versions.\nUpgrading from v9 should be quick and painless.\n\n## Client options\n\nAll client options have been converted to camelCase rather than snake_case, and `max_message_cache` was renamed to `messageCacheMaxSize`.\n\nv9 code example:\n\n```js\nconst client = new Discord.Client({\n  disable_everyone: true,\n  max_message_cache: 500,\n  message_cache_lifetime: 120,\n  message_sweep_interval: 60,\n});\n```\n\nv10 code example:\n\n```js\nconst client = new Discord.Client({\n  disableEveryone: true,\n  messageCacheMaxSize: 500,\n  messageCacheLifetime: 120,\n  messageSweepInterval: 60,\n});\n```\n\n## Presences\n\nPresences have been completely restructured.\nPrevious versions of discord.js assumed that users had the same presence amongst all guilds - with the introduction of sharding, however, this is no longer the case.\n\nv9 discord.js code may look something like this:\n\n```js\nUser.status; // the status of the user\nUser.game; // the game that the user is playing\nClientUser.setStatus(status, game, url); // set the new status for the user\n```\n\nv10 moves presences to GuildMember instances. For the sake of simplicity, though, User classes also expose presences.\nWhen accessing a presence on a User object, it simply finds the first GuildMember for the user, and uses its presence.\nAdditionally, the introduction of the Presence class keeps all of the presence data organised.\n\n**It is strongly recommended that you use a GuildMember's presence where available, rather than a User.\nA user may have an entirely different presence between two different guilds.**\n\nv10 code:\n\n```js\nMemberOrUser.presence.status; // the status of the member or user\nMemberOrUser.presence.game; // the game that the member or user is playing\nClientUser.setStatus(status); // online, idle, dnd, offline\nClientUser.setGame(game, streamingURL); // a game\nClientUser.setPresence(fullPresence); // status and game combined\n```\n\n## Voice\n\nVoice has been rewritten internally, but in a backwards-compatible manner.\nThere is only one breaking change here; the `disconnected` event was renamed to `disconnect`.\nSeveral more events have been made available to a VoiceConnection, so see the documentation.\n\n## Events\n\nMany events have been renamed or had their arguments change.\n\n### Client events\n\n| Version 9                                      | Version 10                              |\n| ---------------------------------------------- | --------------------------------------- |\n| guildMemberAdd(guild, member)                  | guildMemberAdd(member)                  |\n| guildMemberAvailable(guild, member)            | guildMemberAvailable(member)            |\n| guildMemberRemove(guild, member)               | guildMemberRemove(member)               |\n| guildMembersChunk(guild, members)              | guildMembersChunk(members)              |\n| guildMemberUpdate(guild, oldMember, newMember) | guildMemberUpdate(oldMember, newMember) |\n| guildRoleCreate(guild, role)                   | roleCreate(role)                        |\n| guildRoleDelete(guild, role)                   | roleDelete(role)                        |\n| guildRoleUpdate(guild, oldRole, newRole)       | roleUpdate(oldRole, newRole)            |\n\nThe guild parameter that has been dropped from the guild-related events can still be derived using `member.guild` or `role.guild`.\n\n### VoiceConnection events\n\n| Version 9    | Version 10 |\n| ------------ | ---------- |\n| disconnected | disconnect |\n\n## Dates and timestamps\n\nAll dates/timestamps on the structures have been refactored to have a consistent naming scheme and availability.\nAll of them are named similarly to this:  \n**Date:** `Message.createdAt`  \n**Timestamp:** `Message.createdTimestamp`  \nSee the docs for each structure to see which date/timestamps are available on them.\n\n# Version 9\n\nThe version 9 (v9) rewrite takes a much more object-oriented approach than previous versions,\nwhich allows your code to be much more readable and manageable.\nIt's been rebuilt from the ground up and should be much more stable, fixing caching issues that affected\nolder versions. It also has support for newer Discord Features, such as emojis.\n\nVersion 9, while containing a sizable number of breaking changes, does not require much change in your code's logic -\nmost of the concepts are still the same, but loads of functions have been moved around.\nThe vast majority of methods you're used to using have been moved out of the Client class,\ninto other more relevant classes where they belong.\nBecause of this, you will need to convert most of your calls over to the new methods.\n\nHere are a few examples of methods that have changed:\n\n- `Client.sendMessage(channel, message)` ==> `TextChannel.sendMessage(message)`\n  - `Client.sendMessage(user, message)` ==> `User.sendMessage(message)`\n- `Client.updateMessage(message, \"New content\")` ==> `Message.edit(\"New Content\")`\n- `Client.getChannelLogs(channel, limit)` ==> `TextChannel.fetchMessages({options})`\n- `Server.detailsOfUser(User)` ==> `Server.members.get(User).properties` (retrieving a member gives a GuildMember object)\n- `Client.joinVoiceChannel(voicechannel)` => `VoiceChannel.join()`\n\nA couple more important details:\n\n- `Client.loginWithToken(\"token\")` ==> `client.login(\"token\")`\n- `Client.servers.length` ==> `client.guilds.size` (all instances of `server` are now `guild`)\n\n## No more callbacks!\n\nVersion 9 eschews callbacks in favour of Promises. This means all code relying on callbacks must be changed.  \nFor example, the following code:\n\n```js\nclient.getChannelLogs(channel, 100, function(messages) {\n  console.log(`${messages.length} messages found`);\n});\n```\n\n```js\nchannel.fetchMessages({ limit: 100 }).then(messages => {\n  console.log(`${messages.size} messages found`);\n});\n```\n": "# Version 12.0.0\n\nv12.0.0 contains many new and improved features, optimisations, and bug fixes.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/12.0.0) for a full list of changes.\nYou can also visit [the guide](https://discordjs.guide/additional-info/changes-in-v12.html) for help with updating your v11 code to v12.\n\n# Version 11.1.0\n\nv11.1.0 features improved voice and gateway stability, as well as support for new features such as audit logs and searching for messages.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/11.1.0) for a full list of changes, including\ninformation about deprecations.\n\n# Version 11\n\nVersion 11 contains loads of new and improved features, optimisations, and bug fixes.\nSee [the changelog](https://github.com/discordjs/discord.js/releases/tag/11.0.0) for a full list of changes.\n\n## Significant additions\n\n- Message Reactions and Embeds (rich text)\n- Support for uws and erlpack for better performance\n- OAuthApplication support\n- Web distributions\n\n## Breaking changes\n\n### Client.login() no longer supports logging in with email + password\n\nLogging in with an email and password has always been heavily discouraged since the advent of proper token support, but in v11 we have made the decision to completely remove the functionality, since Hammer & Chisel have [officially stated](https://github.com/hammerandchisel/discord-api-docs/issues/69#issuecomment-223886862) it simply shouldn't be done.\n\nUser accounts can still log in with tokens just like bot accounts. To obtain the token for a user account, you can log in to Discord with that account, and use Ctrl + Shift + I to open the developer tools. In the console tab, evaluating `localStorage.token` will give you the token for that account.\n\n### ClientUser.setEmail()/setPassword() now require the current password, as well as setUsername() on user accounts\n\nSince you can no longer log in with email and password, you must provide the current account password to the `setEmail()`, `setPassword()`, and `setUsername()` methods for user accounts (self-bots).\n\n### Removed TextBasedChannel.sendTTSMessage()\n\nThis method was deemed to be an entirely pointless shortcut that virtually nobody even used.\nThe same results can be achieved by passing options to `send()` or `sendMessage()`.\n\nExample:\n\n```js\nchannel.send('Hi there', { tts: true });\n```\n\n### Using Collection.find()/exists() with IDs will throw an error\n\nThis is simply to help prevent a common mistake that is made frequently.\nTo find something or check its existence using an ID, you should use `.get()` and `.has()` which are part of the [ES6 Map class](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map), which Collection is an extension of.\n\n# Version 10\n\nVersion 10's non-BC changes focus on cleaning up some inconsistencies that exist in previous versions.\nUpgrading from v9 should be quick and painless.\n\n## Client options\n\nAll client options have been converted to camelCase rather than snake_case, and `max_message_cache` was renamed to `messageCacheMaxSize`.\n\nv9 code example:\n\n```js\nconst client = new Discord.Client({\n  disable_everyone: true,\n  max_message_cache: 500,\n  message_cache_lifetime: 120,\n  message_sweep_interval: 60,\n});\n```\n\nv10 code example:\n\n```js\nconst client = new Discord.Client({\n  disableEveryone: true,\n  messageCacheMaxSize: 500,\n  messageCacheLifetime: 120,\n  messageSweepInterval: 60,\n});\n```\n\n## Presences\n\nPresences have been completely restructured.\nPrevious versions of discord.js assumed that users had the same presence amongst all guilds - with the introduction of sharding, however, this is no longer the case.\n\nv9 discord.js code may look something like this:\n\n```js\nUser.status; // the status of the user\nUser.game; // the game that the user is playing\nClientUser.setStatus(status, game, url); // set the new status for the user\n```\n\nv10 moves presences to GuildMember instances. For the sake of simplicity, though, User classes also expose presences.\nWhen accessing a presence on a User object, it simply finds the first GuildMember for the user, and uses its presence.\nAdditionally, the introduction of the Presence class keeps all of the presence data organised.\n\n**It is strongly recommended that you use a GuildMember's presence where available, rather than a User.\nA user may have an entirely different presence between two different guilds.**\n\nv10 code:\n\n```js\nMemberOrUser.presence.status; // the status of the member or user\nMemberOrUser.presence.game; // the game that the member or user is playing\nClientUser.setStatus(status); // online, idle, dnd, offline\nClientUser.setGame(game, streamingURL); // a game\nClientUser.setPresence(fullPresence); // status and game combined\n```\n\n## Voice\n\nVoice has been rewritten internally, but in a backwards-compatible manner.\nThere is only one breaking change here; the `disconnected` event was renamed to `disconnect`.\nSeveral more events have been made available to a VoiceConnection, so see the documentation.\n\n## Events\n\nMany events have been renamed or had their arguments change.\n\n### Client events\n\n| Version 9                                      | Version 10                              |\n| ---------------------------------------------- | --------------------------------------- |\n| guildMemberAdd(guild, member)                  | guildMemberAdd(member)                  |\n| guildMemberAvailable(guild, member)            | guildMemberAvailable(member)            |\n| guildMemberRemove(guild, member)               | guildMemberRemove(member)               |\n| guildMembersChunk(guild, members)              | guildMembersChunk(members)              |\n| guildMemberUpdate(guild, oldMember, newMember) | guildMemberUpdate(oldMember, newMember) |\n| guildRoleCreate(guild, role)                   | roleCreate(role)                        |\n| guildRoleDelete(guild, role)                   | roleDelete(role)                        |\n| guildRoleUpdate(guild, oldRole, newRole)       | roleUpdate(oldRole, newRole)            |\n\nThe guild parameter that has been dropped from the guild-related events can still be derived using `member.guild` or `role.guild`.\n\n### VoiceConnection events\n\n| Version 9    | Version 10 |\n| ------------ | ---------- |\n| disconnected | disconnect |\n\n## Dates and timestamps\n\nAll dates/timestamps on the structures have been refactored to have a consistent naming scheme and availability.\nAll of them are named similarly to this:  \n**Date:** `Message.createdAt`  \n**Timestamp:** `Message.createdTimestamp`  \nSee the docs for each structure to see which date/timestamps are available on them.\n\n# Version 9\n\nThe version 9 (v9) rewrite takes a much more object-oriented approach than previous versions,\nwhich allows your code to be much more readable and manageable.\nIt's been rebuilt from the ground up and should be much more stable, fixing caching issues that affected\nolder versions. It also has support for newer Discord Features, such as emojis.\n\nVersion 9, while containing a sizable number of breaking changes, does not require much change in your code's logic -\nmost of the concepts are still the same, but loads of functions have been moved around.\nThe vast majority of methods you're used to using have been moved out of the Client class,\ninto other more relevant classes where they belong.\nBecause of this, you will need to convert most of your calls over to the new methods.\n\nHere are a few examples of methods that have changed:\n\n- `Client.sendMessage(channel, message)` ==> `TextChannel.sendMessage(message)`\n  - `Client.sendMessage(user, message)` ==> `User.sendMessage(message)`\n- `Client.updateMessage(message, \"New content\")` ==> `Message.edit(\"New Content\")`\n- `Client.getChannelLogs(channel, limit)` ==> `TextChannel.fetchMessages({options})`\n- `Server.detailsOfUser(User)` ==> `Server.members.get(User).properties` (retrieving a member gives a GuildMember object)\n- `Client.joinVoiceChannel(voicechannel)` => `VoiceChannel.join()`\n\nA couple more important details:\n\n- `Client.loginWithToken(\"token\")` ==> `client.login(\"token\")`\n- `Client.servers.length` ==> `client.guilds.size` (all instances of `server` are now `guild`)\n\n## No more callbacks!\n\nVersion 9 eschews callbacks in favour of Promises. This means all code relying on callbacks must be changed.  \nFor example, the following code:\n\n```js\nclient.getChannelLogs(channel, 100, function(messages) {\n  console.log(`${messages.length} messages found`);\n});\n```\n\n```js\nchannel.fetchMessages({ limit: 100 }).then(messages => {\n  console.log(`${messages.size} messages found`);\n});\n```\n",
  "FAQ": "FAQ",
  "# Frequently Asked Questions\n\nThese questions are some of the most frequently asked.\n\n## No matter what, I get `SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode`‽\n\nUpdate to Node.js 12.0.0 or newer.\n\n## How do I get voice working?\n\n- Install FFMPEG.\n- Install either the `@discordjs/opus` package or the `opusscript` package.\n  @discordjs/opus is greatly preferred, due to it having significantly better performance.\n\n## How do I install FFMPEG?\n\n- **npm:** `npm install ffmpeg-static`\n- **Ubuntu 16.04:** `sudo apt install ffmpeg`\n- **Ubuntu 14.04:** `sudo apt-get install libav-tools`\n- **Windows:** `npm install ffmpeg-static` or see the [FFMPEG section of AoDude's guide](https://github.com/bdistin/OhGodMusicBot/blob/master/README.md#download-ffmpeg).\n\n## How do I set up @discordjs/opus?\n\n- **Ubuntu:** Simply run `npm install @discordjs/opus`, and it's done. Congrats!\n- **Windows:** Run `npm install --global --production windows-build-tools` in an admin command prompt or PowerShell.\n  Then, running `npm install @discordjs/opus` in your bot's directory should successfully build it. Woo!\n\nOther questions can be found at the [official Discord.js guide](https://discordjs.guide/popular-topics/common-questions.html)\nIf you have issues not listed here or on the guide, feel free to ask in the [official Discord.js server](https://discord.gg/bRCvFy9).\nAlways make sure to read the [documentation](https://discord.js.org/#/docs/main/stable/general/welcome).\n": "# Frequently Asked Questions\n\nThese questions are some of the most frequently asked.\n\n## No matter what, I get `SyntaxError: Block-scoped declarations (let, const, function, class) not yet supported outside strict mode`‽\n\nUpdate to Node.js 12.0.0 or newer.\n\n## How do I get voice working?\n\n- Install FFMPEG.\n- Install either the `@discordjs/opus` package or the `opusscript` package.\n  @discordjs/opus is greatly preferred, due to it having significantly better performance.\n\n## How do I install FFMPEG?\n\n- **npm:** `npm install ffmpeg-static`\n- **Ubuntu 16.04:** `sudo apt install ffmpeg`\n- **Ubuntu 14.04:** `sudo apt-get install libav-tools`\n- **Windows:** `npm install ffmpeg-static` or see the [FFMPEG section of AoDude's guide](https://github.com/bdistin/OhGodMusicBot/blob/master/README.md#download-ffmpeg).\n\n## How do I set up @discordjs/opus?\n\n- **Ubuntu:** Simply run `npm install @discordjs/opus`, and it's done. Congrats!\n- **Windows:** Run `npm install --global --production windows-build-tools` in an admin command prompt or PowerShell.\n  Then, running `npm install @discordjs/opus` in your bot's directory should successfully build it. Woo!\n\nOther questions can be found at the [official Discord.js guide](https://discordjs.guide/popular-topics/common-questions.html)\nIf you have issues not listed here or on the guide, feel free to ask in the [official Discord.js server](https://discord.gg/bRCvFy9).\nAlways make sure to read the [documentation](https://discord.js.org/#/docs/main/stable/general/welcome).\n",
  "Topics": "Topics",
  "Voice": "Voice",
  "# Introduction to Voice\n\nVoice in discord.js can be used for many things, such as music bots, recording or relaying audio.\n\nIn discord.js, you can use voice by connecting to a `VoiceChannel` to obtain a `VoiceConnection`, where you can start streaming and receiving audio.\n\nTo get started, make sure you have:\n\n- FFmpeg - `npm install ffmpeg-static`\n- an opus encoder, choose one from below:\n  - `npm install @discordjs/opus` (better performance)\n  - `npm install opusscript`\n- a good network connection\n\nThe preferred opus engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus.\nUsing opusscript is only recommended for development environments where @discordjs/opus is tough to get working.\nFor production bots, using @discordjs/opus should be considered a necessity, especially if they're going to be running on multiple servers.\n\n## Joining a voice channel\n\nThe example below reacts to a message and joins the sender's voice channel, catching any errors. This is important\nas it allows us to obtain a `VoiceConnection` that we can start to stream audio with.\n\n```js\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\n\nclient.login('token here');\n\nclient.on('message', async message => {\n  // Voice only works in guilds, if the message does not come from a guild,\n  // we ignore it\n  if (!message.guild) return;\n\n  if (message.content === '/join') {\n    // Only try to join the sender's voice channel if they are in one themselves\n    if (message.member.voice.channel) {\n      const connection = await message.member.voice.channel.join();\n    } else {\n      message.reply('You need to join a voice channel first!');\n    }\n  }\n});\n```\n\n## Streaming to a Voice Channel\n\nIn the previous example, we looked at how to join a voice channel in order to obtain a `VoiceConnection`. Now that we\nhave obtained a voice connection, we can start streaming audio to it.\n\n### Introduction to playing on voice connections\n\nThe most basic example of playing audio over a connection would be playing a local file:\n\n```js\nconst dispatcher = connection.play('/home/discord/audio.mp3');\n```\n\nThe `dispatcher` in this case is a `StreamDispatcher` - here you can control the volume and playback of the stream:\n\n```js\ndispatcher.pause();\ndispatcher.resume();\n\ndispatcher.setVolume(0.5); // half the volume\n\ndispatcher.on('finish', () => {\n  console.log('Finished playing!');\n});\n\ndispatcher.destroy(); // end the stream\n```\n\nWe can also pass in options when we first play the stream:\n\n```js\nconst dispatcher = connection.play('/home/discord/audio.mp3', {\n  volume: 0.5,\n});\n```\n\n### What can I play?\n\nDiscord.js allows you to play a lot of things:\n\n```js\n// ReadableStreams, in this example YouTube audio\nconst ytdl = require('ytdl-core');\nconnection.play(ytdl('https://www.youtube.com/watch?v=ZlAU_w7-Xp8', { filter: 'audioonly' }));\n\n// Files on the internet\nconnection.play('http://www.sample-videos.com/audio/mp3/wave.mp3');\n\n// Local files\nconnection.play('/home/discord/audio.mp3');\n```\n\nNew to v12 is the ability to play OggOpus and WebmOpus streams with much better performance by skipping out Ffmpeg. Note this comes at the cost of no longer having volume control over the stream:\n\n```js\nconnection.play(fs.createReadStream('./media.webm'), {\n  type: 'webm/opus',\n});\n\nconnection.play(fs.createReadStream('./media.ogg'), {\n  type: 'ogg/opus',\n});\n```\n\nMake sure to consult the documentation for a full list of what you can play - there's too much to cover here!\n\n## Voice Broadcasts\n\nA voice broadcast is very useful for \"radio\" bots, that play the same audio across multiple channels. It means audio is only transcoded once, and is much better on performance.\n\n```js\nconst broadcast = client.voice.createBroadcast();\n\nbroadcast.on('subscribe', dispatcher => {\n  console.log('New broadcast subscriber!');\n});\n\nbroadcast.on('unsubscribe', dispatcher => {\n  console.log('Channel unsubscribed from broadcast :(');\n});\n```\n\n`broadcast` is an instance of `VoiceBroadcast`, which has the same `play` method you are used to with regular VoiceConnections:\n\n```js\nconst dispatcher = broadcast.play('./audio.mp3');\n\nconnection.play(broadcast);\n```\n\nIt's important to note that the `dispatcher` stored above is a `BroadcastDispatcher` - it controls all the dispatcher subscribed to the broadcast, e.g. setting the volume of this dispatcher affects the volume of all subscribers.\n\n## Voice Receive\n\ncoming soon&trade;\n": "# Introduction to Voice\n\nVoice in discord.js can be used for many things, such as music bots, recording or relaying audio.\n\nIn discord.js, you can use voice by connecting to a `VoiceChannel` to obtain a `VoiceConnection`, where you can start streaming and receiving audio.\n\nTo get started, make sure you have:\n\n- FFmpeg - `npm install ffmpeg-static`\n- an opus encoder, choose one from below:\n  - `npm install @discordjs/opus` (better performance)\n  - `npm install opusscript`\n- a good network connection\n\nThe preferred opus engine is @discordjs/opus, as it performs significantly better than opusscript. When both are available, discord.js will automatically choose @discordjs/opus.\nUsing opusscript is only recommended for development environments where @discordjs/opus is tough to get working.\nFor production bots, using @discordjs/opus should be considered a necessity, especially if they're going to be running on multiple servers.\n\n## Joining a voice channel\n\nThe example below reacts to a message and joins the sender's voice channel, catching any errors. This is important\nas it allows us to obtain a `VoiceConnection` that we can start to stream audio with.\n\n```js\nconst Discord = require('discord.js');\nconst client = new Discord.Client();\n\nclient.login('token here');\n\nclient.on('message', async message => {\n  // Voice only works in guilds, if the message does not come from a guild,\n  // we ignore it\n  if (!message.guild) return;\n\n  if (message.content === '/join') {\n    // Only try to join the sender's voice channel if they are in one themselves\n    if (message.member.voice.channel) {\n      const connection = await message.member.voice.channel.join();\n    } else {\n      message.reply('You need to join a voice channel first!');\n    }\n  }\n});\n```\n\n## Streaming to a Voice Channel\n\nIn the previous example, we looked at how to join a voice channel in order to obtain a `VoiceConnection`. Now that we\nhave obtained a voice connection, we can start streaming audio to it.\n\n### Introduction to playing on voice connections\n\nThe most basic example of playing audio over a connection would be playing a local file:\n\n```js\nconst dispatcher = connection.play('/home/discord/audio.mp3');\n```\n\nThe `dispatcher` in this case is a `StreamDispatcher` - here you can control the volume and playback of the stream:\n\n```js\ndispatcher.pause();\ndispatcher.resume();\n\ndispatcher.setVolume(0.5); // half the volume\n\ndispatcher.on('finish', () => {\n  console.log('Finished playing!');\n});\n\ndispatcher.destroy(); // end the stream\n```\n\nWe can also pass in options when we first play the stream:\n\n```js\nconst dispatcher = connection.play('/home/discord/audio.mp3', {\n  volume: 0.5,\n});\n```\n\n### What can I play?\n\nDiscord.js allows you to play a lot of things:\n\n```js\n// ReadableStreams, in this example YouTube audio\nconst ytdl = require('ytdl-core');\nconnection.play(ytdl('https://www.youtube.com/watch?v=ZlAU_w7-Xp8', { filter: 'audioonly' }));\n\n// Files on the internet\nconnection.play('http://www.sample-videos.com/audio/mp3/wave.mp3');\n\n// Local files\nconnection.play('/home/discord/audio.mp3');\n```\n\nNew to v12 is the ability to play OggOpus and WebmOpus streams with much better performance by skipping out Ffmpeg. Note this comes at the cost of no longer having volume control over the stream:\n\n```js\nconnection.play(fs.createReadStream('./media.webm'), {\n  type: 'webm/opus',\n});\n\nconnection.play(fs.createReadStream('./media.ogg'), {\n  type: 'ogg/opus',\n});\n```\n\nMake sure to consult the documentation for a full list of what you can play - there's too much to cover here!\n\n## Voice Broadcasts\n\nA voice broadcast is very useful for \"radio\" bots, that play the same audio across multiple channels. It means audio is only transcoded once, and is much better on performance.\n\n```js\nconst broadcast = client.voice.createBroadcast();\n\nbroadcast.on('subscribe', dispatcher => {\n  console.log('New broadcast subscriber!');\n});\n\nbroadcast.on('unsubscribe', dispatcher => {\n  console.log('Channel unsubscribed from broadcast :(');\n});\n```\n\n`broadcast` is an instance of `VoiceBroadcast`, which has the same `play` method you are used to with regular VoiceConnections:\n\n```js\nconst dispatcher = broadcast.play('./audio.mp3');\n\nconnection.play(broadcast);\n```\n\nIt's important to note that the `dispatcher` stored above is a `BroadcastDispatcher` - it controls all the dispatcher subscribed to the broadcast, e.g. setting the volume of this dispatcher affects the volume of all subscribers.\n\n## Voice Receive\n\ncoming soon&trade;\n",
  "Web builds": "Web builds",
  "# Web builds\n\nIn addition to your usual Node applications, discord.js has special distributions available that are capable of running in web browsers.\nThis is useful for client-side web apps that need to interact with the Discord API.\n[Webpack 3](https://webpack.js.org/) is used to build these.\n\n## Restrictions\n\n- Any voice-related functionality is unavailable, as there is currently no audio encoding/decoding capabilities without external native libraries,\n  which web browsers do not support.\n- The ShardingManager cannot be used, since it relies on being able to spawn child processes for shards.\n- None of the native optional packages are usable.\n\n### Require Library\n\nIf you are making your own webpack project, you can require `discord.js/browser` wherever you need to use discord.js, like so:\n\n```js\nconst Discord = require('discord.js/browser');\n// do something with Discord like you normally would\n```\n\n### Webpack File\n\nYou can obtain your desired version of discord.js' web build from the [webpack branch](https://github.com/discordjs/discord.js/tree/webpack) of the GitHub repository.\nThere is a file for each branch and version of the library, and the ones ending in `.min.js` are minified to substantially reduce the size of the source code.\n\nInclude the file on the page just as you would any other JS library, like so:\n\n```html\n<script type=\"text/javascript\" src=\"discord.VERSION.min.js\"></script>\n```\n\nRather than importing discord.js with `require('discord.js')`, the entire `Discord` object is available as a global (on the `window`) object.\nThe usage of the API isn't any different from using it in Node.js.\n\n#### Example\n\n```html\n<script type=\"text/javascript\" src=\"discord.11.1.0.min.js\"></script>\n<script type=\"text/javascript\">\n  const client = new Discord.Client();\n\n  client.on('message', msg => {\n    const guildTag = msg.channel.type === 'text' ? `[${msg.guild.name}]` : '[DM]';\n    const channelTag = msg.channel.type === 'text' ? `[#${msg.channel.name}]` : '';\n    console.log(`${guildTag}${channelTag} ${msg.author.tag}: ${msg.content}`);\n  });\n\n  client.login('some crazy token');\n</script>\n```\n": "# Web builds\n\nIn addition to your usual Node applications, discord.js has special distributions available that are capable of running in web browsers.\nThis is useful for client-side web apps that need to interact with the Discord API.\n[Webpack 3](https://webpack.js.org/) is used to build these.\n\n## Restrictions\n\n- Any voice-related functionality is unavailable, as there is currently no audio encoding/decoding capabilities without external native libraries,\n  which web browsers do not support.\n- The ShardingManager cannot be used, since it relies on being able to spawn child processes for shards.\n- None of the native optional packages are usable.\n\n### Require Library\n\nIf you are making your own webpack project, you can require `discord.js/browser` wherever you need to use discord.js, like so:\n\n```js\nconst Discord = require('discord.js/browser');\n// do something with Discord like you normally would\n```\n\n### Webpack File\n\nYou can obtain your desired version of discord.js' web build from the [webpack branch](https://github.com/discordjs/discord.js/tree/webpack) of the GitHub repository.\nThere is a file for each branch and version of the library, and the ones ending in `.min.js` are minified to substantially reduce the size of the source code.\n\nInclude the file on the page just as you would any other JS library, like so:\n\n```html\n<script type=\"text/javascript\" src=\"discord.VERSION.min.js\"></script>\n```\n\nRather than importing discord.js with `require('discord.js')`, the entire `Discord` object is available as a global (on the `window`) object.\nThe usage of the API isn't any different from using it in Node.js.\n\n#### Example\n\n```html\n<script type=\"text/javascript\" src=\"discord.11.1.0.min.js\"></script>\n<script type=\"text/javascript\">\n  const client = new Discord.Client();\n\n  client.on('message', msg => {\n    const guildTag = msg.channel.type === 'text' ? `[${msg.guild.name}]` : '[DM]';\n    const channelTag = msg.channel.type === 'text' ? `[#${msg.channel.name}]` : '';\n    console.log(`${guildTag}${channelTag} ${msg.author.tag}: ${msg.content}`);\n  });\n\n  client.login('some crazy token');\n</script>\n```\n",
  "Partials": "Partials",
  "# Partials\n\nPartials allow you to receive events that contain uncached instances, providing structures that contain very minimal\ndata. For example, if you were to receive a `messageDelete` event with an uncached message, normally Discord.js would\ndiscard the event. With partials, you're able to receive the event, with a Message object that contains just an ID.\n\n## Opting in\n\nPartials are opt-in, and you can enable them in the Client options by specifying [PartialTypes](/#/docs/main/master/typedef/PartialType):\n\n```js\n// Accept partial messages, DM channels, and reactions when emitting events\nnew Client({ partials: ['MESSAGE', 'CHANNEL', 'REACTION'] });\n```\n\n## Usage & warnings\n\n<warn>The only guaranteed data a partial structure can store is its ID. All other properties/methods should be\nconsidered invalid/defunct while accessing a partial structure.</warn>\n\nAfter opting-in with the above, you begin to allow partial messages and channels in your caches, so it's important\nto check whether they're safe to access whenever you encounter them, whether it be in events or through normal cache\nusage.\n\nAll instance of structures that you opted-in for will have a `partial` property. As you'd expect, this value is `true`\nwhen the instance is partial. Partial structures are only guaranteed to contain an ID, any other properties and methods\nno longer carry their normal type guarantees.\n\nThis means you have to take time to consider possible parts of your program that might need checks put in place to\nprevent accessing partial data:\n\n```js\nclient.on('messageDelete', message => {\n  console.log(`${message.id} was deleted!`);\n  // Partial messages do not contain any content so skip them\n  if (!message.partial) {\n    console.log(`It had content: \"${message.content}\"`);\n  }\n});\n\n// You can also try to upgrade partials to full instances:\nclient.on('messageReactionAdd', async (reaction, user) => {\n  // If a message gains a reaction and it is uncached, fetch and cache the message\n  // You should account for any errors while fetching, it could return API errors if the resource is missing\n  if (reaction.message.partial) await reaction.message.fetch();\n  // Now the message has been cached and is fully available:\n  console.log(`${reaction.message.author}'s message \"${reaction.message.content}\" gained a reaction!`);\n  // Fetches and caches the reaction itself, updating resources that were possibly defunct.\n  if (reaction.partial) await reaction.fetch();\n  // Now the reaction is fully available and the properties will be reflected accurately:\n  console.log(`${reaction.count} user(s) have given the same reaction to this message!`);\n});\n```\n\n<info>If a message is deleted and both the message and channel are uncached, you must enable both 'MESSAGE' and\n'CHANNEL' in the client options to receive the messageDelete event.</info>\n\n## Why?\n\nThis allows developers to listen to events that contain uncached data, which is useful if you're running a moderation\nbot or any bot that relies on still receiving updates to resources you don't have cached -- message reactions are a\ngood example.\n\nCurrently, the only type of channel that can be uncached is a DM channel, there is no reason why guild channels should\nnot be cached.\n": "# Partials\n\nPartials allow you to receive events that contain uncached instances, providing structures that contain very minimal\ndata. For example, if you were to receive a `messageDelete` event with an uncached message, normally Discord.js would\ndiscard the event. With partials, you're able to receive the event, with a Message object that contains just an ID.\n\n## Opting in\n\nPartials are opt-in, and you can enable them in the Client options by specifying [PartialTypes](/#/docs/main/master/typedef/PartialType):\n\n```js\n// Accept partial messages, DM channels, and reactions when emitting events\nnew Client({ partials: ['MESSAGE', 'CHANNEL', 'REACTION'] });\n```\n\n## Usage & warnings\n\n<warn>The only guaranteed data a partial structure can store is its ID. All other properties/methods should be\nconsidered invalid/defunct while accessing a partial structure.</warn>\n\nAfter opting-in with the above, you begin to allow partial messages and channels in your caches, so it's important\nto check whether they're safe to access whenever you encounter them, whether it be in events or through normal cache\nusage.\n\nAll instance of structures that you opted-in for will have a `partial` property. As you'd expect, this value is `true`\nwhen the instance is partial. Partial structures are only guaranteed to contain an ID, any other properties and methods\nno longer carry their normal type guarantees.\n\nThis means you have to take time to consider possible parts of your program that might need checks put in place to\nprevent accessing partial data:\n\n```js\nclient.on('messageDelete', message => {\n  console.log(`${message.id} was deleted!`);\n  // Partial messages do not contain any content so skip them\n  if (!message.partial) {\n    console.log(`It had content: \"${message.content}\"`);\n  }\n});\n\n// You can also try to upgrade partials to full instances:\nclient.on('messageReactionAdd', async (reaction, user) => {\n  // If a message gains a reaction and it is uncached, fetch and cache the message\n  // You should account for any errors while fetching, it could return API errors if the resource is missing\n  if (reaction.message.partial) await reaction.message.fetch();\n  // Now the message has been cached and is fully available:\n  console.log(`${reaction.message.author}'s message \"${reaction.message.content}\" gained a reaction!`);\n  // Fetches and caches the reaction itself, updating resources that were possibly defunct.\n  if (reaction.partial) await reaction.fetch();\n  // Now the reaction is fully available and the properties will be reflected accurately:\n  console.log(`${reaction.count} user(s) have given the same reaction to this message!`);\n});\n```\n\n<info>If a message is deleted and both the message and channel are uncached, you must enable both 'MESSAGE' and\n'CHANNEL' in the client options to receive the messageDelete event.</info>\n\n## Why?\n\nThis allows developers to listen to events that contain uncached data, which is useful if you're running a moderation\nbot or any bot that relies on still receiving updates to resources you don't have cached -- message reactions are a\ngood example.\n\nCurrently, the only type of channel that can be uncached is a DM channel, there is no reason why guild channels should\nnot be cached.\n",
  "Examples": "Examples",
  "Ping": "Ping",
  "'use strict';\n\n/**\n * A ping pong bot, whenever you send \"ping\", it replies \"pong\".\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for messages\nclient.on('message', message => {\n  // If the message is \"ping\"\n  if (message.content === 'ping') {\n    // Send \"pong\" to the same channel\n    message.channel.send('pong');\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n": "'use strict';\n\n/**\n * A ping pong bot, whenever you send \"ping\", it replies \"pong\".\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for messages\nclient.on('message', message => {\n  // If the message is \"ping\"\n  if (message.content === 'ping') {\n    // Send \"pong\" to the same channel\n    message.channel.send('pong');\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n",
  "Avatars": "Avatars",
  "'use strict';\n\n/**\n * Send a user a link to their avatar\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for messages\nclient.on('message', message => {\n  // If the message is \"what is my avatar\"\n  if (message.content === 'what is my avatar') {\n    // Send the user's avatar URL\n    message.reply(message.author.displayAvatarURL());\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n": "'use strict';\n\n/**\n * Send a user a link to their avatar\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for messages\nclient.on('message', message => {\n  // If the message is \"what is my avatar\"\n  if (message.content === 'what is my avatar') {\n    // Send the user's avatar URL\n    message.reply(message.author.displayAvatarURL());\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n",
  "Attachments": "Attachments",
  "# Sending Attachments\n\nIn here you'll see a few examples showing how you can send an attachment using discord.js.\n\n## Sending an attachment using a URL\n\nThere are a few ways you can do this, but we'll show you the easiest.\n\nThe following examples use [MessageAttachment](/#/docs/main/master/class/MessageAttachment).\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('https://i.imgur.com/w3duR07.png');\n    // Send the attachment in the message channel\n    message.channel.send(attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd here is the result:\n\n![Image showing the result](/static/attachment-example1.png)\n\nBut what if you want to send an attachment with a message content? Fear not, for it is easy to do that too! We'll recommend reading [the TextChannel's \"send\" function documentation](/#/docs/main/master/class/TextChannel?scrollTo=send) to see what other options are available.\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('https://i.imgur.com/w3duR07.png');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author},`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd here's the result of this one:\n\n![Image showing the result](/static/attachment-example2.png)\n\n## Sending a local file or buffer\n\nSending a local file isn't hard either! We'll be using [MessageAttachment](/#/docs/main/master/class/MessageAttachment) for these examples too.\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('./rip.png');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author},`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nThe results are the same as the URL examples:\n\n![Image showing result](/static/attachment-example2.png)\n\nBut what if you have a buffer from an image? Or a text document? Well, it's the same as sending a local file or a URL!\n\nIn the following example, we'll be getting the buffer from a `memes.txt` file, and send it in the message channel.\nYou can use any buffer you want, and send it. Just make sure to overwrite the filename if it isn't an image!\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Import the native fs module\nconst fs = require('fs');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!memes'\n  if (message.content === '!memes') {\n    // Get the buffer from the 'memes.txt', assuming that the file exists\n    const buffer = fs.readFileSync('./memes.txt');\n\n    /**\n     * Create the attachment using MessageAttachment,\n     * overwritting the default file name to 'memes.txt'\n     * Read more about it over at\n     * http://discord.js.org/#/docs/main/master/class/MessageAttachment\n     */\n    const attachment = new MessageAttachment(buffer, 'memes.txt');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author}, here are your memes!`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd of course, the results are:\n\n![Attachment File example 3](/static/attachment-example3.png)\n": "# Sending Attachments\n\nIn here you'll see a few examples showing how you can send an attachment using discord.js.\n\n## Sending an attachment using a URL\n\nThere are a few ways you can do this, but we'll show you the easiest.\n\nThe following examples use [MessageAttachment](/#/docs/main/master/class/MessageAttachment).\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('https://i.imgur.com/w3duR07.png');\n    // Send the attachment in the message channel\n    message.channel.send(attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd here is the result:\n\n![Image showing the result](/static/attachment-example1.png)\n\nBut what if you want to send an attachment with a message content? Fear not, for it is easy to do that too! We'll recommend reading [the TextChannel's \"send\" function documentation](/#/docs/main/master/class/TextChannel?scrollTo=send) to see what other options are available.\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('https://i.imgur.com/w3duR07.png');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author},`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd here's the result of this one:\n\n![Image showing the result](/static/attachment-example2.png)\n\n## Sending a local file or buffer\n\nSending a local file isn't hard either! We'll be using [MessageAttachment](/#/docs/main/master/class/MessageAttachment) for these examples too.\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!rip'\n  if (message.content === '!rip') {\n    // Create the attachment using MessageAttachment\n    const attachment = new MessageAttachment('./rip.png');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author},`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nThe results are the same as the URL examples:\n\n![Image showing result](/static/attachment-example2.png)\n\nBut what if you have a buffer from an image? Or a text document? Well, it's the same as sending a local file or a URL!\n\nIn the following example, we'll be getting the buffer from a `memes.txt` file, and send it in the message channel.\nYou can use any buffer you want, and send it. Just make sure to overwrite the filename if it isn't an image!\n\n```js\n// Extract the required classes from the discord.js module\nconst { Client, MessageAttachment } = require('discord.js');\n\n// Import the native fs module\nconst fs = require('fs');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is '!memes'\n  if (message.content === '!memes') {\n    // Get the buffer from the 'memes.txt', assuming that the file exists\n    const buffer = fs.readFileSync('./memes.txt');\n\n    /**\n     * Create the attachment using MessageAttachment,\n     * overwritting the default file name to 'memes.txt'\n     * Read more about it over at\n     * http://discord.js.org/#/docs/main/master/class/MessageAttachment\n     */\n    const attachment = new MessageAttachment(buffer, 'memes.txt');\n    // Send the attachment in the message channel with a content\n    message.channel.send(`${message.author}, here are your memes!`, attachment);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd of course, the results are:\n\n![Attachment File example 3](/static/attachment-example3.png)\n",
  "Server greeting": "Server greeting",
  "'use strict';\n\n/**\n * A bot that welcomes new guild members when they join\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for new guild members\nclient.on('guildMemberAdd', member => {\n  // Send the message to a designated channel on a server:\n  const channel = member.guild.channels.cache.find(ch => ch.name === 'member-log');\n  // Do nothing if the channel wasn't found on this server\n  if (!channel) return;\n  // Send the message, mentioning the member\n  channel.send(`Welcome to the server, ${member}`);\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n": "'use strict';\n\n/**\n * A bot that welcomes new guild members when they join\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\n// Create an event listener for new guild members\nclient.on('guildMemberAdd', member => {\n  // Send the message to a designated channel on a server:\n  const channel = member.guild.channels.cache.find(ch => ch.name === 'member-log');\n  // Do nothing if the channel wasn't found on this server\n  if (!channel) return;\n  // Send the message, mentioning the member\n  channel.send(`Welcome to the server, ${member}`);\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n",
  "Message Embed": "Message Embed",
  "'use strict';\n\n/**\n * An example of how you can send embeds\n */\n\n// Extract the required classes from the discord.js module\nconst { Client, MessageEmbed } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is \"how to embed\"\n  if (message.content === 'how to embed') {\n    // We can create embeds using the MessageEmbed constructor\n    // Read more about all that you can do with the constructor\n    // over at https://discord.js.org/#/docs/main/master/class/MessageEmbed\n    const embed = new MessageEmbed()\n      // Set the title of the field\n      .setTitle('A slick little embed')\n      // Set the color of the embed\n      .setColor(0xff0000)\n      // Set the main content of the embed\n      .setDescription('Hello, this is a slick embed!');\n    // Send the embed to the same channel as the message\n    message.channel.send(embed);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n": "'use strict';\n\n/**\n * An example of how you can send embeds\n */\n\n// Extract the required classes from the discord.js module\nconst { Client, MessageEmbed } = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // If the message is \"how to embed\"\n  if (message.content === 'how to embed') {\n    // We can create embeds using the MessageEmbed constructor\n    // Read more about all that you can do with the constructor\n    // over at https://discord.js.org/#/docs/main/master/class/MessageEmbed\n    const embed = new MessageEmbed()\n      // Set the title of the field\n      .setTitle('A slick little embed')\n      // Set the color of the embed\n      .setColor(0xff0000)\n      // Set the main content of the embed\n      .setDescription('Hello, this is a slick embed!');\n    // Send the embed to the same channel as the message\n    message.channel.send(embed);\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n",
  "Moderation": "Moderation",
  "# Moderation\n\nIn here, you'll see some basic examples for kicking and banning a member.\n\n## Kicking a member\n\nLet's say you have a member that you'd like to kick. Here is an example of how you _can_ do it.\n\n```js\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // Ignore messages that aren't from a guild\n  if (!message.guild) return;\n\n  // If the message content starts with \"!kick\"\n  if (message.content.startsWith('!kick')) {\n    // Assuming we mention someone in the message, this will return the user\n    // Read more about mentions over at https://discord.js.org/#/docs/main/master/class/MessageMentions\n    const user = message.mentions.users.first();\n    // If we have a user mentioned\n    if (user) {\n      // Now we get the member from the user\n      const member = message.guild.member(user);\n      // If the member is in the guild\n      if (member) {\n        /**\n         * Kick the member\n         * Make sure you run this on a member, not a user!\n         * There are big differences between a user and a member\n         */\n        member\n          .kick('Optional reason that will display in the audit logs')\n          .then(() => {\n            // We let the message author know we were able to kick the person\n            message.reply(`Successfully kicked ${user.tag}`);\n          })\n          .catch(err => {\n            // An error happened\n            // This is generally due to the bot not being able to kick the member,\n            // either due to missing permissions or role hierarchy\n            message.reply('I was unable to kick the member');\n            // Log the error\n            console.error(err);\n          });\n      } else {\n        // The mentioned user isn't in this guild\n        message.reply(\"That user isn't in this guild!\");\n      }\n      // Otherwise, if no user was mentioned\n    } else {\n      message.reply(\"You didn't mention the user to kick!\");\n    }\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd the result is:\n\n![Image showing the result](/static/kick-example.png)\n\n## Banning a member\n\nBanning works the same way as kicking, but it has slightly more options that can be changed.\n\n```js\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // Ignore messages that aren't from a guild\n  if (!message.guild) return;\n\n  // if the message content starts with \"!ban\"\n  if (message.content.startsWith('!ban')) {\n    // Assuming we mention someone in the message, this will return the user\n    // Read more about mentions over at https://discord.js.org/#/docs/main/master/class/MessageMentions\n    const user = message.mentions.users.first();\n    // If we have a user mentioned\n    if (user) {\n      // Now we get the member from the user\n      const member = message.guild.member(user);\n      // If the member is in the guild\n      if (member) {\n        /**\n         * Ban the member\n         * Make sure you run this on a member, not a user!\n         * There are big differences between a user and a member\n         * Read more about what ban options there are over at\n         * https://discord.js.org/#/docs/main/master/class/GuildMember?scrollTo=ban\n         */\n        member\n          .ban({\n            reason: 'They were bad!',\n          })\n          .then(() => {\n            // We let the message author know we were able to ban the person\n            message.reply(`Successfully banned ${user.tag}`);\n          })\n          .catch(err => {\n            // An error happened\n            // This is generally due to the bot not being able to ban the member,\n            // either due to missing permissions or role hierarchy\n            message.reply('I was unable to ban the member');\n            // Log the error\n            console.error(err);\n          });\n      } else {\n        // The mentioned user isn't in this guild\n        message.reply(\"That user isn't in this guild!\");\n      }\n    } else {\n      // Otherwise, if no user was mentioned\n      message.reply(\"You didn't mention the user to ban!\");\n    }\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd the result is:\n\n![Image showing the result](/static/ban-example.png)\n": "# Moderation\n\nIn here, you'll see some basic examples for kicking and banning a member.\n\n## Kicking a member\n\nLet's say you have a member that you'd like to kick. Here is an example of how you _can_ do it.\n\n```js\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // Ignore messages that aren't from a guild\n  if (!message.guild) return;\n\n  // If the message content starts with \"!kick\"\n  if (message.content.startsWith('!kick')) {\n    // Assuming we mention someone in the message, this will return the user\n    // Read more about mentions over at https://discord.js.org/#/docs/main/master/class/MessageMentions\n    const user = message.mentions.users.first();\n    // If we have a user mentioned\n    if (user) {\n      // Now we get the member from the user\n      const member = message.guild.member(user);\n      // If the member is in the guild\n      if (member) {\n        /**\n         * Kick the member\n         * Make sure you run this on a member, not a user!\n         * There are big differences between a user and a member\n         */\n        member\n          .kick('Optional reason that will display in the audit logs')\n          .then(() => {\n            // We let the message author know we were able to kick the person\n            message.reply(`Successfully kicked ${user.tag}`);\n          })\n          .catch(err => {\n            // An error happened\n            // This is generally due to the bot not being able to kick the member,\n            // either due to missing permissions or role hierarchy\n            message.reply('I was unable to kick the member');\n            // Log the error\n            console.error(err);\n          });\n      } else {\n        // The mentioned user isn't in this guild\n        message.reply(\"That user isn't in this guild!\");\n      }\n      // Otherwise, if no user was mentioned\n    } else {\n      message.reply(\"You didn't mention the user to kick!\");\n    }\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd the result is:\n\n![Image showing the result](/static/kick-example.png)\n\n## Banning a member\n\nBanning works the same way as kicking, but it has slightly more options that can be changed.\n\n```js\n// Import the discord.js module\nconst Discord = require('discord.js');\n\n// Create an instance of a Discord client\nconst client = new Discord.Client();\n\n/**\n * The ready event is vital, it means that only _after_ this will your bot start reacting to information\n * received from Discord\n */\nclient.on('ready', () => {\n  console.log('I am ready!');\n});\n\nclient.on('message', message => {\n  // Ignore messages that aren't from a guild\n  if (!message.guild) return;\n\n  // if the message content starts with \"!ban\"\n  if (message.content.startsWith('!ban')) {\n    // Assuming we mention someone in the message, this will return the user\n    // Read more about mentions over at https://discord.js.org/#/docs/main/master/class/MessageMentions\n    const user = message.mentions.users.first();\n    // If we have a user mentioned\n    if (user) {\n      // Now we get the member from the user\n      const member = message.guild.member(user);\n      // If the member is in the guild\n      if (member) {\n        /**\n         * Ban the member\n         * Make sure you run this on a member, not a user!\n         * There are big differences between a user and a member\n         * Read more about what ban options there are over at\n         * https://discord.js.org/#/docs/main/master/class/GuildMember?scrollTo=ban\n         */\n        member\n          .ban({\n            reason: 'They were bad!',\n          })\n          .then(() => {\n            // We let the message author know we were able to ban the person\n            message.reply(`Successfully banned ${user.tag}`);\n          })\n          .catch(err => {\n            // An error happened\n            // This is generally due to the bot not being able to ban the member,\n            // either due to missing permissions or role hierarchy\n            message.reply('I was unable to ban the member');\n            // Log the error\n            console.error(err);\n          });\n      } else {\n        // The mentioned user isn't in this guild\n        message.reply(\"That user isn't in this guild!\");\n      }\n    } else {\n      // Otherwise, if no user was mentioned\n      message.reply(\"You didn't mention the user to ban!\");\n    }\n  }\n});\n\n// Log our bot in using the token from https://discord.com/developers/applications\nclient.login('your token here');\n```\n\nAnd the result is:\n\n![Image showing the result](/static/ban-example.png)\n",
  "Webhook": "Webhook",
  "'use strict';\n\n/**\n * Send a message using a webhook\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n/*\n * Create a new webhook\n * The Webhooks ID and token can be found in the URL, when you request that URL, or in the response body.\n * https://discord.com/api/webhooks/12345678910/T0kEn0fw3Bh00K\n *                                  ^^^^^^^^^^  ^^^^^^^^^^^^ \n *                                  Webhook ID  Webhook Token\n */\nconst hook = new Discord.WebhookClient('webhook id', 'webhook token');\n\n// Send a message using the webhook\nhook.send('I am now alive!');\n": "'use strict';\n\n/**\n * Send a message using a webhook\n */\n\n// Import the discord.js module\nconst Discord = require('discord.js');\n/*\n * Create a new webhook\n * The Webhooks ID and token can be found in the URL, when you request that URL, or in the response body.\n * https://discord.com/api/webhooks/12345678910/T0kEn0fw3Bh00K\n *                                  ^^^^^^^^^^  ^^^^^^^^^^^^ \n *                                  Webhook ID  Webhook Token\n */\nconst hook = new Discord.WebhookClient('webhook id', 'webhook token');\n\n// Send a message using the webhook\nhook.send('I am now alive!');\n",
  "The base class for all clients.": "The base class for all clients.",
  "Timeouts set by {@link BaseClient#setTimeout} that are still active": "Timeouts set by {@link BaseClient#setTimeout} that are still active",
  "Intervals set by {@link BaseClient#setInterval} that are still active": "Intervals set by {@link BaseClient#setInterval} that are still active",
  "Intervals set by {@link BaseClient#setImmediate} that are still active": "Intervals set by {@link BaseClient#setImmediate} that are still active",
  "The options the client was instantiated with": "The options the client was instantiated with",
  "The REST manager of the client": "The REST manager of the client",
  "API shortcut": "API shortcut",
  "Destroys all assets used by the base client.": "Destroys all assets used by the base client.",
  "Sets a timeout that will be automatically cancelled if the client is destroyed.": "Sets a timeout that will be automatically cancelled if the client is destroyed.",
  "Function to execute": "Function to execute",
  "Time to wait before executing (in milliseconds)": "Time to wait before executing (in milliseconds)",
  "Arguments for the function": "Arguments for the function",
  "Clears a timeout.": "Clears a timeout.",
  "Timeout to cancel": "Timeout to cancel",
  "Sets an interval that will be automatically cancelled if the client is destroyed.": "Sets an interval that will be automatically cancelled if the client is destroyed.",
  "Time to wait between executions (in milliseconds)": "Time to wait between executions (in milliseconds)",
  "Clears an interval.": "Clears an interval.",
  "Interval to cancel": "Interval to cancel",
  "Sets an immediate that will be automatically cancelled if the client is destroyed.": "Sets an immediate that will be automatically cancelled if the client is destroyed.",
  "Clears an immediate.": "Clears an immediate.",
  "Immediate to cancel": "Immediate to cancel",
  "Increments max listeners by one, if they are not zero.": "Increments max listeners by one, if they are not zero.",
  "Decrements max listeners by one, if they are not zero.": "Decrements max listeners by one, if they are not zero.",
  "The main hub for interacting with the Discord API, and the starting point for any bot.": "The main hub for interacting with the Discord API, and the starting point for any bot.",
  "Options for the client": "Options for the client",
  "The WebSocket manager of the client": "The WebSocket manager of the client",
  "The action manager of the client": "The action manager of the client",
  "The voice manager of the client (`null` in browsers)": "The voice manager of the client (`null` in browsers)",
  "Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})": "Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})",
  "All of the {@link User} objects that have been cached at any point, mapped by their IDs": "All of the {@link User} objects that have been cached at any point, mapped by their IDs",
  "All of the guilds the client is currently handling, mapped by their IDs -\nas long as sharding isn't being used, this will be *every* guild the bot is a member of": "All of the guilds the client is currently handling, mapped by their IDs -\nas long as sharding isn't being used, this will be *every* guild the bot is a member of",
  "All of the {@link Channel}s that the client is currently handling, mapped by their IDs -\nas long as sharding isn't being used, this will be *every* channel in *every* guild the bot\nis a member of. Note that DM channels will not be initially cached, and thus not be present\nin the Manager without their explicit fetching or use.": "All of the {@link Channel}s that the client is currently handling, mapped by their IDs -\nas long as sharding isn't being used, this will be *every* channel in *every* guild the bot\nis a member of. Note that DM channels will not be initially cached, and thus not be present\nin the Manager without their explicit fetching or use.",
  "The presence of the Client": "The presence of the Client",
  "Authorization token for the logged in bot.\nIf present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client\n<warn>This should be kept private at all times.</warn>": "Authorization token for the logged in bot.\nIf present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client\n<warn>This should be kept private at all times.</warn>",
  "User that the client is logged in as": "User that the client is logged in as",
  "Time at which the client was last regarded as being in the `READY` state\n(each time the client disconnects and successfully reconnects, this will be overwritten)": "Time at which the client was last regarded as being in the `READY` state\n(each time the client disconnects and successfully reconnects, this will be overwritten)",
  "All custom emojis that the client has access to, mapped by their IDs": "All custom emojis that the client has access to, mapped by their IDs",
  "Timestamp of the time the client was last `READY` at": "Timestamp of the time the client was last `READY` at",
  "How long it has been since the client last entered the `READY` state in milliseconds": "How long it has been since the client last entered the `READY` state in milliseconds",
  "Logs the client in, establishing a websocket connection to Discord.": "Logs the client in, establishing a websocket connection to Discord.",
  "Token of the account to log in with": "Token of the account to log in with",
  "Token of the account used": "Token of the account used",
  "Logs out, terminates the connection to Discord, and destroys the client.": "Logs out, terminates the connection to Discord, and destroys the client.",
  "Obtains an invite from Discord.": "Obtains an invite from Discord.",
  "Invite code or URL": "Invite code or URL",
  "Obtains a webhook from Discord.": "Obtains a webhook from Discord.",
  "ID of the webhook": "ID of the webhook",
  "Token for the webhook": "Token for the webhook",
  "Obtains the available voice regions from Discord.": "Obtains the available voice regions from Discord.",
  "Sweeps all text-based channels' messages and removes the ones older than the max message lifetime.\nIf the message has been edited, the time of the edit is used rather than the time of the original message.": "Sweeps all text-based channels' messages and removes the ones older than the max message lifetime.\nIf the message has been edited, the time of the edit is used rather than the time of the original message.",
  "Messages that are older than this (in seconds)\nwill be removed from the caches. The default is based on {@link ClientOptions#messageCacheLifetime}": "Messages that are older than this (in seconds)\nwill be removed from the caches. The default is based on {@link ClientOptions#messageCacheLifetime}",
  "Amount of messages that were removed from the caches,\nor -1 if the message cache lifetime is unlimited": "Amount of messages that were removed from the caches,\nor -1 if the message cache lifetime is unlimited",
  "Obtains the OAuth Application of this bot from Discord.": "Obtains the OAuth Application of this bot from Discord.",
  "Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.": "Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.",
  "The guild to fetch the preview for": "The guild to fetch the preview for",
  "Generates a link that can be used to invite the bot to a guild.": "Generates a link that can be used to invite the bot to a guild.",
  "Permissions to request": "Permissions to request",
  "Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script\nwith the client as `this`.": "Calls {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/eval} on a script\nwith the client as `this`.",
  "Script to eval": "Script to eval",
  "Validates the client options.": "Validates the client options.",
  "Options to validate": "Options to validate",
  "Emitted whenever a channel is created.": "Emitted whenever a channel is created.",
  "The channel that was created": "The channel that was created",
  "Emitted whenever a channel is deleted.": "Emitted whenever a channel is deleted.",
  "The channel that was deleted": "The channel that was deleted",
  "Emitted whenever a member is unbanned from a guild.": "Emitted whenever a member is unbanned from a guild.",
  "The guild that the unban occurred in": "The guild that the unban occurred in",
  "The user that was unbanned": "The user that was unbanned",
  "Emitted whenever a guild becomes unavailable, likely due to a server outage.": "Emitted whenever a guild becomes unavailable, likely due to a server outage.",
  "The guild that has become unavailable": "The guild that has become unavailable",
  "Emitted whenever a guild kicks the client or the guild is deleted/left.": "Emitted whenever a guild kicks the client or the guild is deleted/left.",
  "The guild that was deleted": "The guild that was deleted",
  "Emitted whenever a custom emoji is created in a guild.": "Emitted whenever a custom emoji is created in a guild.",
  "The emoji that was created": "The emoji that was created",
  "Emitted whenever a custom emoji is deleted in a guild.": "Emitted whenever a custom emoji is deleted in a guild.",
  "The emoji that was deleted": "The emoji that was deleted",
  "Emitted whenever a custom emoji is updated in a guild.": "Emitted whenever a custom emoji is updated in a guild.",
  "The old emoji": "The old emoji",
  "The new emoji": "The new emoji",
  "Emitted whenever a guild integration is updated": "Emitted whenever a guild integration is updated",
  "The guild whose integrations were updated": "The guild whose integrations were updated",
  "Emitted whenever a member leaves a guild, or is kicked.": "Emitted whenever a member leaves a guild, or is kicked.",
  "The member that has left/been kicked from the guild": "The member that has left/been kicked from the guild",
  "Emitted whenever a role is created.": "Emitted whenever a role is created.",
  "The role that was created": "The role that was created",
  "Emitted whenever a guild role is deleted.": "Emitted whenever a guild role is deleted.",
  "The role that was deleted": "The role that was deleted",
  "Emitted whenever a guild role is updated.": "Emitted whenever a guild role is updated.",
  "The role before the update": "The role before the update",
  "The role after the update": "The role after the update",
  "Emitted whenever a guild is updated - e.g. name change.": "Emitted whenever a guild is updated - e.g. name change.",
  "The guild before the update": "The guild before the update",
  "The guild after the update": "The guild after the update",
  "Emitted when an invite is created.\n<info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\nor `MANAGE_CHANNEL` permissions for the channel.</info>": "Emitted when an invite is created.\n<info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\nor `MANAGE_CHANNEL` permissions for the channel.</info>",
  "The invite that was created": "The invite that was created",
  "Emitted when an invite is deleted.\n<info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\nor `MANAGE_CHANNEL` permissions for the channel.</info>": "Emitted when an invite is deleted.\n<info> This event only triggers if the client has `MANAGE_GUILD` permissions for the guild,\nor `MANAGE_CHANNEL` permissions for the channel.</info>",
  "The invite that was deleted": "The invite that was deleted",
  "Emitted whenever a message is created.": "Emitted whenever a message is created.",
  "The created message": "The created message",
  "Emitted whenever a message is deleted.": "Emitted whenever a message is deleted.",
  "The deleted message": "The deleted message",
  "Emitted whenever messages are deleted in bulk.": "Emitted whenever messages are deleted in bulk.",
  "The deleted messages, mapped by their ID": "The deleted messages, mapped by their ID",
  "Emitted whenever a reaction is added to a cached message.": "Emitted whenever a reaction is added to a cached message.",
  "The reaction object": "The reaction object",
  "The user that applied the guild or reaction emoji": "The user that applied the guild or reaction emoji",
  "Emitted whenever a reaction is removed from a cached message.": "Emitted whenever a reaction is removed from a cached message.",
  "The user whose emoji or reaction emoji was removed": "The user whose emoji or reaction emoji was removed",
  "Emitted whenever all reactions are removed from a cached message.": "Emitted whenever all reactions are removed from a cached message.",
  "The message the reactions were removed from": "The message the reactions were removed from",
  "Emitted when a bot removes an emoji reaction from a cached message.": "Emitted when a bot removes an emoji reaction from a cached message.",
  "The reaction that was removed": "The reaction that was removed",
  "Emitted whenever a guild member's presence (e.g. status, activity) is changed.": "Emitted whenever a guild member's presence (e.g. status, activity) is changed.",
  "The presence before the update, if one at all": "The presence before the update, if one at all",
  "The presence after the update": "The presence after the update",
  "Emitted whenever a user's details (e.g. username) are changed.\nTriggered by the Discord gateway events USER_UPDATE, GUILD_MEMBER_UPDATE, and PRESENCE_UPDATE.": "Emitted whenever a user's details (e.g. username) are changed.\nTriggered by the Discord gateway events USER_UPDATE, GUILD_MEMBER_UPDATE, and PRESENCE_UPDATE.",
  "The user before the update": "The user before the update",
  "The user after the update": "The user after the update",
  "Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.": "Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.",
  "The voice state before the update": "The voice state before the update",
  "The voice state after the update": "The voice state after the update",
  "Emitted whenever a guild text channel has its webhooks changed.": "Emitted whenever a guild text channel has its webhooks changed.",
  "The channel that had a webhook update": "The channel that had a webhook update",
  "Emitted for general warnings.": "Emitted for general warnings.",
  "The warning": "The warning",
  "Emitted for general debugging information.": "Emitted for general debugging information.",
  "The debug information": "The debug information",
  "Emitted once a guild member changes speaking state.": "Emitted once a guild member changes speaking state.",
  "The member that started/stopped speaking": "The member that started/stopped speaking",
  "The speaking state of the member": "The speaking state of the member",
  "Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\nnot much information can be provided easily here - you need to manually check the pins yourself.": "Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event,\nnot much information can be provided easily here - you need to manually check the pins yourself.",
  "The channel that the pins update occurred in": "The channel that the pins update occurred in",
  "The time of the pins update": "The time of the pins update",
  "Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.": "Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.",
  "The channel before the update": "The channel before the update",
  "The channel after the update": "The channel after the update",
  "Emitted whenever a member is banned from a guild.": "Emitted whenever a member is banned from a guild.",
  "The guild that the ban occurred in": "The guild that the ban occurred in",
  "The user that was banned": "The user that was banned",
  "Emitted whenever the client joins a guild.": "Emitted whenever the client joins a guild.",
  "The created guild": "The created guild",
  "Emitted whenever a user joins a guild.": "Emitted whenever a user joins a guild.",
  "The member that has joined a guild": "The member that has joined a guild",
  "Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\nAlso emitted when the user's details (e.g. username) change.": "Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\nAlso emitted when the user's details (e.g. username) change.",
  "The member before the update": "The member before the update",
  "The member after the update": "The member after the update",
  "Emitted whenever a chunk of guild members is received (all members come from the same guild).": "Emitted whenever a chunk of guild members is received (all members come from the same guild).",
  "The members in the chunk": "The members in the chunk",
  "The guild related to the member chunk": "The guild related to the member chunk",
  "Properties of the received chunk": "Properties of the received chunk",
  "Index of the received chunk": "Index of the received chunk",
  "Number of chunks the client should receive": "Number of chunks the client should receive",
  "Nonce for this chunk": "Nonce for this chunk",
  "Emitted whenever a message is updated - e.g. embed or content change.": "Emitted whenever a message is updated - e.g. embed or content change.",
  "The message before the update": "The message before the update",
  "The message after the update": "The message after the update",
  "Emitted when a shard resumes successfully.": "Emitted when a shard resumes successfully.",
  "The shard ID that resumed": "The shard ID that resumed",
  "The amount of replayed events": "The amount of replayed events",
  "Emitted whenever a user starts typing in a channel.": "Emitted whenever a user starts typing in a channel.",
  "The channel the user started typing in": "The channel the user started typing in",
  "The user that started typing": "The user that started typing",
  "Emitted when a shard turns ready.": "Emitted when a shard turns ready.",
  "The shard ID that turned ready": "The shard ID that turned ready",
  "Set of unavailable guild IDs, if any": "Set of unavailable guild IDs, if any",
  "Emitted when a shard's WebSocket disconnects and will no longer reconnect.": "Emitted when a shard's WebSocket disconnects and will no longer reconnect.",
  "The WebSocket close event": "The WebSocket close event",
  "The shard ID that disconnected": "The shard ID that disconnected",
  "Emitted when a shard is attempting to reconnect or re-identify.": "Emitted when a shard is attempting to reconnect or re-identify.",
  "The shard ID that is attempting to reconnect": "The shard ID that is attempting to reconnect",
  "Emitted when the client's session becomes invalidated.\nYou are expected to handle closing the process gracefully and preventing a boot loop\nif you are listening to this event.": "Emitted when the client's session becomes invalidated.\nYou are expected to handle closing the process gracefully and preventing a boot loop\nif you are listening to this event.",
  "Emitted when the client becomes ready to start working.": "Emitted when the client becomes ready to start working.",
  "Emitted whenever a shard's WebSocket encounters a connection error.": "Emitted whenever a shard's WebSocket encounters a connection error.",
  "The encountered error": "The encountered error",
  "The shard that encountered this error": "The shard that encountered this error",
  "Emitted when the client hits a rate limit while making a request": "Emitted when the client hits a rate limit while making a request",
  "Object containing the rate limit info": "Object containing the rate limit info",
  "Timeout in ms": "Timeout in ms",
  "Number of requests that can be made to this endpoint": "Number of requests that can be made to this endpoint",
  "HTTP method used for request that triggered this event": "HTTP method used for request that triggered this event",
  "Path used for request that triggered this event": "Path used for request that triggered this event",
  "Route used for request that triggered this event": "Route used for request that triggered this event",
  "Emitted when the client encounters an error.": "Emitted when the client encounters an error.",
  "The error encountered": "The error encountered",
  "Manages voice connections for the client": "Manages voice connections for the client",
  "The client that instantiated this voice manager": "The client that instantiated this voice manager",
  "A collection mapping connection IDs to the Connection objects": "A collection mapping connection IDs to the Connection objects",
  "Active voice broadcasts that have been created": "Active voice broadcasts that have been created",
  "Creates a voice broadcast.": "Creates a voice broadcast.",
  "Sets up a request to join a voice channel.": "Sets up a request to join a voice channel.",
  "The voice channel to join": "The voice channel to join",
  "The class that sends voice packet data to the voice connection.": "The class that sends voice packet data to the voice connection.",
  "The Audio Player that controls this dispatcher": "The Audio Player that controls this dispatcher",
  "The time that the stream was paused at (null if not paused)": "The time that the stream was paused at (null if not paused)",
  "The broadcast controlling this dispatcher, if any": "The broadcast controlling this dispatcher, if any",
  "Whether or not playback is paused": "Whether or not playback is paused",
  "Total time that this dispatcher has been paused in milliseconds": "Total time that this dispatcher has been paused in milliseconds",
  "The time (in milliseconds) that the dispatcher has actually been playing audio for": "The time (in milliseconds) that the dispatcher has actually been playing audio for",
  "The time (in milliseconds) that the dispatcher has been playing audio for, taking into account skips and pauses": "The time (in milliseconds) that the dispatcher has been playing audio for, taking into account skips and pauses",
  "Whether or not the Opus bitrate of this stream is editable": "Whether or not the Opus bitrate of this stream is editable",
  "Whether or not the volume of this stream is editable": "Whether or not the volume of this stream is editable",
  "The current volume of the stream": "The current volume of the stream",
  "The current volume of the stream in decibels": "The current volume of the stream in decibels",
  "The current volume of the stream from a logarithmic scale": "The current volume of the stream from a logarithmic scale",
  "Set the bitrate of the current Opus encoder if using a compatible Opus stream.": "Set the bitrate of the current Opus encoder if using a compatible Opus stream.",
  "New bitrate, in kbps\nIf set to 'auto', 48kbps will be used": "New bitrate, in kbps\nIf set to 'auto', 48kbps will be used",
  "true if the bitrate has been successfully changed.": "true if the bitrate has been successfully changed.",
  "Pauses playback": "Pauses playback",
  "Whether to play silence while paused to prevent audio glitches": "Whether to play silence while paused to prevent audio glitches",
  "Resumes playback": "Resumes playback",
  "Sets the expected packet loss percentage if using a compatible Opus stream.": "Sets the expected packet loss percentage if using a compatible Opus stream.",
  "between 0 and 1": "between 0 and 1",
  "Returns true if it was successfully set.": "Returns true if it was successfully set.",
  "Enables or disables forward error correction if using a compatible Opus stream.": "Enables or disables forward error correction if using a compatible Opus stream.",
  "true to enable": "true to enable",
  "Sets the volume relative to the input stream - i.e. 1 is normal, 0.5 is half, 2 is double.": "Sets the volume relative to the input stream - i.e. 1 is normal, 0.5 is half, 2 is double.",
  "The volume that you want to set": "The volume that you want to set",
  "Sets the volume in decibels.": "Sets the volume in decibels.",
  "The decibels": "The decibels",
  "Sets the volume so that a perceived value of 0.5 is half the perceived volume etc.": "Sets the volume so that a perceived value of 0.5 is half the perceived volume etc.",
  "The value for the volume": "The value for the volume",
  "Emitted when the dispatcher encounters an error.": "Emitted when the dispatcher encounters an error.",
  "Emitted once the stream has started to play.": "Emitted once the stream has started to play.",
  "Emitted whenever the dispatcher has debug information.": "Emitted whenever the dispatcher has debug information.",
  "The debug info": "The debug info",
  "Emitted when the dispatcher starts/stops speaking.": "Emitted when the dispatcher starts/stops speaking.",
  "Whether or not the dispatcher is speaking": "Whether or not the dispatcher is speaking",
  "Emitted when the volume of this dispatcher changes.": "Emitted when the volume of this dispatcher changes.",
  "The old volume of this dispatcher": "The old volume of this dispatcher",
  "The new volume of this dispatcher": "The new volume of this dispatcher",
  "The class that sends voice packet data to the voice connection.\n```js\n// Obtained using:\nvoiceChannel.join().then(connection => {\n  // You can play a file or a stream here:\n  const dispatcher = connection.play('/home/hydrabolt/audio.mp3');\n});\n```": "The class that sends voice packet data to the voice connection.\n```js\n// Obtained using:\nvoiceChannel.join().then(connection => {\n  // You can play a file or a stream here:\n  const dispatcher = connection.play('/home/hydrabolt/audio.mp3');\n});\n```",
  "New bitrate, in kbps\nIf set to 'auto', the voice channel's bitrate will be used": "New bitrate, in kbps\nIf set to 'auto', the voice channel's bitrate will be used",
  "Represents a UDP client for a Voice Connection.": "Represents a UDP client for a Voice Connection.",
  "The voice connection that this UDP client serves": "The voice connection that this UDP client serves",
  "The UDP socket": "The UDP socket",
  "The address of the Discord voice server": "The address of the Discord voice server",
  "The local IP address": "The local IP address",
  "The local port": "The local port",
  "The port of the Discord voice server": "The port of the Discord voice server",
  "Send a packet to the UDP client.": "Send a packet to the UDP client.",
  "The packet to send": "The packet to send",
  "Represents a Voice Connection's WebSocket.": "Represents a Voice Connection's WebSocket.",
  "The Voice Connection that this WebSocket serves": "The Voice Connection that this WebSocket serves",
  "How many connection attempts have been made": "How many connection attempts have been made",
  "The client of this voice WebSocket": "The client of this voice WebSocket",
  "The actual WebSocket used to connect to the Voice WebSocket Server.": "The actual WebSocket used to connect to the Voice WebSocket Server.",
  "Resets the current WebSocket.": "Resets the current WebSocket.",
  "Starts connecting to the Voice WebSocket Server.": "Starts connecting to the Voice WebSocket Server.",
  "Sends data to the WebSocket if it is open.": "Sends data to the WebSocket if it is open.",
  "The data to send to the WebSocket": "The data to send to the WebSocket",
  "JSON.stringify's a packet and then sends it to the WebSocket Server.": "JSON.stringify's a packet and then sends it to the WebSocket Server.",
  "Called whenever the WebSocket opens.": "Called whenever the WebSocket opens.",
  "Called whenever a message is received from the WebSocket.": "Called whenever a message is received from the WebSocket.",
  "The message event that was received": "The message event that was received",
  "Called whenever the connection to the WebSocket server is lost.": "Called whenever the connection to the WebSocket server is lost.",
  "Called whenever an error occurs with the WebSocket.": "Called whenever an error occurs with the WebSocket.",
  "The error that occurred": "The error that occurred",
  "Called whenever a valid packet is received from the WebSocket.": "Called whenever a valid packet is received from the WebSocket.",
  "The received packet": "The received packet",
  "Sets an interval at which to send a heartbeat packet to the WebSocket.": "Sets an interval at which to send a heartbeat packet to the WebSocket.",
  "The interval at which to send a heartbeat packet": "The interval at which to send a heartbeat packet",
  "Clears a heartbeat interval, if one exists.": "Clears a heartbeat interval, if one exists.",
  "Sends a heartbeat packet.": "Sends a heartbeat packet.",
  "Emitted once the voice WebSocket receives the ready packet.": "Emitted once the voice WebSocket receives the ready packet.",
  "Emitted once the Voice Websocket receives a description of this voice session.": "Emitted once the Voice Websocket receives a description of this voice session.",
  "Emitted whenever a speaking packet is received.": "Emitted whenever a speaking packet is received.",
  "Emitted when an unhandled packet is received.": "Emitted when an unhandled packet is received.",
  "Emitted whenever the voice WebSocket encounters a non-fatal error.": "Emitted whenever the voice WebSocket encounters a non-fatal error.",
  "An Audio Player for a Voice Connection.": "An Audio Player for a Voice Connection.",
  "The voice connection that the player serves": "The voice connection that the player serves",
  "The broadcast that the player serves": "The broadcast that the player serves",
  "Receives audio packets from a voice connection.": "Receives audio packets from a voice connection.",
  "Creates a new audio receiving stream. If a stream already exists for a user, then that stream will be returned\nrather than generating a new one.": "Creates a new audio receiving stream. If a stream already exists for a user, then that stream will be returned\nrather than generating a new one.",
  "The user to start listening to.": "The user to start listening to.",
  "Options.": "Options.",
  "Emitted whenever there is a warning": "Emitted whenever there is a warning",
  "The error or message to debug": "The error or message to debug",
  "An interface class to allow you to play audio over VoiceConnections and VoiceBroadcasts.": "An interface class to allow you to play audio over VoiceConnections and VoiceBroadcasts.",
  "Play an audio resource.": "Play an audio resource.",
  "The resource to play.": "The resource to play.",
  "The options to play.": "The options to play.",
  "An interface class for volume transformation.": "An interface class for volume transformation.",
  "Emitted when the volume of this interface changes.": "Emitted when the volume of this interface changes.",
  "The old volume of this interface": "The old volume of this interface",
  "The new volume of this interface": "The new volume of this interface",
  "A voice broadcast can be played across multiple voice connections for improved shared-stream efficiency.\n\nExample usage:\n```js\nconst broadcast = client.voice.createBroadcast();\nbroadcast.play('./music.mp3');\n// Play \"music.mp3\" in all voice connections that the client is in\nfor (const connection of client.voice.connections.values()) {\n  connection.play(broadcast);\n}\n```": "A voice broadcast can be played across multiple voice connections for improved shared-stream efficiency.\n\nExample usage:\n```js\nconst broadcast = client.voice.createBroadcast();\nbroadcast.play('./music.mp3');\n// Play \"music.mp3\" in all voice connections that the client is in\nfor (const connection of client.voice.connections.values()) {\n  connection.play(broadcast);\n}\n```",
  "The client that created the broadcast": "The client that created the broadcast",
  "The subscribed StreamDispatchers of this broadcast": "The subscribed StreamDispatchers of this broadcast",
  "The current master dispatcher, if any. This dispatcher controls all that is played by subscribed dispatchers.": "The current master dispatcher, if any. This dispatcher controls all that is played by subscribed dispatchers.",
  "Ends the broadcast, unsubscribing all subscribed channels and deleting the broadcast": "Ends the broadcast, unsubscribing all subscribed channels and deleting the broadcast",
  "Emitted whenever a stream dispatcher subscribes to the broadcast.": "Emitted whenever a stream dispatcher subscribes to the broadcast.",
  "The subscribed dispatcher": "The subscribed dispatcher",
  "Emitted whenever a stream dispatcher unsubscribes to the broadcast.": "Emitted whenever a stream dispatcher unsubscribes to the broadcast.",
  "The unsubscribed dispatcher": "The unsubscribed dispatcher",
  "Represents a connection to a guild's voice server.\n```js\n// Obtained using:\nvoiceChannel.join()\n  .then(connection => {\n\n  });\n```": "Represents a connection to a guild's voice server.\n```js\n// Obtained using:\nvoiceChannel.join()\n  .then(connection => {\n\n  });\n```",
  "The voice manager that instantiated this connection": "The voice manager that instantiated this connection",
  "The voice channel this connection is currently serving": "The voice channel this connection is currently serving",
  "The current status of the voice connection": "The current status of the voice connection",
  "Our current speaking state": "Our current speaking state",
  "The authentication data needed to connect to the voice server": "The authentication data needed to connect to the voice server",
  "The audio player for this voice connection": "The audio player for this voice connection",
  "Map SSRC values to user IDs": "Map SSRC values to user IDs",
  "Tracks which users are talking": "Tracks which users are talking",
  "Object that wraps contains the `ws` and `udp` sockets of this voice connection": "Object that wraps contains the `ws` and `udp` sockets of this voice connection",
  "The voice receiver of this connection": "The voice receiver of this connection",
  "The client that instantiated this connection": "The client that instantiated this connection",
  "The current stream dispatcher (if any)": "The current stream dispatcher (if any)",
  "The voice state of this connection": "The voice state of this connection",
  "Sets whether the voice connection should display as \"speaking\", \"soundshare\" or \"none\".": "Sets whether the voice connection should display as \"speaking\", \"soundshare\" or \"none\".",
  "The new speaking state": "The new speaking state",
  "Sends a request to the main gateway to join a voice channel.": "Sends a request to the main gateway to join a voice channel.",
  "The options to provide": "The options to provide",
  "Set the token and endpoint required to connect to the voice servers.": "Set the token and endpoint required to connect to the voice servers.",
  "The voice token": "The voice token",
  "The voice endpoint": "The voice endpoint",
  "Sets the Session ID for the connection.": "Sets the Session ID for the connection.",
  "The voice session ID": "The voice session ID",
  "Checks whether the voice connection is authenticated.": "Checks whether the voice connection is authenticated.",
  "Invoked when we fail to initiate a voice connection.": "Invoked when we fail to initiate a voice connection.",
  "The reason for failure": "The reason for failure",
  "Move to a different voice channel in the same guild.": "Move to a different voice channel in the same guild.",
  "The channel to move to": "The channel to move to",
  "Attempts to authenticate to the voice server.": "Attempts to authenticate to the voice server.",
  "Attempts to reconnect to the voice server (typically after a region change).": "Attempts to reconnect to the voice server (typically after a region change).",
  "Disconnects the voice connection, causing a disconnect and closing event to be emitted.": "Disconnects the voice connection, causing a disconnect and closing event to be emitted.",
  "Internally disconnects (doesn't send disconnect packet).": "Internally disconnects (doesn't send disconnect packet).",
  "Cleans up after disconnect.": "Cleans up after disconnect.",
  "Connect the voice connection.": "Connect the voice connection.",
  "Invoked when the voice websocket is ready.": "Invoked when the voice websocket is ready.",
  "The received data": "The received data",
  "Invoked when a session description is received.": "Invoked when a session description is received.",
  "Invoked when a speaking event is received.": "Invoked when a speaking event is received.",
  "Debug info from the connection.": "Debug info from the connection.",
  "The debug message": "The debug message",
  "Warning info from the connection.": "Warning info from the connection.",
  "Emitted when a new session ID is received.": "Emitted when a new session ID is received.",
  "Emitted when we successfully initiate a voice connection.": "Emitted when we successfully initiate a voice connection.",
  "Emitted when we fail to initiate a voice connection.": "Emitted when we fail to initiate a voice connection.",
  "Emitted whenever the connection encounters an error.": "Emitted whenever the connection encounters an error.",
  "Emitted when the voice connection is reconnecting (typically after a region change).": "Emitted when the voice connection is reconnecting (typically after a region change).",
  "Emitted when the voice connection disconnects.": "Emitted when the voice connection disconnects.",
  "Emitted once the connection is ready, when a promise to join a voice channel resolves,\nthe connection will already be ready.": "Emitted once the connection is ready, when a promise to join a voice channel resolves,\nthe connection will already be ready.",
  "Emitted whenever a user changes speaking state.": "Emitted whenever a user changes speaking state.",
  "The user that has changed speaking state": "The user that has changed speaking state",
  "The speaking state of the user": "The speaking state of the user",
  "The webhook client.": "The webhook client.",
  "Token of the webhook": "Token of the webhook",
  "The ID of the webhook": "The ID of the webhook",
  "The WebSocket manager for this client.\n<info>This class forwards raw dispatch events,\nread more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>": "The WebSocket manager for this client.\n<info>This class forwards raw dispatch events,\nread more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>",
  "The client that instantiated this WebSocketManager": "The client that instantiated this WebSocketManager",
  "The gateway this manager uses": "The gateway this manager uses",
  "The amount of shards this manager handles": "The amount of shards this manager handles",
  "A collection of all shards this manager handles": "A collection of all shards this manager handles",
  "An array of shards to be connected or that need to reconnect": "An array of shards to be connected or that need to reconnect",
  "An array of queued events before this WebSocketManager became ready": "An array of queued events before this WebSocketManager became ready",
  "The current status of this WebSocketManager": "The current status of this WebSocketManager",
  "If this manager was destroyed. It will prevent shards from reconnecting": "If this manager was destroyed. It will prevent shards from reconnecting",
  "If this manager is currently reconnecting one or multiple shards": "If this manager is currently reconnecting one or multiple shards",
  "The current session limit of the client": "The current session limit of the client",
  "The average ping of all WebSocketShards": "The average ping of all WebSocketShards",
  "Emits a debug message.": "Emits a debug message.",
  "The shard that emitted this message, if any": "The shard that emitted this message, if any",
  "Connects this manager to the gateway.": "Connects this manager to the gateway.",
  "Handles the creation of a shard.": "Handles the creation of a shard.",
  "Handles reconnects for this manager.": "Handles reconnects for this manager.",
  "IF this reconnect should skip checking the session limit": "IF this reconnect should skip checking the session limit",
  "Broadcasts a packet to every shard this manager handles.": "Broadcasts a packet to every shard this manager handles.",
  "Destroys this manager and all its shards.": "Destroys this manager and all its shards.",
  "Handles the timeout required if we cannot identify anymore.": "Handles the timeout required if we cannot identify anymore.",
  "The amount of remaining identify sessions that can be done today": "The amount of remaining identify sessions that can be done today",
  "The amount of time in which the identify counter resets": "The amount of time in which the identify counter resets",
  "Processes a packet and queues it if this WebSocketManager is not ready.": "Processes a packet and queues it if this WebSocketManager is not ready.",
  "The packet to be handled": "The packet to be handled",
  "The shard that will handle this packet": "The shard that will handle this packet",
  "Checks whether the client is ready to be marked as ready.": "Checks whether the client is ready to be marked as ready.",
  "Causes the client to be marked as ready and emits the ready event.": "Causes the client to be marked as ready and emits the ready event.",
  "Represents a Shard's WebSocket connection": "Represents a Shard's WebSocket connection",
  "The WebSocketManager of the shard": "The WebSocketManager of the shard",
  "The ID of the shard": "The ID of the shard",
  "The current status of the shard": "The current status of the shard",
  "The current sequence of the shard": "The current sequence of the shard",
  "The sequence of the shard after close": "The sequence of the shard after close",
  "The current session ID of the shard": "The current session ID of the shard",
  "The previous heartbeat ping of the shard": "The previous heartbeat ping of the shard",
  "The last time a ping was sent (a timestamp)": "The last time a ping was sent (a timestamp)",
  "If we received a heartbeat ack back. Used to identify zombie connections": "If we received a heartbeat ack back. Used to identify zombie connections",
  "Contains the rate limit queue and metadata": "Contains the rate limit queue and metadata",
  "The WebSocket connection for the current shard": "The WebSocket connection for the current shard",
  "The compression to use": "The compression to use",
  "The HELLO timeout": "The HELLO timeout",
  "If the manager attached its event handlers on the shard": "If the manager attached its event handlers on the shard",
  "A set of guild IDs this shard expects to receive": "A set of guild IDs this shard expects to receive",
  "The ready timeout": "The ready timeout",
  "Time when the WebSocket connection was opened": "Time when the WebSocket connection was opened",
  "Emits a debug event.": "Emits a debug event.",
  "Connects the shard to the gateway.": "Connects the shard to the gateway.",
  "A promise that will resolve if the shard turns ready successfully,\nor reject if we couldn't connect": "A promise that will resolve if the shard turns ready successfully,\nor reject if we couldn't connect",
  "Called whenever a connection is opened to the gateway.": "Called whenever a connection is opened to the gateway.",
  "Called whenever a message is received.": "Called whenever a message is received.",
  "Event received": "Event received",
  "Called whenever a connection to the gateway is closed.": "Called whenever a connection to the gateway is closed.",
  "Close event that was received": "Close event that was received",
  "Called whenever a packet is received.": "Called whenever a packet is received.",
  "Checks if the shard can be marked as ready": "Checks if the shard can be marked as ready",
  "Sets the HELLO packet timeout.": "Sets the HELLO packet timeout.",
  "If set to -1, it will clear the hello timeout timeout": "If set to -1, it will clear the hello timeout timeout",
  "Sets the heartbeat timer for this shard.": "Sets the heartbeat timer for this shard.",
  "If -1, clears the interval, any other number sets an interval": "If -1, clears the interval, any other number sets an interval",
  "Sends a heartbeat to the WebSocket.\nIf this shard didn't receive a heartbeat last time, it will destroy it and reconnect": "Sends a heartbeat to the WebSocket.\nIf this shard didn't receive a heartbeat last time, it will destroy it and reconnect",
  "What caused this heartbeat to be sent": "What caused this heartbeat to be sent",
  "If we should send the heartbeat forcefully.": "If we should send the heartbeat forcefully.",
  "Acknowledges a heartbeat.": "Acknowledges a heartbeat.",
  "Identifies the client on the connection.": "Identifies the client on the connection.",
  "Identifies as a new connection on the gateway.": "Identifies as a new connection on the gateway.",
  "Resumes a session on the gateway.": "Resumes a session on the gateway.",
  "Adds a packet to the queue to be sent to the gateway.\n<warn>If you use this method, make sure you understand that you need to provide\na full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands).\nDo not use this method if you don't know what you're doing.</warn>": "Adds a packet to the queue to be sent to the gateway.\n<warn>If you use this method, make sure you understand that you need to provide\na full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands).\nDo not use this method if you don't know what you're doing.</warn>",
  "The full packet to send": "The full packet to send",
  "If this packet should be added first in queue": "If this packet should be added first in queue",
  "Sends data, bypassing the queue.": "Sends data, bypassing the queue.",
  "Packet to send": "Packet to send",
  "Processes the current WebSocket queue.": "Processes the current WebSocket queue.",
  "Destroys this shard and closes its WebSocket connection.": "Destroys this shard and closes its WebSocket connection.",
  "Options for destroying the shard": "Options for destroying the shard",
  "Cleans up the WebSocket connection listeners.": "Cleans up the WebSocket connection listeners.",
  "Emits the DESTROYED event on the shard": "Emits the DESTROYED event on the shard",
  "Emitted when a shard's WebSocket closes.": "Emitted when a shard's WebSocket closes.",
  "The received event": "The received event",
  "Emitted when the shard receives the READY payload and is now waiting for guilds": "Emitted when the shard receives the READY payload and is now waiting for guilds",
  "Emitted when the shard resumes successfully": "Emitted when the shard resumes successfully",
  "Emitted when the shard is fully ready.\nThis event is emitted if:\n* all guilds were received by this shard\n* the ready timeout expired, and some guilds are unavailable": "Emitted when the shard is fully ready.\nThis event is emitted if:\n* all guilds were received by this shard\n* the ready timeout expired, and some guilds are unavailable",
  "Set of unavailable guilds, if any": "Set of unavailable guilds, if any",
  "Emitted when a shard is destroyed, but no WebSocket connection was present.": "Emitted when a shard is destroyed, but no WebSocket connection was present.",
  "Manages the API methods of a data model and holds its cache.": "Manages the API methods of a data model and holds its cache.",
  "The data structure belonging to this manager": "The data structure belonging to this manager",
  "The client that instantiated this Manager": "The client that instantiated this Manager",
  "The type of Collection of the Manager": "The type of Collection of the Manager",
  "Holds the cache for the data model": "Holds the cache for the data model",
  "Resolves a data entry to a data Object.": "Resolves a data entry to a data Object.",
  "The id or instance of something in this Manager": "The id or instance of something in this Manager",
  "An instance from this Manager": "An instance from this Manager",
  "Resolves a data entry to a instance ID.": "Resolves a data entry to a instance ID.",
  "A manager of channels belonging to a client": "A manager of channels belonging to a client",
  "The cache of Channels": "The cache of Channels",
  "Resolves a ChannelResolvable to a Channel object.": "Resolves a ChannelResolvable to a Channel object.",
  "The channel resolvable to resolve": "The channel resolvable to resolve",
  "Resolves a ChannelResolvable to a channel ID string.": "Resolves a ChannelResolvable to a channel ID string.",
  "Obtains a channel from Discord, or the channel cache if it's already available.": "Obtains a channel from Discord, or the channel cache if it's already available.",
  "ID of the channel": "ID of the channel",
  "Whether to cache the new channel object if it isn't already": "Whether to cache the new channel object if it isn't already",
  "Whether to skip the cache check and request the API": "Whether to skip the cache check and request the API",
  "Manages API methods for GuildChannels and stores their cache.": "Manages API methods for GuildChannels and stores their cache.",
  "The guild this Manager belongs to": "The guild this Manager belongs to",
  "The cache of this Manager": "The cache of this Manager",
  "Resolves a GuildChannelResolvable to a Channel object.": "Resolves a GuildChannelResolvable to a Channel object.",
  "The GuildChannel resolvable to resolve": "The GuildChannel resolvable to resolve",
  "Resolves a GuildChannelResolvable to a channel ID string.": "Resolves a GuildChannelResolvable to a channel ID string.",
  "Creates a new channel in the guild.": "Creates a new channel in the guild.",
  "The name of the new channel": "The name of the new channel",
  "Options": "Options",
  "The type of the new channel, either `text`, `voice`, or `category`": "The type of the new channel, either `text`, `voice`, or `category`",
  "The topic for the new channel": "The topic for the new channel",
  "Whether the new channel is nsfw": "Whether the new channel is nsfw",
  "Bitrate of the new channel in bits (only voice)": "Bitrate of the new channel in bits (only voice)",
  "Maximum amount of users allowed in the new channel (only voice)": "Maximum amount of users allowed in the new channel (only voice)",
  "Parent of the new channel": "Parent of the new channel",
  "Permission overwrites of the new channel": "Permission overwrites of the new channel",
  "Position of the new channel": "Position of the new channel",
  "The ratelimit per user for the channel": "The ratelimit per user for the channel",
  "Reason for creating the channel": "Reason for creating the channel",
  "Manages API methods for GuildEmojis and stores their cache.": "Manages API methods for GuildEmojis and stores their cache.",
  "The guild this manager belongs to": "The guild this manager belongs to",
  "The cache of GuildEmojis": "The cache of GuildEmojis",
  "Creates a new custom emoji in the guild.": "Creates a new custom emoji in the guild.",
  "The image for the emoji": "The image for the emoji",
  "The name for the emoji": "The name for the emoji",
  "Roles to limit the emoji to": "Roles to limit the emoji to",
  "Reason for creating the emoji": "Reason for creating the emoji",
  "The created emoji": "The created emoji",
  "Resolves an EmojiResolvable to an Emoji object.": "Resolves an EmojiResolvable to an Emoji object.",
  "The Emoji resolvable to identify": "The Emoji resolvable to identify",
  "Resolves an EmojiResolvable to an Emoji ID string.": "Resolves an EmojiResolvable to an Emoji ID string.",
  "Resolves an EmojiResolvable to an emoji identifier.": "Resolves an EmojiResolvable to an emoji identifier.",
  "The emoji resolvable to resolve": "The emoji resolvable to resolve",
  "Manages API methods for roles belonging to emojis and stores their cache.": "Manages API methods for roles belonging to emojis and stores their cache.",
  "The emoji belonging to this manager": "The emoji belonging to this manager",
  "The guild belonging to this manager": "The guild belonging to this manager",
  "The filtered collection of roles of the guild emoji": "The filtered collection of roles of the guild emoji",
  "The cache of roles belonging to this emoji": "The cache of roles belonging to this emoji",
  "Adds a role (or multiple roles) to the list of roles that can use this emoji.": "Adds a role (or multiple roles) to the list of roles that can use this emoji.",
  "The role or roles to add": "The role or roles to add",
  "Removes a role (or multiple roles) from the list of roles that can use this emoji.": "Removes a role (or multiple roles) from the list of roles that can use this emoji.",
  "The role or roles to remove": "The role or roles to remove",
  "Sets the role(s) that can use this emoji.": "Sets the role(s) that can use this emoji.",
  "The roles or role IDs to apply": "The roles or role IDs to apply",
  "Patches the roles for this manager's cache": "Patches the roles for this manager's cache",
  "The new roles": "The new roles",
  "Manages API methods for Guilds and stores their cache.": "Manages API methods for Guilds and stores their cache.",
  "Resolves a GuildResolvable to a Guild object.": "Resolves a GuildResolvable to a Guild object.",
  "The guild resolvable to identify": "The guild resolvable to identify",
  "Resolves a GuildResolvable to a Guild ID string.": "Resolves a GuildResolvable to a Guild ID string.",
  "Creates a guild.\n<warn>This is only available to bots in fewer than 10 guilds.</warn>": "Creates a guild.\n<warn>This is only available to bots in fewer than 10 guilds.</warn>",
  "The name of the guild": "The name of the guild",
  "Options for the creating": "Options for the creating",
  "The channels for this guild": "The channels for this guild",
  "The default message notifications\nfor the guild": "The default message notifications\nfor the guild",
  "The explicit content filter level for the guild": "The explicit content filter level for the guild",
  "The icon for the guild": "The icon for the guild",
  "The region for the server, defaults to the closest one available": "The region for the server, defaults to the closest one available",
  "The roles for this guild,\nthe first element of this array is used to change properties of the guild's everyone role.": "The roles for this guild,\nthe first element of this array is used to change properties of the guild's everyone role.",
  "The verification level for the guild": "The verification level for the guild",
  "The guild that was created": "The guild that was created",
  "Obtains a guild from Discord, or the guild cache if it's already available.": "Obtains a guild from Discord, or the guild cache if it's already available.",
  "ID of the guild": "ID of the guild",
  "Whether to cache the new guild object if it isn't already": "Whether to cache the new guild object if it isn't already",
  "Manages API methods for GuildMembers and stores their cache.": "Manages API methods for GuildMembers and stores their cache.",
  "Resolves a GuildMemberResolvable to a GuildMember object.": "Resolves a GuildMemberResolvable to a GuildMember object.",
  "The user that is part of the guild": "The user that is part of the guild",
  "Resolves a GuildMemberResolvable to a member ID string.": "Resolves a GuildMemberResolvable to a member ID string.",
  "Fetches member(s) from Discord, even if they're offline.": "Fetches member(s) from Discord, even if they're offline.",
  "If a UserResolvable, the user to fetch.\nIf undefined, fetches all members.\nIf a query, it limits the results to users with similar usernames.": "If a UserResolvable, the user to fetch.\nIf undefined, fetches all members.\nIf a query, it limits the results to users with similar usernames.",
  "Prunes members from the guild based on how long they have been inactive.\n<info>It's recommended to set options.count to `false` for large guilds.</info>": "Prunes members from the guild based on how long they have been inactive.\n<info>It's recommended to set options.count to `false` for large guilds.</info>",
  "Prune options": "Prune options",
  "Number of days of inactivity required to kick": "Number of days of inactivity required to kick",
  "Get number of users that will be kicked, without actually kicking them": "Get number of users that will be kicked, without actually kicking them",
  "Whether or not to return the number of users that have been kicked.": "Whether or not to return the number of users that have been kicked.",
  "Array of roles to bypass the \"...and no roles\" constraint when pruning": "Array of roles to bypass the \"...and no roles\" constraint when pruning",
  "Reason for this prune": "Reason for this prune",
  "The number of members that were/will be kicked": "The number of members that were/will be kicked",
  "Bans a user from the guild.": "Bans a user from the guild.",
  "The user to ban": "The user to ban",
  "Options for the ban": "Options for the ban",
  "Number of days of messages to delete, must be between 0 and 7": "Number of days of messages to delete, must be between 0 and 7",
  "Reason for banning": "Reason for banning",
  "Result object will be resolved as specifically as possible.\nIf the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\nbe resolved, the user ID will be the result.": "Result object will be resolved as specifically as possible.\nIf the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot\nbe resolved, the user ID will be the result.",
  "Unbans a user from the guild.": "Unbans a user from the guild.",
  "The user to unban": "The user to unban",
  "Reason for unbanning user": "Reason for unbanning user",
  "Manages API methods for roles of a GuildMember and stores their cache.": "Manages API methods for roles of a GuildMember and stores their cache.",
  "The GuildMember this manager belongs to": "The GuildMember this manager belongs to",
  "The Guild this manager belongs to": "The Guild this manager belongs to",
  "The filtered collection of roles of the member": "The filtered collection of roles of the member",
  "The roles of this member": "The roles of this member",
  "The role of the member used to hoist them in a separate category in the users list": "The role of the member used to hoist them in a separate category in the users list",
  "The role of the member used to set their color": "The role of the member used to set their color",
  "The role of the member with the highest position": "The role of the member with the highest position",
  "Adds a role (or multiple roles) to the member.": "Adds a role (or multiple roles) to the member.",
  "Reason for adding the role(s)": "Reason for adding the role(s)",
  "Removes a role (or multiple roles) from the member.": "Removes a role (or multiple roles) from the member.",
  "Reason for removing the role(s)": "Reason for removing the role(s)",
  "Sets the roles applied to the member.": "Sets the roles applied to the member.",
  "Reason for applying the roles": "Reason for applying the roles",
  "Manages API methods for Messages and holds their cache.": "Manages API methods for Messages and holds their cache.",
  "The channel that the messages belong to": "The channel that the messages belong to",
  "The cache of Messages": "The cache of Messages",
  "Gets a message, or messages, from this channel.\n<info>The returned Collection does not contain reaction users of the messages if they were not cached.\nThose need to be fetched separately in such a case.</info>": "Gets a message, or messages, from this channel.\n<info>The returned Collection does not contain reaction users of the messages if they were not cached.\nThose need to be fetched separately in such a case.</info>",
  "The ID of the message to fetch, or query parameters.": "The ID of the message to fetch, or query parameters.",
  "Whether to cache the message(s)": "Whether to cache the message(s)",
  "Fetches the pinned messages of this channel and returns a collection of them.\n<info>The returned Collection does not contain any reaction data of the messages.\nThose need to be fetched separately.</info>": "Fetches the pinned messages of this channel and returns a collection of them.\n<info>The returned Collection does not contain any reaction data of the messages.\nThose need to be fetched separately.</info>",
  "Resolves a MessageResolvable to a Message object.": "Resolves a MessageResolvable to a Message object.",
  "The message resolvable to resolve": "The message resolvable to resolve",
  "Resolves a MessageResolvable to a Message ID string.": "Resolves a MessageResolvable to a Message ID string.",
  "Deletes a message, even if it's not cached.": "Deletes a message, even if it's not cached.",
  "The message to delete": "The message to delete",
  "Reason for deleting this message, if it does not belong to the client user": "Reason for deleting this message, if it does not belong to the client user",
  "Manages API methods for Presences and holds their cache.": "Manages API methods for Presences and holds their cache.",
  "The cache of Presences": "The cache of Presences",
  "Resolves a PresenceResolvable to a Presence object.": "Resolves a PresenceResolvable to a Presence object.",
  "The presence resolvable to resolve": "The presence resolvable to resolve",
  "Resolves a PresenceResolvable to a Presence ID string.": "Resolves a PresenceResolvable to a Presence ID string.",
  "Manages API methods for reactions and holds their cache.": "Manages API methods for reactions and holds their cache.",
  "The message that this manager belongs to": "The message that this manager belongs to",
  "The reaction cache of this manager": "The reaction cache of this manager",
  "Resolves a MessageReactionResolvable to a MessageReaction object.": "Resolves a MessageReactionResolvable to a MessageReaction object.",
  "The MessageReaction to resolve": "The MessageReaction to resolve",
  "Resolves a MessageReactionResolvable to a MessageReaction ID string.": "Resolves a MessageReactionResolvable to a MessageReaction ID string.",
  "Removes all reactions from a message.": "Removes all reactions from a message.",
  "Manages API methods for users who reacted to a reaction and stores their cache.": "Manages API methods for users who reacted to a reaction and stores their cache.",
  "The reaction that this manager belongs to": "The reaction that this manager belongs to",
  "The cache of this manager": "The cache of this manager",
  "Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their IDs.": "Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their IDs.",
  "Options for fetching the users": "Options for fetching the users",
  "The maximum amount of users to fetch, defaults to 100": "The maximum amount of users to fetch, defaults to 100",
  "Limit fetching users to those with an id lower than the supplied id": "Limit fetching users to those with an id lower than the supplied id",
  "Limit fetching users to those with an id greater than the supplied id": "Limit fetching users to those with an id greater than the supplied id",
  "Removes a user from this reaction.": "Removes a user from this reaction.",
  "The user to remove the reaction of": "The user to remove the reaction of",
  "Manages API methods for roles and stores their cache.": "Manages API methods for roles and stores their cache.",
  "The role cache of this manager": "The role cache of this manager",
  "The `@everyone` role of the guild": "The `@everyone` role of the guild",
  "The role with the highest position in the cache": "The role with the highest position in the cache",
  "Obtains one or more roles from Discord, or the role cache if they're already available.": "Obtains one or more roles from Discord, or the role cache if they're already available.",
  "ID or IDs of the role(s)": "ID or IDs of the role(s)",
  "Whether to cache the new roles objects if it weren't already": "Whether to cache the new roles objects if it weren't already",
  "Resolves a RoleResolvable to a Role object.": "Resolves a RoleResolvable to a Role object.",
  "The role resolvable to resolve": "The role resolvable to resolve",
  "Resolves a RoleResolvable to a role ID string.": "Resolves a RoleResolvable to a role ID string.",
  "Creates a new role in the guild with given information.\n<warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>": "Creates a new role in the guild with given information.\n<warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>",
  "The data to create the role with": "The data to create the role with",
  "Reason for creating this role": "Reason for creating this role",
  "Manages API methods for users and stores their cache.": "Manages API methods for users and stores their cache.",
  "Resolves a UserResolvable to a User object.": "Resolves a UserResolvable to a User object.",
  "The UserResolvable to identify": "The UserResolvable to identify",
  "Resolves a UserResolvable to a user ID string.": "Resolves a UserResolvable to a user ID string.",
  "Obtains a user from Discord, or the user cache if it's already available.": "Obtains a user from Discord, or the user cache if it's already available.",
  "ID of the user": "ID of the user",
  "Whether to cache the new user object if it isn't already": "Whether to cache the new user object if it isn't already",
  "Manages API methods for VoiceStates and stores their cache.": "Manages API methods for VoiceStates and stores their cache.",
  "Represents an error from the Discord API.": "Represents an error from the Discord API.",
  "The HTTP method used for the request": "The HTTP method used for the request",
  "The path of the request relative to the HTTP endpoint": "The path of the request relative to the HTTP endpoint",
  "HTTP error code returned by Discord": "HTTP error code returned by Discord",
  "The HTTP status code": "The HTTP status code",
  "Flattens an errors object returned from the API into an array.": "Flattens an errors object returned from the API into an array.",
  "Discord errors object": "Discord errors object",
  "Used internally to determine key names of nested fields": "Used internally to determine key names of nested fields",
  "Represents a HTTP error from a request.": "Represents a HTTP error from a request.",
  "The name of the error": "The name of the error",
  "HTTP error code returned from the request": "HTTP error code returned from the request",
  "A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains\nan instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will\nspawn a new one to replace it as necessary.": "A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains\nan instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will\nspawn a new one to replace it as necessary.",
  "Manager that is creating this shard": "Manager that is creating this shard",
  "ID of this shard": "ID of this shard",
  "Manager that created the shard": "Manager that created the shard",
  "ID of the shard in the manager": "ID of the shard in the manager",
  "Arguments for the shard's process (only when {@link ShardingManager#mode} is `process`)": "Arguments for the shard's process (only when {@link ShardingManager#mode} is `process`)",
  "Arguments for the shard's process executable (only when {@link ShardingManager#mode} is `process`)": "Arguments for the shard's process executable (only when {@link ShardingManager#mode} is `process`)",
  "Environment variables for the shard's process, or workerData for the shard's worker": "Environment variables for the shard's process, or workerData for the shard's worker",
  "Whether the shard's {@link Client} is ready": "Whether the shard's {@link Client} is ready",
  "Process of the shard (if {@link ShardingManager#mode} is `process`)": "Process of the shard (if {@link ShardingManager#mode} is `process`)",
  "Worker of the shard (if {@link ShardingManager#mode} is `worker`)": "Worker of the shard (if {@link ShardingManager#mode} is `worker`)",
  "Ongoing promises for calls to {@link Shard#eval}, mapped by the `script` they were called with": "Ongoing promises for calls to {@link Shard#eval}, mapped by the `script` they were called with",
  "Ongoing promises for calls to {@link Shard#fetchClientValue}, mapped by the `prop` they were called with": "Ongoing promises for calls to {@link Shard#fetchClientValue}, mapped by the `prop` they were called with",
  "Listener function for the {@link ChildProcess}' `exit` event": "Listener function for the {@link ChildProcess}' `exit` event",
  "Forks a child process or creates a worker thread for the shard.\n<warn>You should not need to call this manually.</warn>": "Forks a child process or creates a worker thread for the shard.\n<warn>You should not need to call this manually.</warn>",
  "The amount in milliseconds to wait until the {@link Client} has become ready\nbefore resolving. (-1 or Infinity for no wait)": "The amount in milliseconds to wait until the {@link Client} has become ready\nbefore resolving. (-1 or Infinity for no wait)",
  "Immediately kills the shard's process/worker and does not restart it.": "Immediately kills the shard's process/worker and does not restart it.",
  "Kills and restarts the shard's process/worker.": "Kills and restarts the shard's process/worker.",
  "How long to wait between killing the process/worker and restarting it (in milliseconds)": "How long to wait between killing the process/worker and restarting it (in milliseconds)",
  "Sends a message to the shard's process/worker.": "Sends a message to the shard's process/worker.",
  "Message to send to the shard": "Message to send to the shard",
  "Fetches a client property value of the shard.": "Fetches a client property value of the shard.",
  "Name of the client property to get, using periods for nesting": "Name of the client property to get, using periods for nesting",
  "Evaluates a script or function on the shard, in the context of the {@link Client}.": "Evaluates a script or function on the shard, in the context of the {@link Client}.",
  "JavaScript to run on the shard": "JavaScript to run on the shard",
  "Result of the script execution": "Result of the script execution",
  "Handles a message received from the child process/worker.": "Handles a message received from the child process/worker.",
  "Message received": "Message received",
  "Handles the shard's process/worker exiting.": "Handles the shard's process/worker exiting.",
  "Whether to spawn the shard again": "Whether to spawn the shard again",
  "Emitted upon the creation of the shard's child process/worker.": "Emitted upon the creation of the shard's child process/worker.",
  "Child process/worker that was created": "Child process/worker that was created",
  "Emitted upon the shard's {@link Client#ready} event.": "Emitted upon the shard's {@link Client#ready} event.",
  "Emitted upon the shard's {@link Client#disconnect} event.": "Emitted upon the shard's {@link Client#disconnect} event.",
  "Emitted upon the shard's {@link Client#reconnecting} event.": "Emitted upon the shard's {@link Client#reconnecting} event.",
  "Emitted upon receiving a message from the child process/worker.": "Emitted upon receiving a message from the child process/worker.",
  "Message that was received": "Message that was received",
  "Emitted upon the shard's child process/worker exiting.": "Emitted upon the shard's child process/worker exiting.",
  "Child process/worker that exited": "Child process/worker that exited",
  "Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}.\nUtilises IPC to send and receive data to/from the master process and other shards.": "Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}.\nUtilises IPC to send and receive data to/from the master process and other shards.",
  "Client of the current shard": "Client of the current shard",
  "Mode the shard was spawned with": "Mode the shard was spawned with",
  "Client for the shard": "Client for the shard",
  "Message port for the master process (only when {@link ShardClientUtil#mode} is `worker`)": "Message port for the master process (only when {@link ShardClientUtil#mode} is `worker`)",
  "Array of shard IDs of this client": "Array of shard IDs of this client",
  "Total number of shards": "Total number of shards",
  "Sends a message to the master process.": "Sends a message to the master process.",
  "Message to send": "Message to send",
  "Fetches a client property value of each shard.": "Fetches a client property value of each shard.",
  "Evaluates a script or function on all shards, in the context of the {@link Clients}.": "Evaluates a script or function on all shards, in the context of the {@link Clients}.",
  "JavaScript to run on each shard": "JavaScript to run on each shard",
  "Results of the script execution": "Results of the script execution",
  "Requests a respawn of all shards.": "Requests a respawn of all shards.",
  "How long to wait between shards (in milliseconds)": "How long to wait between shards (in milliseconds)",
  "How long to wait between killing a shard's process/worker and restarting it\n(in milliseconds)": "How long to wait between killing a shard's process/worker and restarting it\n(in milliseconds)",
  "The amount in milliseconds to wait for a shard to become ready before\ncontinuing to another. (-1 or Infinity for no wait)": "The amount in milliseconds to wait for a shard to become ready before\ncontinuing to another. (-1 or Infinity for no wait)",
  "Resolves upon the message being sent": "Resolves upon the message being sent",
  "Handles an IPC message.": "Handles an IPC message.",
  "Sends a message to the master process, emitting an error from the client upon failure.": "Sends a message to the master process, emitting an error from the client upon failure.",
  "Type of response to send": "Type of response to send",
  "Creates/gets the singleton of this class.": "Creates/gets the singleton of this class.",
  "The client to use": "The client to use",
  "This is a utility class that makes multi-process sharding of a bot an easy and painless experience.\nIt works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each\ncontaining its own instance of your bot's {@link Client}. They all have a line of communication with the master\nprocess, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult\nwith sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a\npath to your main bot script to launch for each one.": "This is a utility class that makes multi-process sharding of a bot an easy and painless experience.\nIt works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each\ncontaining its own instance of your bot's {@link Client}. They all have a line of communication with the master\nprocess, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult\nwith sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a\npath to your main bot script to launch for each one.",
  "Path to your shard script file": "Path to your shard script file",
  "Options for the sharding manager": "Options for the sharding manager",
  "Number of total shards of all shard managers or \"auto\"": "Number of total shards of all shard managers or \"auto\"",
  "List of shards to spawn or \"auto\"": "List of shards to spawn or \"auto\"",
  "Which mode to use for shards": "Which mode to use for shards",
  "Whether shards should automatically respawn upon exiting": "Whether shards should automatically respawn upon exiting",
  "Arguments to pass to the shard script when spawning\n(only available when using the `process` mode)": "Arguments to pass to the shard script when spawning\n(only available when using the `process` mode)",
  "Arguments to pass to the shard script executable when spawning\n(only available when using the `process` mode)": "Arguments to pass to the shard script executable when spawning\n(only available when using the `process` mode)",
  "Token to use for automatic shard count and passing to shards": "Token to use for automatic shard count and passing to shards",
  "Path to the shard script file": "Path to the shard script file",
  "List of shards this sharding manager spawns": "List of shards this sharding manager spawns",
  "Amount of shards that all sharding managers spawn in total": "Amount of shards that all sharding managers spawn in total",
  "Mode for shards to spawn with": "Mode for shards to spawn with",
  "An array of arguments to pass to shards (only when {@link ShardingManager#mode} is `process`)": "An array of arguments to pass to shards (only when {@link ShardingManager#mode} is `process`)",
  "An array of arguments to pass to the executable (only when {@link ShardingManager#mode} is `process`)": "An array of arguments to pass to the executable (only when {@link ShardingManager#mode} is `process`)",
  "Token to use for obtaining the automatic shard count, and passing to shards": "Token to use for obtaining the automatic shard count, and passing to shards",
  "A collection of shards that this manager has spawned": "A collection of shards that this manager has spawned",
  "Creates a single shard.\n<warn>Using this method is usually not necessary if you use the spawn method.</warn>": "Creates a single shard.\n<warn>Using this method is usually not necessary if you use the spawn method.</warn>",
  "ID of the shard to create\n<info>This is usually not necessary to manually specify.</info>": "ID of the shard to create\n<info>This is usually not necessary to manually specify.</info>",
  "Note that the created shard needs to be explicitly spawned using its spawn method.": "Note that the created shard needs to be explicitly spawned using its spawn method.",
  "Spawns multiple shards.": "Spawns multiple shards.",
  "Number of shards to spawn": "Number of shards to spawn",
  "How long to wait in between spawning each shard (in milliseconds)": "How long to wait in between spawning each shard (in milliseconds)",
  "Sends a message to all shards.": "Sends a message to all shards.",
  "Message to be sent to the shards": "Message to be sent to the shards",
  "Evaluates a script on all shards, in the context of the {@link Client}s.": "Evaluates a script on all shards, in the context of the {@link Client}s.",
  "Kills all running shards and respawns them.": "Kills all running shards and respawns them.",
  "How long to wait between killing a shard's process and restarting it\n(in milliseconds)": "How long to wait between killing a shard's process and restarting it\n(in milliseconds)",
  "Emitted upon creating a shard.": "Emitted upon creating a shard.",
  "Shard that was created": "Shard that was created",
  "Represents a message to be sent to the API.": "Represents a message to be sent to the API.",
  "The target for this message to be sent to": "The target for this message to be sent to",
  "Options passed in from send": "Options passed in from send",
  "Data sendable to the API": "Data sendable to the API",
  "Files sendable to the API": "Files sendable to the API",
  "Whether or not the target is a webhook": "Whether or not the target is a webhook",
  "Whether or not the target is a user": "Whether or not the target is a user",
  "Whether or not the target is a message": "Whether or not the target is a message",
  "Makes the content of this message.": "Makes the content of this message.",
  "Resolves data.": "Resolves data.",
  "Resolves files.": "Resolves files.",
  "Converts this APIMessage into an array of APIMessages for each split content": "Converts this APIMessage into an array of APIMessages for each split content",
  "Resolves a single file into an object sendable to the API.": "Resolves a single file into an object sendable to the API.",
  "Something that could be resolved to a file": "Something that could be resolved to a file",
  "Partitions embeds and attachments.": "Partitions embeds and attachments.",
  "Items to partition": "Items to partition",
  "Transforms the user-level arguments into a final options object. Passing a transformed options object alone into\nthis method will keep it the same, allowing for the reuse of the final options object.": "Transforms the user-level arguments into a final options object. Passing a transformed options object alone into\nthis method will keep it the same, allowing for the reuse of the final options object.",
  "Content to send": "Content to send",
  "Options to use": "Options to use",
  "Extra options to add onto transformed options": "Extra options to add onto transformed options",
  "Whether or not to use WebhookMessageOptions as the result": "Whether or not to use WebhookMessageOptions as the result",
  "Creates an `APIMessage` from user-level arguments.": "Creates an `APIMessage` from user-level arguments.",
  "Target to send to": "Target to send to",
  "Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).": "Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).",
  "The client that instantiated this": "The client that instantiated this",
  "Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.": "Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.",
  "The guild this emoji is a part of": "The guild this emoji is a part of",
  "Array of role ids this emoji is active for": "Array of role ids this emoji is active for",
  "Whether this emoji is animated": "Whether this emoji is animated",
  "The name of this emoji": "The name of this emoji",
  "The ID of this emoji": "The ID of this emoji",
  "Whether this emoji has been deleted": "Whether this emoji has been deleted",
  "The identifier of this emoji, used for message reactions": "The identifier of this emoji, used for message reactions",
  "The URL to the emoji file if its a custom emoji": "The URL to the emoji file if its a custom emoji",
  "The timestamp the emoji was created at, or null if unicode": "The timestamp the emoji was created at, or null if unicode",
  "The time the emoji was created at, or null if unicode": "The time the emoji was created at, or null if unicode",
  "When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord\ninstead of the Emoji object.": "When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord\ninstead of the Emoji object.",
  "Represents a guild category channel on Discord.": "Represents a guild category channel on Discord.",
  "Channels that are a part of this category": "Channels that are a part of this category",
  "The guild the channel is in": "The guild the channel is in",
  "The name of the guild channel": "The name of the guild channel",
  "The raw position of the channel from discord": "The raw position of the channel from discord",
  "The ID of the category parent of this channel": "The ID of the category parent of this channel",
  "A map of permission overwrites in this channel for roles and users": "A map of permission overwrites in this channel for roles and users",
  "The category parent of this channel": "The category parent of this channel",
  "If the permissionOverwrites match the parent channel, null if no parent": "If the permissionOverwrites match the parent channel, null if no parent",
  "The position of the channel": "The position of the channel",
  "A collection of members that can see this channel, mapped by their ID": "A collection of members that can see this channel, mapped by their ID",
  "Whether the channel is deletable by the client user": "Whether the channel is deletable by the client user",
  "Whether the channel is manageable by the client user": "Whether the channel is manageable by the client user",
  "Whether the channel is viewable by the client user": "Whether the channel is viewable by the client user",
  "The type of the channel, either:\n* `dm` - a DM channel\n* `text` - a guild text channel\n* `voice` - a guild voice channel\n* `category` - a guild category channel\n* `news` - a guild news channel\n* `store` - a guild store channel\n* `unknown` - a generic channel of unknown type, could be Channel or GuildChannel": "The type of the channel, either:\n* `dm` - a DM channel\n* `text` - a guild text channel\n* `voice` - a guild voice channel\n* `category` - a guild category channel\n* `news` - a guild news channel\n* `store` - a guild store channel\n* `unknown` - a generic channel of unknown type, could be Channel or GuildChannel",
  "Whether the channel has been deleted": "Whether the channel has been deleted",
  "The unique ID of the channel": "The unique ID of the channel",
  "The timestamp the channel was created at": "The timestamp the channel was created at",
  "The time the channel was created at": "The time the channel was created at",
  "Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.": "Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.",
  "The member or role to obtain the overall permissions for": "The member or role to obtain the overall permissions for",
  "Gets the overall set of permissions for a member in this channel, taking into account channel overwrites.": "Gets the overall set of permissions for a member in this channel, taking into account channel overwrites.",
  "The member to obtain the overall permissions for": "The member to obtain the overall permissions for",
  "Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.": "Gets the overall set of permissions for a role in this channel, taking into account channel overwrites.",
  "The role to obtain the overall permissions for": "The role to obtain the overall permissions for",
  "Replaces the permission overwrites in this channel.": "Replaces the permission overwrites in this channel.",
  "Permission overwrites the channel gets updated with": "Permission overwrites the channel gets updated with",
  "Reason for updating the channel overwrites": "Reason for updating the channel overwrites",
  "Updates Overwrites for a user or role in this channel. (creates if non-existent)": "Updates Overwrites for a user or role in this channel. (creates if non-existent)",
  "The user or role to update": "The user or role to update",
  "The options for the update": "The options for the update",
  "Reason for creating/editing this overwrite": "Reason for creating/editing this overwrite",
  "Overwrites the permissions for a user or role in this channel. (replaces if existent)": "Overwrites the permissions for a user or role in this channel. (replaces if existent)",
  "Locks in the permission overwrites from the parent channel.": "Locks in the permission overwrites from the parent channel.",
  "Edits the channel.": "Edits the channel.",
  "The new data for the channel": "The new data for the channel",
  "Reason for editing this channel": "Reason for editing this channel",
  "Sets a new name for the guild channel.": "Sets a new name for the guild channel.",
  "The new name for the guild channel": "The new name for the guild channel",
  "Reason for changing the guild channel's name": "Reason for changing the guild channel's name",
  "Sets the category parent of this channel.": "Sets the category parent of this channel.",
  "Parent channel": "Parent channel",
  "Options to pass": "Options to pass",
  "Lock the permissions to what the parent's permissions are": "Lock the permissions to what the parent's permissions are",
  "Reason for modifying the parent of this channel": "Reason for modifying the parent of this channel",
  "Sets a new topic for the guild channel.": "Sets a new topic for the guild channel.",
  "The new topic for the guild channel": "The new topic for the guild channel",
  "Reason for changing the guild channel's topic": "Reason for changing the guild channel's topic",
  "Sets a new position for the guild channel.": "Sets a new position for the guild channel.",
  "The new position for the guild channel": "The new position for the guild channel",
  "Options for setting position": "Options for setting position",
  "Change the position relative to its current value": "Change the position relative to its current value",
  "Reason for changing the position": "Reason for changing the position",
  "Creates an invite to this guild channel.": "Creates an invite to this guild channel.",
  "Options for the invite": "Options for the invite",
  "Whether members that joined via the invite should be automatically\nkicked after 24 hours if they have not yet received a role": "Whether members that joined via the invite should be automatically\nkicked after 24 hours if they have not yet received a role",
  "How long the invite should last (in seconds, 0 for forever)": "How long the invite should last (in seconds, 0 for forever)",
  "Maximum number of uses": "Maximum number of uses",
  "Create a unique invite, or use an existing one with similar settings": "Create a unique invite, or use an existing one with similar settings",
  "Reason for creating this": "Reason for creating this",
  "Fetches a collection of invites to this guild channel.\nResolves with a collection mapping invites by their codes.": "Fetches a collection of invites to this guild channel.\nResolves with a collection mapping invites by their codes.",
  "Clones this channel.": "Clones this channel.",
  "The options": "The options",
  "Name of the new channel": "Name of the new channel",
  "Type of the new channel": "Type of the new channel",
  "Topic of the new channel (only text)": "Topic of the new channel (only text)",
  "Whether the new channel is nsfw (only text)": "Whether the new channel is nsfw (only text)",
  "Ratelimit per user for the new channel (only text)": "Ratelimit per user for the new channel (only text)",
  "Reason for cloning this channel": "Reason for cloning this channel",
  "Checks if this channel has the same type, topic, position, name, overwrites and ID as another channel.\nIn most cases, a simple `channel.id === channel2.id` will do, and is much faster too.": "Checks if this channel has the same type, topic, position, name, overwrites and ID as another channel.\nIn most cases, a simple `channel.id === channel2.id` will do, and is much faster too.",
  "Channel to compare with": "Channel to compare with",
  "Deletes this channel.": "Deletes this channel.",
  "Reason for deleting this channel": "Reason for deleting this channel",
  "When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.": "When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.",
  "Fetches this channel.": "Fetches this channel.",
  "Represents any channel on Discord.": "Represents any channel on Discord.",
  "Represents a Client OAuth2 Application.": "Represents a Client OAuth2 Application.",
  "The ID of the app": "The ID of the app",
  "The name of the app": "The name of the app",
  "The app's description": "The app's description",
  "The app's icon hash": "The app's icon hash",
  "The app's cover image": "The app's cover image",
  "The app's RPC origins, if enabled": "The app's RPC origins, if enabled",
  "If this app's bot requires a code grant when using the OAuth2 flow": "If this app's bot requires a code grant when using the OAuth2 flow",
  "If this app's bot is public": "If this app's bot is public",
  "The owner of this OAuth application": "The owner of this OAuth application",
  "The timestamp the app was created at": "The timestamp the app was created at",
  "The time the app was created at": "The time the app was created at",
  "A link to the application's icon.": "A link to the application's icon.",
  "Options for the Image URL": "Options for the Image URL",
  "URL to the icon": "URL to the icon",
  "A link to this application's cover image.": "A link to this application's cover image.",
  "URL to the cover image": "URL to the cover image",
  "Gets the clients rich presence assets.": "Gets the clients rich presence assets.",
  "When concatenated with a string, this automatically returns the application's name instead of the\nClientApplication object.": "When concatenated with a string, this automatically returns the application's name instead of the\nClientApplication object.",
  "The instantiating client": "The instantiating client",
  "The data for the client presence": "The data for the client presence",
  "Represents the logged in client's Discord user.": "Represents the logged in client's Discord user.",
  "Whether or not this account has been verified": "Whether or not this account has been verified",
  "If the bot's {@link ClientApplication#owner Owner} has MFA enabled on their account": "If the bot's {@link ClientApplication#owner Owner} has MFA enabled on their account",
  "ClientUser's presence": "ClientUser's presence",
  "The ID of the user": "The ID of the user",
  "The username of the user": "The username of the user",
  "Whether or not the user is a bot": "Whether or not the user is a bot",
  "A discriminator based on username for the user": "A discriminator based on username for the user",
  "The ID of the user's avatar": "The ID of the user's avatar",
  "Whether the user is an Official Discord System user (part of the urgent message system)": "Whether the user is an Official Discord System user (part of the urgent message system)",
  "The locale of the user's client (ISO 639-1)": "The locale of the user's client (ISO 639-1)",
  "The flags for this user": "The flags for this user",
  "The ID of the last message sent by the user, if one was sent": "The ID of the last message sent by the user, if one was sent",
  "The ID of the channel for the last message sent by the user, if one was sent": "The ID of the channel for the last message sent by the user, if one was sent",
  "Whether this User is a partial": "Whether this User is a partial",
  "The timestamp the user was created at": "The timestamp the user was created at",
  "The time the user was created at": "The time the user was created at",
  "The Message object of the last message sent by the user, if one was sent": "The Message object of the last message sent by the user, if one was sent",
  "A link to the user's default avatar": "A link to the user's default avatar",
  "The Discord \"tag\" (e.g. `hydrabolt#0001`) for this user": "The Discord \"tag\" (e.g. `hydrabolt#0001`) for this user",
  "The DM between the client's user and this user": "The DM between the client's user and this user",
  "Sets the username of the logged in client.\n<info>Changing usernames in Discord is heavily rate limited, with only 2 requests\nevery hour. Use this sparingly!</info>": "Sets the username of the logged in client.\n<info>Changing usernames in Discord is heavily rate limited, with only 2 requests\nevery hour. Use this sparingly!</info>",
  "The new username": "The new username",
  "Sets the avatar of the logged in client.": "Sets the avatar of the logged in client.",
  "The new avatar": "The new avatar",
  "Sets the full presence of the client user.": "Sets the full presence of the client user.",
  "Data for the presence": "Data for the presence",
  "Sets the status of the client user.": "Sets the status of the client user.",
  "Status to change to": "Status to change to",
  "Shard ID(s) to have the activity set on": "Shard ID(s) to have the activity set on",
  "Sets the activity the client user is playing.": "Sets the activity the client user is playing.",
  "Activity being played, or options for setting the activity": "Activity being played, or options for setting the activity",
  "Options for setting the activity": "Options for setting the activity",
  "Sets/removes the AFK flag for the client user.": "Sets/removes the AFK flag for the client user.",
  "Whether or not the user is AFK": "Whether or not the user is AFK",
  "A link to the user's avatar.": "A link to the user's avatar.",
  "A link to the user's avatar if they have one.\nOtherwise a link to their default avatar will be returned.": "A link to the user's avatar if they have one.\nOtherwise a link to their default avatar will be returned.",
  "Checks whether the user is typing in a channel.": "Checks whether the user is typing in a channel.",
  "The channel to check in": "The channel to check in",
  "Gets the time that the user started typing.": "Gets the time that the user started typing.",
  "The channel to get the time in": "The channel to get the time in",
  "Gets the amount of time the user has been typing in a channel for (in milliseconds), or -1 if they're not typing.": "Gets the amount of time the user has been typing in a channel for (in milliseconds), or -1 if they're not typing.",
  "Creates a DM channel between the client and the user.": "Creates a DM channel between the client and the user.",
  "Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.": "Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.",
  "Checks if the user is equal to another. It compares ID, username, discriminator, avatar, and bot flags.\nIt is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.": "Checks if the user is equal to another. It compares ID, username, discriminator, avatar, and bot flags.\nIt is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.",
  "User to compare with": "User to compare with",
  "Fetches this user's flags.": "Fetches this user's flags.",
  "Whether to skip the cache check and request the AP": "Whether to skip the cache check and request the AP",
  "Fetches this user.": "Fetches this user.",
  "When concatenated with a string, this automatically returns the user's mention instead of the User object.": "When concatenated with a string, this automatically returns the user's mention instead of the User object.",
  "Sends a message to this channel.": "Sends a message to this channel.",
  "The content to send": "The content to send",
  "Represents a direct message channel between two users.": "Represents a direct message channel between two users.",
  "The data for the DM channel": "The data for the DM channel",
  "A manager of the messages belonging to this channel": "A manager of the messages belonging to this channel",
  "The recipient on the other end of the DM": "The recipient on the other end of the DM",
  "The ID of the last message in the channel, if one was sent": "The ID of the last message in the channel, if one was sent",
  "The timestamp when the last pinned message was pinned, if there was one": "The timestamp when the last pinned message was pinned, if there was one",
  "Whether this DMChannel is a partial": "Whether this DMChannel is a partial",
  "The Message object of the last message in the channel, if one was sent": "The Message object of the last message in the channel, if one was sent",
  "The date when the last pinned message was pinned, if there was one": "The date when the last pinned message was pinned, if there was one",
  "Whether or not the typing indicator is being shown in the channel": "Whether or not the typing indicator is being shown in the channel",
  "Number of times `startTyping` has been called": "Number of times `startTyping` has been called",
  "Fetch this DMChannel.": "Fetch this DMChannel.",
  "When concatenated with a string, this automatically returns the recipient's mention instead of the\nDMChannel object.": "When concatenated with a string, this automatically returns the recipient's mention instead of the\nDMChannel object.",
  "Starts a typing indicator in the channel.": "Starts a typing indicator in the channel.",
  "The number of times startTyping should be considered to have been called": "The number of times startTyping should be considered to have been called",
  "Resolves once the bot stops typing gracefully, or rejects when an error occurs": "Resolves once the bot stops typing gracefully, or rejects when an error occurs",
  "Stops the typing indicator in the channel.\nThe indicator will only stop if this is called as many times as startTyping().\n<info>It can take a few seconds for the client user to stop typing.</info>": "Stops the typing indicator in the channel.\nThe indicator will only stop if this is called as many times as startTyping().\n<info>It can take a few seconds for the client user to stop typing.</info>",
  "Whether or not to reset the call count and force the indicator to stop": "Whether or not to reset the call count and force the indicator to stop",
  "Creates a Message Collector.": "Creates a Message Collector.",
  "The filter to create the collector with": "The filter to create the collector with",
  "The options to pass to the collector": "The options to pass to the collector",
  "Similar to createMessageCollector but in promise form.\nResolves with a collection of messages that pass the specified filter.": "Similar to createMessageCollector but in promise form.\nResolves with a collection of messages that pass the specified filter.",
  "The filter function to use": "The filter function to use",
  "Optional options to pass to the internal collector": "Optional options to pass to the internal collector",
  "Represents an emoji, see {@link GuildEmoji} and {@link ReactionEmoji}.": "Represents an emoji, see {@link GuildEmoji} and {@link ReactionEmoji}.",
  "Represents a guild (or a server) on Discord.\n<info>It's recommended to see if a guild is available before performing operations or reading data from it. You can\ncheck this with `guild.available`.</info>": "Represents a guild (or a server) on Discord.\n<info>It's recommended to see if a guild is available before performing operations or reading data from it. You can\ncheck this with `guild.available`.</info>",
  "The data for the guild": "The data for the guild",
  "A manager of the members belonging to this guild": "A manager of the members belonging to this guild",
  "A manager of the channels belonging to this guild": "A manager of the channels belonging to this guild",
  "A manager of the roles belonging to this guild": "A manager of the roles belonging to this guild",
  "A manager of the presences belonging to this guild": "A manager of the presences belonging to this guild",
  "A manager of the voice states of this guild": "A manager of the voice states of this guild",
  "Whether the bot has been removed from the guild": "Whether the bot has been removed from the guild",
  "Whether the guild is available to access. If it is not available, it indicates a server outage": "Whether the guild is available to access. If it is not available, it indicates a server outage",
  "The Unique ID of the guild, useful for comparisons": "The Unique ID of the guild, useful for comparisons",
  "The id of the shard this Guild belongs to.": "The id of the shard this Guild belongs to.",
  "The Shard this Guild belongs to.": "The Shard this Guild belongs to.",
  "The hash of the guild icon": "The hash of the guild icon",
  "The hash of the guild invite splash image": "The hash of the guild invite splash image",
  "The hash of the guild discovery splash image": "The hash of the guild discovery splash image",
  "The region the guild is located in": "The region the guild is located in",
  "The full amount of members in this guild": "The full amount of members in this guild",
  "Whether the guild is \"large\" (has more than large_threshold members, 50 by default)": "Whether the guild is \"large\" (has more than large_threshold members, 50 by default)",
  "An array of guild features partnered guilds have enabled": "An array of guild features partnered guilds have enabled",
  "The ID of the application that created this guild (if applicable)": "The ID of the application that created this guild (if applicable)",
  "The time in seconds before a user is counted as \"away from keyboard\"": "The time in seconds before a user is counted as \"away from keyboard\"",
  "The ID of the voice channel where AFK members are moved": "The ID of the voice channel where AFK members are moved",
  "The ID of the system channel": "The ID of the system channel",
  "Whether embedded images are enabled on this guild": "Whether embedded images are enabled on this guild",
  "The premium tier on this guild": "The premium tier on this guild",
  "The total number of boosts for this server": "The total number of boosts for this server",
  "Whether widget images are enabled on this guild": "Whether widget images are enabled on this guild",
  "The widget channel ID, if enabled": "The widget channel ID, if enabled",
  "The embed channel ID, if enabled": "The embed channel ID, if enabled",
  "The verification level of the guild": "The verification level of the guild",
  "The explicit content filter level of the guild": "The explicit content filter level of the guild",
  "The required MFA level for the guild": "The required MFA level for the guild",
  "The timestamp the client user joined the guild at": "The timestamp the client user joined the guild at",
  "The value set for the guild's default message notifications": "The value set for the guild's default message notifications",
  "The value set for the guild's system channel flags": "The value set for the guild's system channel flags",
  "The maximum amount of members the guild can have\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>": "The maximum amount of members the guild can have\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>",
  "The maximum amount of presences the guild can have\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>": "The maximum amount of presences the guild can have\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>",
  "The approximate amount of members the guild has\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>": "The approximate amount of members the guild has\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>",
  "The approximate amount of presences the guild has\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>": "The approximate amount of presences the guild has\n<info>You will need to fetch the guild using {@link Guild#fetch} if you want to receive this parameter</info>",
  "The vanity invite code of the guild, if any": "The vanity invite code of the guild, if any",
  "The use count of the vanity URL code of the guild, if any\n<info>You will need to fetch this parameter using {@link Guild#fetchVanityData} if you want to receive it</info>": "The use count of the vanity URL code of the guild, if any\n<info>You will need to fetch this parameter using {@link Guild#fetchVanityData} if you want to receive it</info>",
  "The description of the guild, if any": "The description of the guild, if any",
  "The hash of the guild banner": "The hash of the guild banner",
  "The ID of the rules channel for the guild": "The ID of the rules channel for the guild",
  "The ID of the community updates channel for the guild": "The ID of the community updates channel for the guild",
  "The preferred locale of the guild, defaults to `en-US`": "The preferred locale of the guild, defaults to `en-US`",
  "The user ID of this guild's owner": "The user ID of this guild's owner",
  "A manager of the emojis belonging to this guild": "A manager of the emojis belonging to this guild",
  "The timestamp the guild was created at": "The timestamp the guild was created at",
  "The time the guild was created at": "The time the guild was created at",
  "The time the client user joined the guild": "The time the client user joined the guild",
  "If this guild is partnered": "If this guild is partnered",
  "If this guild is verified": "If this guild is verified",
  "The acronym that shows up in place of a guild icon.": "The acronym that shows up in place of a guild icon.",
  "The owner of the guild": "The owner of the guild",
  "AFK voice channel for this guild": "AFK voice channel for this guild",
  "System channel for this guild": "System channel for this guild",
  "Widget channel for this guild": "Widget channel for this guild",
  "Embed channel for this guild": "Embed channel for this guild",
  "Rules channel for this guild": "Rules channel for this guild",
  "Public updates channel for this guild": "Public updates channel for this guild",
  "The client user as a GuildMember of this guild": "The client user as a GuildMember of this guild",
  "The voice state for the client user of this guild, if any": "The voice state for the client user of this guild, if any",
  "Sets up the guild.": "Sets up the guild.",
  "The raw data of the guild": "The raw data of the guild",
  "The URL to this guild's banner.": "The URL to this guild's banner.",
  "The URL to this guild's icon.": "The URL to this guild's icon.",
  "The URL to this guild's invite splash image.": "The URL to this guild's invite splash image.",
  "The URL to this guild's discovery splash image.": "The URL to this guild's discovery splash image.",
  "Returns the GuildMember form of a User object, if the user is present in the guild.": "Returns the GuildMember form of a User object, if the user is present in the guild.",
  "The user that you want to obtain the GuildMember of": "The user that you want to obtain the GuildMember of",
  "Fetches this guild.": "Fetches this guild.",
  "Fetches information on a banned user from this guild.": "Fetches information on a banned user from this guild.",
  "The User to fetch the ban info of": "The User to fetch the ban info of",
  "Fetches a collection of banned users in this guild.": "Fetches a collection of banned users in this guild.",
  "Fetches a collection of integrations to this guild.\nResolves with a collection mapping integrations by their ids.": "Fetches a collection of integrations to this guild.\nResolves with a collection mapping integrations by their ids.",
  "Creates an integration by attaching an integration object": "Creates an integration by attaching an integration object",
  "The data for the integration": "The data for the integration",
  "Reason for creating the integration": "Reason for creating the integration",
  "Fetches a collection of invites to this guild.\nResolves with a collection mapping invites by their codes.": "Fetches a collection of invites to this guild.\nResolves with a collection mapping invites by their codes.",
  "Obtains a guild preview for this guild from Discord.": "Obtains a guild preview for this guild from Discord.",
  "Fetches the vanity url invite code to this guild.\nResolves with a string matching the vanity url invite code, not the full url.": "Fetches the vanity url invite code to this guild.\nResolves with a string matching the vanity url invite code, not the full url.",
  "Fetches the vanity url invite object to this guild.\nResolves with an object containing the vanity url invite code and the use count": "Fetches the vanity url invite object to this guild.\nResolves with an object containing the vanity url invite code and the use count",
  "Fetches all webhooks for the guild.": "Fetches all webhooks for the guild.",
  "Fetches available voice regions.": "Fetches available voice regions.",
  "Fetches the guild embed.": "Fetches the guild embed.",
  "Fetches the guild widget.": "Fetches the guild widget.",
  "Fetches audit logs for this guild.": "Fetches audit logs for this guild.",
  "Options for fetching audit logs": "Options for fetching audit logs",
  "Limit to entries from before specified entry": "Limit to entries from before specified entry",
  "Limit number of entries": "Limit number of entries",
  "Only show entries involving this user": "Only show entries involving this user",
  "Only show entries involving this action type": "Only show entries involving this action type",
  "Adds a user to the guild using OAuth2. Requires the `CREATE_INSTANT_INVITE` permission.": "Adds a user to the guild using OAuth2. Requires the `CREATE_INSTANT_INVITE` permission.",
  "User to add to the guild": "User to add to the guild",
  "Options for the addition": "Options for the addition",
  "An OAuth2 access token for the user with the `guilds.join` scope granted to the\nbot's application": "An OAuth2 access token for the user with the `guilds.join` scope granted to the\nbot's application",
  "Nickname to give the member (requires `MANAGE_NICKNAMES`)": "Nickname to give the member (requires `MANAGE_NICKNAMES`)",
  "Roles to add to the member\n(requires `MANAGE_ROLES`)": "Roles to add to the member\n(requires `MANAGE_ROLES`)",
  "Whether the member should be muted (requires `MUTE_MEMBERS`)": "Whether the member should be muted (requires `MUTE_MEMBERS`)",
  "Whether the member should be deafened (requires `DEAFEN_MEMBERS`)": "Whether the member should be deafened (requires `DEAFEN_MEMBERS`)",
  "Updates the guild with new information - e.g. a new name.": "Updates the guild with new information - e.g. a new name.",
  "The data to update the guild with": "The data to update the guild with",
  "Reason for editing this guild": "Reason for editing this guild",
  "Edits the level of the explicit content filter.": "Edits the level of the explicit content filter.",
  "The new level of the explicit content filter": "The new level of the explicit content filter",
  "Reason for changing the level of the guild's explicit content filter": "Reason for changing the level of the guild's explicit content filter",
  "Edits the setting of the default message notifications of the guild.": "Edits the setting of the default message notifications of the guild.",
  "The new setting for the default message notifications": "The new setting for the default message notifications",
  "Reason for changing the setting of the default message notifications": "Reason for changing the setting of the default message notifications",
  "Edits the flags of the default message notifications of the guild.": "Edits the flags of the default message notifications of the guild.",
  "The new flags for the default message notifications": "The new flags for the default message notifications",
  "Reason for changing the flags of the default message notifications": "Reason for changing the flags of the default message notifications",
  "Edits the name of the guild.": "Edits the name of the guild.",
  "The new name of the guild": "The new name of the guild",
  "Reason for changing the guild's name": "Reason for changing the guild's name",
  "Edits the region of the guild.": "Edits the region of the guild.",
  "The new region of the guild": "The new region of the guild",
  "Reason for changing the guild's region": "Reason for changing the guild's region",
  "Edits the verification level of the guild.": "Edits the verification level of the guild.",
  "The new verification level of the guild": "The new verification level of the guild",
  "Reason for changing the guild's verification level": "Reason for changing the guild's verification level",
  "Edits the AFK channel of the guild.": "Edits the AFK channel of the guild.",
  "The new AFK channel": "The new AFK channel",
  "Reason for changing the guild's AFK channel": "Reason for changing the guild's AFK channel",
  "Edits the system channel of the guild.": "Edits the system channel of the guild.",
  "The new system channel": "The new system channel",
  "Reason for changing the guild's system channel": "Reason for changing the guild's system channel",
  "Edits the AFK timeout of the guild.": "Edits the AFK timeout of the guild.",
  "The time in seconds that a user must be idle to be considered AFK": "The time in seconds that a user must be idle to be considered AFK",
  "Reason for changing the guild's AFK timeout": "Reason for changing the guild's AFK timeout",
  "Sets a new guild icon.": "Sets a new guild icon.",
  "The new icon of the guild": "The new icon of the guild",
  "Reason for changing the guild's icon": "Reason for changing the guild's icon",
  "Sets a new owner of the guild.": "Sets a new owner of the guild.",
  "The new owner of the guild": "The new owner of the guild",
  "Reason for setting the new owner": "Reason for setting the new owner",
  "Sets a new guild invite splash image.": "Sets a new guild invite splash image.",
  "The new invite splash image of the guild": "The new invite splash image of the guild",
  "Reason for changing the guild's invite splash image": "Reason for changing the guild's invite splash image",
  "Sets a new guild discovery splash image.": "Sets a new guild discovery splash image.",
  "The new discovery splash image of the guild": "The new discovery splash image of the guild",
  "Reason for changing the guild's discovery splash image": "Reason for changing the guild's discovery splash image",
  "Sets a new guild banner.": "Sets a new guild banner.",
  "The new banner of the guild": "The new banner of the guild",
  "Reason for changing the guild's banner": "Reason for changing the guild's banner",
  "Edits the rules channel of the guild.": "Edits the rules channel of the guild.",
  "The new rules channel": "The new rules channel",
  "Reason for changing the guild's rules channel": "Reason for changing the guild's rules channel",
  "Edits the community updates channel of the guild.": "Edits the community updates channel of the guild.",
  "The new community updates channel": "The new community updates channel",
  "Reason for changing the guild's community updates channel": "Reason for changing the guild's community updates channel",
  "Edits the preferred locale of the guild.": "Edits the preferred locale of the guild.",
  "The new preferred locale of the guild": "The new preferred locale of the guild",
  "Reason for changing the guild's preferred locale": "Reason for changing the guild's preferred locale",
  "Batch-updates the guild's channels' positions.": "Batch-updates the guild's channels' positions.",
  "Channel positions to update": "Channel positions to update",
  "Batch-updates the guild's role positions": "Batch-updates the guild's role positions",
  "Role positions to update": "Role positions to update",
  "Edits the guild's embed.": "Edits the guild's embed.",
  "The embed for the guild": "The embed for the guild",
  "Reason for changing the guild's embed": "Reason for changing the guild's embed",
  "Edits the guild's widget.": "Edits the guild's widget.",
  "The widget for the guild": "The widget for the guild",
  "Reason for changing the guild's widget": "Reason for changing the guild's widget",
  "Leaves the guild.": "Leaves the guild.",
  "Deletes the guild.": "Deletes the guild.",
  "Whether this guild equals another guild. It compares all properties, so for most operations\nit is advisable to just compare `guild.id === guild2.id` as it is much faster and is often\nwhat most users need.": "Whether this guild equals another guild. It compares all properties, so for most operations\nit is advisable to just compare `guild.id === guild2.id` as it is much faster and is often\nwhat most users need.",
  "The guild to compare with": "The guild to compare with",
  "When concatenated with a string, this automatically returns the guild's name instead of the Guild object.": "When concatenated with a string, this automatically returns the guild's name instead of the Guild object.",
  "Creates a collection of this guild's roles, sorted by their position and IDs.": "Creates a collection of this guild's roles, sorted by their position and IDs.",
  "Creates a collection of this guild's or a specific category's channels, sorted by their position and IDs.": "Creates a collection of this guild's or a specific category's channels, sorted by their position and IDs.",
  "Category to get the channels of": "Category to get the channels of",
  "Audit logs entries are held in this class.": "Audit logs entries are held in this class.",
  "Cached webhooks": "Cached webhooks",
  "Cached integrations": "Cached integrations",
  "The entries for this guild's audit logs": "The entries for this guild's audit logs",
  "Key mirror of all available audit log targets.": "Key mirror of all available audit log targets.",
  "All available actions keyed under their names to their numeric values.": "All available actions keyed under their names to their numeric values.",
  "Handles possible promises for entry targets.": "Handles possible promises for entry targets.",
  "Finds the target type from the entry action.": "Finds the target type from the entry action.",
  "The action target": "The action target",
  "Finds the action type from the entry action.": "Finds the action type from the entry action.",
  "Audit logs entry.": "Audit logs entry.",
  "The target type of this entry": "The target type of this entry",
  "The action type of this entry": "The action type of this entry",
  "Specific action type of this entry in its string presentation": "Specific action type of this entry in its string presentation",
  "The reason of this entry": "The reason of this entry",
  "The user that executed this entry": "The user that executed this entry",
  "Specific property changes": "Specific property changes",
  "The ID of this entry": "The ID of this entry",
  "Any extra data from the entry": "Any extra data from the entry",
  "The target of this entry": "The target of this entry",
  "The timestamp this entry was created at": "The timestamp this entry was created at",
  "The time this entry was created at": "The time this entry was created at",
  "Represents a guild channel from any of the following:\n- {@link TextChannel}\n- {@link VoiceChannel}\n- {@link CategoryChannel}\n- {@link NewsChannel}\n- {@link StoreChannel}": "Represents a guild channel from any of the following:\n- {@link TextChannel}\n- {@link VoiceChannel}\n- {@link CategoryChannel}\n- {@link NewsChannel}\n- {@link StoreChannel}",
  "The guild the guild channel is part of": "The guild the guild channel is part of",
  "The data for the guild channel": "The data for the guild channel",
  "Represents a custom emoji.": "Represents a custom emoji.",
  "The data for the guild emoji": "The data for the guild emoji",
  "The guild the guild emoji is part of": "The guild the guild emoji is part of",
  "Whether or not this emoji requires colons surrounding it": "Whether or not this emoji requires colons surrounding it",
  "Whether this emoji is managed by an external service": "Whether this emoji is managed by an external service",
  "Whether this emoji is available": "Whether this emoji is available",
  "The user who created this emoji": "The user who created this emoji",
  "The guild this emoji is part of": "The guild this emoji is part of",
  "Whether the emoji is deletable by the client user": "Whether the emoji is deletable by the client user",
  "A manager for roles this emoji is active for.": "A manager for roles this emoji is active for.",
  "Fetches the author for this emoji": "Fetches the author for this emoji",
  "Edits the emoji.": "Edits the emoji.",
  "The new data for the emoji": "The new data for the emoji",
  "Reason for editing this emoji": "Reason for editing this emoji",
  "Sets the name of the emoji.": "Sets the name of the emoji.",
  "The new name for the emoji": "The new name for the emoji",
  "Reason for changing the emoji's name": "Reason for changing the emoji's name",
  "Deletes the emoji.": "Deletes the emoji.",
  "Reason for deleting the emoji": "Reason for deleting the emoji",
  "Whether this emoji is the same as another one.": "Whether this emoji is the same as another one.",
  "The emoji to compare it to": "The emoji to compare it to",
  "Whether the emoji is equal to the given emoji or not": "Whether the emoji is equal to the given emoji or not",
  "Represents a member of a guild on Discord.": "Represents a member of a guild on Discord.",
  "The data for the guild member": "The data for the guild member",
  "The guild the member is part of": "The guild the member is part of",
  "The guild that this member is part of": "The guild that this member is part of",
  "The timestamp the member joined the guild at": "The timestamp the member joined the guild at",
  "The ID of the last message sent by the member in their guild, if one was sent": "The ID of the last message sent by the member in their guild, if one was sent",
  "The ID of the channel for the last message sent by the member in their guild, if one was sent": "The ID of the channel for the last message sent by the member in their guild, if one was sent",
  "The timestamp of when the member used their Nitro boost on the guild, if it was used": "The timestamp of when the member used their Nitro boost on the guild, if it was used",
  "Whether the member has been removed from the guild": "Whether the member has been removed from the guild",
  "The nickname of this member, if they have one": "The nickname of this member, if they have one",
  "The user that this guild member instance represents": "The user that this guild member instance represents",
  "Whether this GuildMember is a partial": "Whether this GuildMember is a partial",
  "A manager for the roles belonging to this member": "A manager for the roles belonging to this member",
  "The Message object of the last message sent by the member in their guild, if one was sent": "The Message object of the last message sent by the member in their guild, if one was sent",
  "The voice state of this member": "The voice state of this member",
  "The time this member joined the guild": "The time this member joined the guild",
  "The time of when the member used their Nitro boost on the guild, if it was used": "The time of when the member used their Nitro boost on the guild, if it was used",
  "The presence of this guild member": "The presence of this guild member",
  "The displayed color of this member in base 10": "The displayed color of this member in base 10",
  "The displayed color of this member in hexadecimal": "The displayed color of this member in hexadecimal",
  "The ID of this member": "The ID of this member",
  "The nickname of this member, or their username if they don't have one": "The nickname of this member, or their username if they don't have one",
  "The overall set of permissions for this member, taking only roles into account": "The overall set of permissions for this member, taking only roles into account",
  "Whether the client user is above this user in the hierarchy, according to role position and guild ownership.\nThis is a prerequisite for many moderative actions.": "Whether the client user is above this user in the hierarchy, according to role position and guild ownership.\nThis is a prerequisite for many moderative actions.",
  "Whether this member is kickable by the client user": "Whether this member is kickable by the client user",
  "Whether this member is bannable by the client user": "Whether this member is bannable by the client user",
  "Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel,\ntaking into account roles and permission overwrites.": "Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel,\ntaking into account roles and permission overwrites.",
  "The guild channel to use as context": "The guild channel to use as context",
  "Checks if any of this member's roles have a permission.": "Checks if any of this member's roles have a permission.",
  "Permission(s) to check for": "Permission(s) to check for",
  "Whether to allow the administrator permission to override": "Whether to allow the administrator permission to override",
  "Whether to allow being the guild's owner to override": "Whether to allow being the guild's owner to override",
  "Edits this member.": "Edits this member.",
  "The data to edit the member with": "The data to edit the member with",
  "Reason for editing this user": "Reason for editing this user",
  "Sets the nickname for this member.": "Sets the nickname for this member.",
  "The nickname for the guild member": "The nickname for the guild member",
  "Reason for setting the nickname": "Reason for setting the nickname",
  "Creates a DM channel between the client and this member.": "Creates a DM channel between the client and this member.",
  "Deletes any DMs with this member.": "Deletes any DMs with this member.",
  "Kicks this member from the guild.": "Kicks this member from the guild.",
  "Reason for kicking user": "Reason for kicking user",
  "Bans this guild member.": "Bans this guild member.",
  "Fetches this GuildMember.": "Fetches this GuildMember.",
  "When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.": "When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.",
  "Represents the data about the guild any bot can preview, connected to the specified guild.": "Represents the data about the guild any bot can preview, connected to the specified guild.",
  "The id of this guild": "The id of this guild",
  "The name of this guild": "The name of this guild",
  "The icon of this guild": "The icon of this guild",
  "The splash icon of this guild": "The splash icon of this guild",
  "The discovery splash icon of this guild": "The discovery splash icon of this guild",
  "An array of enabled guild features": "An array of enabled guild features",
  "The approximate count of members in this guild": "The approximate count of members in this guild",
  "The approximate count of online members in this guild": "The approximate count of online members in this guild",
  "The description for this guild": "The description for this guild",
  "Collection of emojis belonging to this guild": "Collection of emojis belonging to this guild",
  "Builds the guild with the provided data.": "Builds the guild with the provided data.",
  "The URL to this guild's splash.": "The URL to this guild's splash.",
  "The URL to this guild's discovery splash.": "The URL to this guild's discovery splash.",
  "Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.": "Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.",
  "The public guild this emoji is part of": "The public guild this emoji is part of",
  "Set of roles this emoji is active for": "Set of roles this emoji is active for",
  "Represents a guild integration.": "Represents a guild integration.",
  "The guild this integration belongs to": "The guild this integration belongs to",
  "The integration id": "The integration id",
  "The integration name": "The integration name",
  "The integration type (twitch, youtube, etc)": "The integration type (twitch, youtube, etc)",
  "Whether this integration is enabled": "Whether this integration is enabled",
  "Whether this integration is syncing": "Whether this integration is syncing",
  "The role that this integration uses for subscribers": "The role that this integration uses for subscribers",
  "The user for this integration": "The user for this integration",
  "The account integration information": "The account integration information",
  "The last time this integration was last synced": "The last time this integration was last synced",
  "The behavior of expiring subscribers": "The behavior of expiring subscribers",
  "The grace period before expiring subscribers": "The grace period before expiring subscribers",
  "Sync this integration": "Sync this integration",
  "Edits this integration.": "Edits this integration.",
  "The data to edit this integration with": "The data to edit this integration with",
  "Reason for editing this integration": "Reason for editing this integration",
  "Deletes this integration.": "Deletes this integration.",
  "Reason for deleting this integration": "Reason for deleting this integration",
  "Abstract class for defining a new Collector.": "Abstract class for defining a new Collector.",
  "The client that instantiated this Collector": "The client that instantiated this Collector",
  "The filter applied to this collector": "The filter applied to this collector",
  "The options of this collector": "The options of this collector",
  "The items collected by this collector": "The items collected by this collector",
  "Whether this collector has finished collecting": "Whether this collector has finished collecting",
  "Timeout for cleanup": "Timeout for cleanup",
  "Timeout for cleanup due to inactivity": "Timeout for cleanup due to inactivity",
  "Returns a promise that resolves with the next collected element;\nrejects with collected elements if the collector finishes without receiving a next element": "Returns a promise that resolves with the next collected element;\nrejects with collected elements if the collector finishes without receiving a next element",
  "Call this to handle an event as a collectable element. Accepts any event data as parameters.": "Call this to handle an event as a collectable element. Accepts any event data as parameters.",
  "The arguments emitted by the listener": "The arguments emitted by the listener",
  "Call this to remove an element from the collection. Accepts any event data as parameters.": "Call this to remove an element from the collection. Accepts any event data as parameters.",
  "Stops this collector and emits the `end` event.": "Stops this collector and emits the `end` event.",
  "The reason this collector is ending": "The reason this collector is ending",
  "Resets the collectors timeout and idle timer.": "Resets the collectors timeout and idle timer.",
  "How long to run the collector for in milliseconds": "How long to run the collector for in milliseconds",
  "How long to stop the collector after inactivity in milliseconds": "How long to stop the collector after inactivity in milliseconds",
  "Checks whether the collector should end, and if so, ends it.": "Checks whether the collector should end, and if so, ends it.",
  "Handles incoming events from the `handleCollect` function. Returns null if the event should not\nbe collected, or returns an object describing the data that should be stored.": "Handles incoming events from the `handleCollect` function. Returns null if the event should not\nbe collected, or returns an object describing the data that should be stored.",
  "Any args the event listener emits": "Any args the event listener emits",
  "Data to insert into collection, if any": "Data to insert into collection, if any",
  "Handles incoming events from the `handleDispose`. Returns null if the event should not\nbe disposed, or returns the key that should be removed.": "Handles incoming events from the `handleDispose`. Returns null if the event should not\nbe disposed, or returns the key that should be removed.",
  "Key to remove from the collection, if any": "Key to remove from the collection, if any",
  "The reason this collector has ended or will end with.": "The reason this collector has ended or will end with.",
  "Reason to end the collector, if any": "Reason to end the collector, if any",
  "Emitted whenever an element is collected.": "Emitted whenever an element is collected.",
  "Emitted whenever an element is disposed of.": "Emitted whenever an element is disposed of.",
  "Emitted when the collector is finished collecting.": "Emitted when the collector is finished collecting.",
  "The elements collected by the collector": "The elements collected by the collector",
  "The reason the collector ended": "The reason the collector ended",
  "Interface for classes that have text-channel-like features.": "Interface for classes that have text-channel-like features.",
  "Bulk deletes given messages that are newer than two weeks.": "Bulk deletes given messages that are newer than two weeks.",
  "Messages or number of messages to delete": "Messages or number of messages to delete",
  "Filter messages to remove those which are older than two weeks automatically": "Filter messages to remove those which are older than two weeks automatically",
  "Deleted messages": "Deleted messages",
  "Represents an invitation to a guild channel.\n<warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>": "Represents an invitation to a guild channel.\n<warn>The only guaranteed properties are `code`, `channel`, and `url`. Other properties can be missing.</warn>",
  "The guild the invite is for": "The guild the invite is for",
  "The code for this invite": "The code for this invite",
  "The approximate number of online members of the guild this invite is for": "The approximate number of online members of the guild this invite is for",
  "The approximate total number of members of the guild this invite is for": "The approximate total number of members of the guild this invite is for",
  "Whether or not this invite is temporary": "Whether or not this invite is temporary",
  "The maximum age of the invite, in seconds, 0 if never expires": "The maximum age of the invite, in seconds, 0 if never expires",
  "How many times this invite has been used": "How many times this invite has been used",
  "The maximum uses of this invite": "The maximum uses of this invite",
  "The user who created this invite": "The user who created this invite",
  "The target user for this invite": "The target user for this invite",
  "The target user type": "The target user type",
  "The channel the invite is for": "The channel the invite is for",
  "The timestamp the invite was created at": "The timestamp the invite was created at",
  "The time the invite was created at": "The time the invite was created at",
  "Whether the invite is deletable by the client user": "Whether the invite is deletable by the client user",
  "The timestamp the invite will expire at": "The timestamp the invite will expire at",
  "The time the invite will expire at": "The time the invite will expire at",
  "The URL to the invite": "The URL to the invite",
  "Deletes this invite.": "Deletes this invite.",
  "Reason for deleting this invite": "Reason for deleting this invite",
  "When concatenated with a string, this automatically concatenates the invite's URL instead of the object.": "When concatenated with a string, this automatically concatenates the invite's URL instead of the object.",
  "Represents a message on Discord.": "Represents a message on Discord.",
  "The data for the message": "The data for the message",
  "The channel the message was sent in": "The channel the message was sent in",
  "The channel that the message was sent in": "The channel that the message was sent in",
  "Whether this message has been deleted": "Whether this message has been deleted",
  "The ID of the message": "The ID of the message",
  "The type of the message": "The type of the message",
  "Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)": "Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)",
  "The content of the message": "The content of the message",
  "The author of the message": "The author of the message",
  "Whether or not this message is pinned": "Whether or not this message is pinned",
  "Whether or not the message was Text-To-Speech": "Whether or not the message was Text-To-Speech",
  "A random number or string used for checking message delivery\n<warn>This is only received after the message was sent successfully, and\nlost if re-fetched</warn>": "A random number or string used for checking message delivery\n<warn>This is only received after the message was sent successfully, and\nlost if re-fetched</warn>",
  "A list of embeds in the message - e.g. YouTube Player": "A list of embeds in the message - e.g. YouTube Player",
  "A collection of attachments in the message - e.g. Pictures - mapped by their ID": "A collection of attachments in the message - e.g. Pictures - mapped by their ID",
  "The timestamp the message was sent at": "The timestamp the message was sent at",
  "The timestamp the message was last edited at (if applicable)": "The timestamp the message was last edited at (if applicable)",
  "A manager of the reactions belonging to this message": "A manager of the reactions belonging to this message",
  "All valid mentions that the message contains": "All valid mentions that the message contains",
  "ID of the webhook that sent the message, if applicable": "ID of the webhook that sent the message, if applicable",
  "Supplemental application information for group activities": "Supplemental application information for group activities",
  "Group activity": "Group activity",
  "The previous versions of the message, sorted with the most recent first": "The previous versions of the message, sorted with the most recent first",
  "Flags that are applied to the message": "Flags that are applied to the message",
  "Message reference data": "Message reference data",
  "Whether or not this message is a partial": "Whether or not this message is a partial",
  "Represents the author of the message as a guild member.\nOnly available if the message comes from a guild where the author is still a member": "Represents the author of the message as a guild member.\nOnly available if the message comes from a guild where the author is still a member",
  "The time the message was sent at": "The time the message was sent at",
  "The time the message was last edited at (if applicable)": "The time the message was last edited at (if applicable)",
  "The guild the message was sent in (if in a guild channel)": "The guild the message was sent in (if in a guild channel)",
  "The url to jump to this message": "The url to jump to this message",
  "The message contents with all mentions replaced by the equivalent text.\nIf mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.": "The message contents with all mentions replaced by the equivalent text.\nIf mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.",
  "An array of cached versions of the message, including the current version\nSorted from latest (first) to oldest (last)": "An array of cached versions of the message, including the current version\nSorted from latest (first) to oldest (last)",
  "Whether the message is editable by the client user": "Whether the message is editable by the client user",
  "Whether the message is deletable by the client user": "Whether the message is deletable by the client user",
  "Whether the message is pinnable by the client user": "Whether the message is pinnable by the client user",
  "Updates the message.": "Updates the message.",
  "Raw Discord message update data": "Raw Discord message update data",
  "Creates a reaction collector.": "Creates a reaction collector.",
  "The filter to apply": "The filter to apply",
  "Options to send to the collector": "Options to send to the collector",
  "Similar to createReactionCollector but in promise form.\nResolves with a collection of reactions that pass the specified filter.": "Similar to createReactionCollector but in promise form.\nResolves with a collection of reactions that pass the specified filter.",
  "Edits the content of the message.": "Edits the content of the message.",
  "The new content for the message": "The new content for the message",
  "Pins this message to the channel's pinned messages.": "Pins this message to the channel's pinned messages.",
  "Options for pinning": "Options for pinning",
  "Reason for pinning": "Reason for pinning",
  "Unpins this message from the channel's pinned messages.": "Unpins this message from the channel's pinned messages.",
  "Options for unpinning": "Options for unpinning",
  "Reason for unpinning": "Reason for unpinning",
  "Adds a reaction to the message.": "Adds a reaction to the message.",
  "The emoji to react with": "The emoji to react with",
  "Deletes the message.": "Deletes the message.",
  "How long to wait to delete the message in milliseconds": "How long to wait to delete the message in milliseconds",
  "Replies to the message.": "Replies to the message.",
  "The content for the message": "The content for the message",
  "Fetch this message.": "Fetch this message.",
  "Fetches the webhook used to create this message.": "Fetches the webhook used to create this message.",
  "Suppresses or unsuppresses embeds on a message": "Suppresses or unsuppresses embeds on a message",
  "If the embeds should be suppressed or not": "If the embeds should be suppressed or not",
  "Used mainly internally. Whether two messages are identical in properties. If you want to compare messages\nwithout checking all the properties, use `message.id === message2.id`, which is much more efficient. This\nmethod allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.": "Used mainly internally. Whether two messages are identical in properties. If you want to compare messages\nwithout checking all the properties, use `message.id === message2.id`, which is much more efficient. This\nmethod allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.",
  "The message to compare it to": "The message to compare it to",
  "Raw data passed through the WebSocket about this message": "Raw data passed through the WebSocket about this message",
  "When concatenated with a string, this automatically concatenates the message's content instead of the object.": "When concatenated with a string, this automatically concatenates the message's content instead of the object.",
  "Represents an attachment in a message.": "Represents an attachment in a message.",
  "The file": "The file",
  "The name of the file, if any": "The name of the file, if any",
  "Extra data": "Extra data",
  "The name of this attachment": "The name of this attachment",
  "The ID of this attachment": "The ID of this attachment",
  "The size of this attachment in bytes": "The size of this attachment in bytes",
  "The URL to this attachment": "The URL to this attachment",
  "The Proxy URL to this attachment": "The Proxy URL to this attachment",
  "The height of this attachment (if an image or video)": "The height of this attachment (if an image or video)",
  "The width of this attachment (if an image or video)": "The width of this attachment (if an image or video)",
  "Whether or not this attachment has been marked as a spoiler": "Whether or not this attachment has been marked as a spoiler",
  "Sets the file of this attachment.": "Sets the file of this attachment.",
  "This attachment": "This attachment",
  "Sets the name of this attachment.": "Sets the name of this attachment.",
  "The name of the file": "The name of the file",
  "Collects messages on a channel.\nWill automatically stop if the channel (`'channelDelete'`) or guild (`'guildDelete'`) are deleted.": "Collects messages on a channel.\nWill automatically stop if the channel (`'channelDelete'`) or guild (`'guildDelete'`) are deleted.",
  "The channel": "The channel",
  "The filter to be applied to this collector": "The filter to be applied to this collector",
  "The options to be applied to this collector": "The options to be applied to this collector",
  "Total number of messages that were received in the channel during message collection": "Total number of messages that were received in the channel during message collection",
  "Handles a message for possible collection.": "Handles a message for possible collection.",
  "The message that could be collected": "The message that could be collected",
  "Handles a message for possible disposal.": "Handles a message for possible disposal.",
  "The message that could be disposed of": "The message that could be disposed of",
  "Checks after un/collection to see if the collector is done.": "Checks after un/collection to see if the collector is done.",
  "Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.": "Handles checking if the channel has been deleted, and if so, stops the collector with the reason 'channelDelete'.",
  "Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.": "Handles checking if the guild has been deleted, and if so, stops the collector with the reason 'guildDelete'.",
  "Emitted whenever a message is collected.": "Emitted whenever a message is collected.",
  "The message that was collected": "The message that was collected",
  "Emitted whenever a message is disposed of.": "Emitted whenever a message is disposed of.",
  "The message that was disposed of": "The message that was disposed of",
  "Represents an embed in a message (image/video preview, rich embed, etc.)": "Represents an embed in a message (image/video preview, rich embed, etc.)",
  "MessageEmbed to clone or raw embed data": "MessageEmbed to clone or raw embed data",
  "The type of this embed, either:\n* `rich` - a rich embed\n* `image` - an image embed\n* `video` - a video embed\n* `gifv` - a gifv embed\n* `article` - an article embed\n* `link` - a link embed": "The type of this embed, either:\n* `rich` - a rich embed\n* `image` - an image embed\n* `video` - a video embed\n* `gifv` - a gifv embed\n* `article` - an article embed\n* `link` - a link embed",
  "The title of this embed": "The title of this embed",
  "The description of this embed": "The description of this embed",
  "The URL of this embed": "The URL of this embed",
  "The color of this embed": "The color of this embed",
  "The timestamp of this embed": "The timestamp of this embed",
  "The fields of this embed": "The fields of this embed",
  "The thumbnail of this embed (if there is one)": "The thumbnail of this embed (if there is one)",
  "The image of this embed, if there is one": "The image of this embed, if there is one",
  "The video of this embed (if there is one)": "The video of this embed (if there is one)",
  "The author of this embed (if there is one)": "The author of this embed (if there is one)",
  "The provider of this embed (if there is one)": "The provider of this embed (if there is one)",
  "The footer of this embed": "The footer of this embed",
  "The files of this embed": "The files of this embed",
  "The date displayed on this embed": "The date displayed on this embed",
  "The hexadecimal version of the embed color, with a leading hash": "The hexadecimal version of the embed color, with a leading hash",
  "The accumulated length for the embed title, description, fields and footer text": "The accumulated length for the embed title, description, fields and footer text",
  "Adds a field to the embed (max 25).": "Adds a field to the embed (max 25).",
  "The name of this field": "The name of this field",
  "The value of this field": "The value of this field",
  "If this field will be displayed inline": "If this field will be displayed inline",
  "Adds fields to the embed (max 25).": "Adds fields to the embed (max 25).",
  "The fields to add": "The fields to add",
  "Removes, replaces, and inserts fields in the embed (max 25).": "Removes, replaces, and inserts fields in the embed (max 25).",
  "The index to start at": "The index to start at",
  "The number of fields to remove": "The number of fields to remove",
  "The replacing field objects": "The replacing field objects",
  "Sets the file to upload alongside the embed. This file can be accessed via `attachment://fileName.extension` when\nsetting an embed image or author/footer icons. Multiple files can be attached.": "Sets the file to upload alongside the embed. This file can be accessed via `attachment://fileName.extension` when\nsetting an embed image or author/footer icons. Multiple files can be attached.",
  "Files to attach": "Files to attach",
  "Sets the author of this embed.": "Sets the author of this embed.",
  "The name of the author": "The name of the author",
  "The icon URL of the author": "The icon URL of the author",
  "The URL of the author": "The URL of the author",
  "Sets the color of this embed.": "Sets the color of this embed.",
  "The color of the embed": "The color of the embed",
  "Sets the description of this embed.": "Sets the description of this embed.",
  "The description": "The description",
  "Sets the footer of this embed.": "Sets the footer of this embed.",
  "The text of the footer": "The text of the footer",
  "The icon URL of the footer": "The icon URL of the footer",
  "Sets the image of this embed.": "Sets the image of this embed.",
  "The URL of the image": "The URL of the image",
  "Sets the thumbnail of this embed.": "Sets the thumbnail of this embed.",
  "The URL of the thumbnail": "The URL of the thumbnail",
  "Sets the timestamp of this embed.": "Sets the timestamp of this embed.",
  "The timestamp or date": "The timestamp or date",
  "Sets the title of this embed.": "Sets the title of this embed.",
  "The title": "The title",
  "Sets the URL of this embed.": "Sets the URL of this embed.",
  "The URL": "The URL",
  "Transforms the embed to a plain object.": "Transforms the embed to a plain object.",
  "The raw data of this embed": "The raw data of this embed",
  "Normalizes field input and resolves strings.": "Normalizes field input and resolves strings.",
  "The name of the field": "The name of the field",
  "The value of the field": "The value of the field",
  "Set the field to display inline": "Set the field to display inline",
  "Fields to normalize": "Fields to normalize",
  "Keeps track of mentions in a {@link Message}.": "Keeps track of mentions in a {@link Message}.",
  "Whether `@everyone` or `@here` were mentioned": "Whether `@everyone` or `@here` were mentioned",
  "Any users that were mentioned\n<info>Order as received from the API, not as they appear in the message content</info>": "Any users that were mentioned\n<info>Order as received from the API, not as they appear in the message content</info>",
  "Any roles that were mentioned\n<info>Order as received from the API, not as they appear in the message content</info>": "Any roles that were mentioned\n<info>Order as received from the API, not as they appear in the message content</info>",
  "Cached members for {@link MessageMentions#members}": "Cached members for {@link MessageMentions#members}",
  "Cached channels for {@link MessageMentions#channels}": "Cached channels for {@link MessageMentions#channels}",
  "A collection of crossposted channels\n<info>Order as received from the API, not as they appear in the message content</info>": "A collection of crossposted channels\n<info>Order as received from the API, not as they appear in the message content</info>",
  "Any members that were mentioned (only in {@link TextChannel}s)\n<info>Order as received from the API, not as they appear in the message content</info>": "Any members that were mentioned (only in {@link TextChannel}s)\n<info>Order as received from the API, not as they appear in the message content</info>",
  "Any channels that were mentioned\n<info>Order as they appear first in the message content</info>": "Any channels that were mentioned\n<info>Order as they appear first in the message content</info>",
  "Regular expression that globally matches `@everyone` and `@here`": "Regular expression that globally matches `@everyone` and `@here`",
  "Regular expression that globally matches user mentions like `<@81440962496172032>`": "Regular expression that globally matches user mentions like `<@81440962496172032>`",
  "Regular expression that globally matches role mentions like `<@&297577916114403338>`": "Regular expression that globally matches role mentions like `<@&297577916114403338>`",
  "Regular expression that globally matches channel mentions like `<#222079895583457280>`": "Regular expression that globally matches channel mentions like `<#222079895583457280>`",
  "Checks if a user, guild member, role, or channel is mentioned.\nTakes into account user mentions, role mentions, and @everyone/@here mentions.": "Checks if a user, guild member, role, or channel is mentioned.\nTakes into account user mentions, role mentions, and @everyone/@here mentions.",
  "User/Role/Channel to check": "User/Role/Channel to check",
  "Whether to ignore direct mentions to the item": "Whether to ignore direct mentions to the item",
  "Whether to ignore role mentions to a guild member": "Whether to ignore role mentions to a guild member",
  "Whether to ignore everyone/here mentions": "Whether to ignore everyone/here mentions",
  "Represents a reaction to a message.": "Represents a reaction to a message.",
  "The data for the message reaction": "The data for the message reaction",
  "The message the reaction refers to": "The message the reaction refers to",
  "The client that instantiated this message reaction": "The client that instantiated this message reaction",
  "The message that this reaction refers to": "The message that this reaction refers to",
  "Whether the client has given this reaction": "Whether the client has given this reaction",
  "A manager of the users that have given this reaction": "A manager of the users that have given this reaction",
  "The number of people that have given the same reaction": "The number of people that have given the same reaction",
  "The emoji of this reaction, either an GuildEmoji object for known custom emojis, or a ReactionEmoji\nobject which has fewer properties. Whatever the prototype of the emoji, it will still have\n`name`, `id`, `identifier` and `toString()`": "The emoji of this reaction, either an GuildEmoji object for known custom emojis, or a ReactionEmoji\nobject which has fewer properties. Whatever the prototype of the emoji, it will still have\n`name`, `id`, `identifier` and `toString()`",
  "Whether or not this reaction is a partial": "Whether or not this reaction is a partial",
  "Removes all users from this reaction.": "Removes all users from this reaction.",
  "Fetch this reaction.": "Fetch this reaction.",
  "Represents a guild news channel on Discord.": "Represents a guild news channel on Discord.",
  "A manager of the messages sent to this channel": "A manager of the messages sent to this channel",
  "If the guild considers this channel NSFW": "If the guild considers this channel NSFW",
  "The topic of the text channel": "The topic of the text channel",
  "The ID of the last message sent in this channel, if one was sent": "The ID of the last message sent in this channel, if one was sent",
  "The ratelimit per user for this channel in seconds": "The ratelimit per user for this channel in seconds",
  "Sets the rate limit per user for this channel.": "Sets the rate limit per user for this channel.",
  "The new ratelimit in seconds": "The new ratelimit in seconds",
  "Reason for changing the channel's ratelimits": "Reason for changing the channel's ratelimits",
  "Sets whether this channel is flagged as NSFW.": "Sets whether this channel is flagged as NSFW.",
  "Whether the channel should be considered NSFW": "Whether the channel should be considered NSFW",
  "Reason for changing the channel's NSFW flag": "Reason for changing the channel's NSFW flag",
  "Fetches all webhooks for the channel.": "Fetches all webhooks for the channel.",
  "Creates a webhook for the channel.": "Creates a webhook for the channel.",
  "The name of the webhook": "The name of the webhook",
  "Options for creating the webhook": "Options for creating the webhook",
  "Avatar for the webhook": "Avatar for the webhook",
  "Reason for creating the webhook": "Reason for creating the webhook",
  "webhook The created webhook": "webhook The created webhook",
  "Represents a Partial Group DM Channel on Discord.": "Represents a Partial Group DM Channel on Discord.",
  "The name of this Group DM Channel": "The name of this Group DM Channel",
  "The hash of the channel icon": "The hash of the channel icon",
  "The URL to this channel's icon.": "The URL to this channel's icon.",
  "Represents a permission overwrite for a role or member in a guild channel.": "Represents a permission overwrite for a role or member in a guild channel.",
  "The GuildChannel this overwrite is for": "The GuildChannel this overwrite is for",
  "The ID of this overwrite, either a user ID or a role ID": "The ID of this overwrite, either a user ID or a role ID",
  "The type of this overwrite": "The type of this overwrite",
  "The permissions that are denied for the user or role.": "The permissions that are denied for the user or role.",
  "The permissions that are allowed for the user or role.": "The permissions that are allowed for the user or role.",
  "Updates this permissionOverwrites.": "Updates this permissionOverwrites.",
  "Deletes this Permission Overwrite.": "Deletes this Permission Overwrite.",
  "Reason for deleting this overwrite": "Reason for deleting this overwrite",
  "Resolves bitfield permissions overwrites from an object.": "Resolves bitfield permissions overwrites from an object.",
  "The initial permissions": "The initial permissions",
  "Initial allowed permissions": "Initial allowed permissions",
  "Initial denied permissions": "Initial denied permissions",
  "Resolves an overwrite into {@link RawOverwriteData}.": "Resolves an overwrite into {@link RawOverwriteData}.",
  "The overwrite-like data to resolve": "The overwrite-like data to resolve",
  "The guild to resolve from": "The guild to resolve from",
  "Represents a user's presence.": "Represents a user's presence.",
  "The data for the presence": "The data for the presence",
  "The user ID of this presence": "The user ID of this presence",
  "The guild of this presence": "The guild of this presence",
  "The user of this presence": "The user of this presence",
  "The member of this presence": "The member of this presence",
  "The status of this presence": "The status of this presence",
  "The activities of this presence": "The activities of this presence",
  "The devices this presence is on": "The devices this presence is on",
  "Whether this presence is equal to another.": "Whether this presence is equal to another.",
  "The presence to compare with": "The presence to compare with",
  "Represents an activity that is part of a user's presence.": "Represents an activity that is part of a user's presence.",
  "The name of the activity being played": "The name of the activity being played",
  "The type of the activity status": "The type of the activity status",
  "If the activity is being streamed, a link to the stream": "If the activity is being streamed, a link to the stream",
  "Details about the activity": "Details about the activity",
  "State of the activity": "State of the activity",
  "Application ID associated with this activity": "Application ID associated with this activity",
  "Timestamps for the activity": "Timestamps for the activity",
  "Party of the activity": "Party of the activity",
  "Assets for rich presence": "Assets for rich presence",
  "Flags that describe the activity": "Flags that describe the activity",
  "Emoji for a custom activity": "Emoji for a custom activity",
  "Creation date of the activity": "Creation date of the activity",
  "The time the activity was created at": "The time the activity was created at",
  "Whether this activity is equal to another activity.": "Whether this activity is equal to another activity.",
  "The activity to compare with": "The activity to compare with",
  "When concatenated with a string, this automatically returns the activities' name instead of the Activity object.": "When concatenated with a string, this automatically returns the activities' name instead of the Activity object.",
  "Assets for a rich presence": "Assets for a rich presence",
  "Hover text for the large image": "Hover text for the large image",
  "Hover text for the small image": "Hover text for the small image",
  "ID of the large image asset": "ID of the large image asset",
  "ID of the small image asset": "ID of the small image asset",
  "Gets the URL of the small image asset": "Gets the URL of the small image asset",
  "Options for the image url": "Options for the image url",
  "Format of the image": "Format of the image",
  "Size of the image": "Size of the image",
  "The small image URL": "The small image URL",
  "Gets the URL of the large image asset": "Gets the URL of the large image asset",
  "The large image URL": "The large image URL",
  "Collects reactions on messages.\nWill automatically stop if the message (`'messageDelete'`),\nchannel (`'channelDelete'`), or guild (`'guildDelete'`) are deleted.": "Collects reactions on messages.\nWill automatically stop if the message (`'messageDelete'`),\nchannel (`'channelDelete'`), or guild (`'guildDelete'`) are deleted.",
  "The message upon which to collect reactions": "The message upon which to collect reactions",
  "The filter to apply to this collector": "The filter to apply to this collector",
  "The options to apply to this collector": "The options to apply to this collector",
  "The users which have reacted to this message": "The users which have reacted to this message",
  "The total number of reactions collected": "The total number of reactions collected",
  "Handles an incoming reaction for possible collection.": "Handles an incoming reaction for possible collection.",
  "The reaction to possibly collect": "The reaction to possibly collect",
  "Handles a reaction deletion for possible disposal.": "Handles a reaction deletion for possible disposal.",
  "The reaction to possibly dispose of": "The reaction to possibly dispose of",
  "The user that removed the reaction": "The user that removed the reaction",
  "Empties this reaction collector.": "Empties this reaction collector.",
  "Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.": "Handles checking if the message has been deleted, and if so, stops the collector with the reason 'messageDelete'.",
  "The message that was deleted": "The message that was deleted",
  "Gets the collector key for a reaction.": "Gets the collector key for a reaction.",
  "The message reaction to get the key for": "The message reaction to get the key for",
  "Emitted whenever a reaction is collected.": "Emitted whenever a reaction is collected.",
  "The reaction that was collected": "The reaction that was collected",
  "The user that added the reaction": "The user that added the reaction",
  "Emitted whenever a reaction is disposed of and the `dispose` option is set to true.": "Emitted whenever a reaction is disposed of and the `dispose` option is set to true.",
  "The reaction that was disposed of": "The reaction that was disposed of",
  "Emitted whenever a reaction is removed from a message and the `dispose` option is set to true.\nWill emit on all reaction removals, as opposed to {@link Collector#dispose} which will only\nbe emitted when the entire reaction is removed.": "Emitted whenever a reaction is removed from a message and the `dispose` option is set to true.\nWill emit on all reaction removals, as opposed to {@link Collector#dispose} which will only\nbe emitted when the entire reaction is removed.",
  "Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\nwill use this class opposed to the Emoji class when the client doesn't know enough\ninformation about them.": "Represents a limited emoji set used for both custom and unicode emojis. Custom emojis\nwill use this class opposed to the Emoji class when the client doesn't know enough\ninformation about them.",
  "The message reaction this emoji refers to": "The message reaction this emoji refers to",
  "Represents a role on Discord.": "Represents a role on Discord.",
  "The data for the role": "The data for the role",
  "The guild the role is part of": "The guild the role is part of",
  "The guild that the role belongs to": "The guild that the role belongs to",
  "The ID of the role (unique to the guild it is part of)": "The ID of the role (unique to the guild it is part of)",
  "The name of the role": "The name of the role",
  "The base 10 color of the role": "The base 10 color of the role",
  "If true, users that are part of this role will appear in a separate category in the users list": "If true, users that are part of this role will appear in a separate category in the users list",
  "The raw position of the role from the API": "The raw position of the role from the API",
  "The permissions of the role": "The permissions of the role",
  "Whether or not the role is managed by an external service": "Whether or not the role is managed by an external service",
  "Whether or not the role can be mentioned by anyone": "Whether or not the role can be mentioned by anyone",
  "Whether the role has been deleted": "Whether the role has been deleted",
  "The timestamp the role was created at": "The timestamp the role was created at",
  "The time the role was created at": "The time the role was created at",
  "The hexadecimal version of the role color, with a leading hashtag": "The hexadecimal version of the role color, with a leading hashtag",
  "The cached guild members that have this role": "The cached guild members that have this role",
  "Whether the role is editable by the client user": "Whether the role is editable by the client user",
  "The position of the role in the role manager": "The position of the role in the role manager",
  "Compares this role's position to another role's.": "Compares this role's position to another role's.",
  "Role to compare to this one": "Role to compare to this one",
  "Negative number if this role's position is lower (other role's is higher),\npositive number if this one is higher (other's is lower), 0 if equal": "Negative number if this role's position is lower (other role's is higher),\npositive number if this one is higher (other's is lower), 0 if equal",
  "Edits the role.": "Edits the role.",
  "The new data for the role": "The new data for the role",
  "Reason for editing this role": "Reason for editing this role",
  "Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel,\ntaking into account permission overwrites.": "Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel,\ntaking into account permission overwrites.",
  "Sets a new name for the role.": "Sets a new name for the role.",
  "The new name of the role": "The new name of the role",
  "Reason for changing the role's name": "Reason for changing the role's name",
  "Sets a new color for the role.": "Sets a new color for the role.",
  "The color of the role": "The color of the role",
  "Reason for changing the role's color": "Reason for changing the role's color",
  "Sets whether or not the role should be hoisted.": "Sets whether or not the role should be hoisted.",
  "Whether or not to hoist the role": "Whether or not to hoist the role",
  "Reason for setting whether or not the role should be hoisted": "Reason for setting whether or not the role should be hoisted",
  "Sets the permissions of the role.": "Sets the permissions of the role.",
  "Reason for changing the role's permissions": "Reason for changing the role's permissions",
  "Sets whether this role is mentionable.": "Sets whether this role is mentionable.",
  "Whether this role should be mentionable": "Whether this role should be mentionable",
  "Reason for setting whether or not this role should be mentionable": "Reason for setting whether or not this role should be mentionable",
  "Sets the position of the role.": "Sets the position of the role.",
  "The position of the role": "The position of the role",
  "Deletes the role.": "Deletes the role.",
  "Reason for deleting this role": "Reason for deleting this role",
  "Whether this role equals another role. It compares all properties, so for most operations\nit is advisable to just compare `role.id === role2.id` as it is much faster and is often\nwhat most users need.": "Whether this role equals another role. It compares all properties, so for most operations\nit is advisable to just compare `role.id === role2.id` as it is much faster and is often\nwhat most users need.",
  "Role to compare with": "Role to compare with",
  "When concatenated with a string, this automatically returns the role's mention instead of the Role object.": "When concatenated with a string, this automatically returns the role's mention instead of the Role object.",
  "Compares the positions of two roles.": "Compares the positions of two roles.",
  "First role to compare": "First role to compare",
  "Second role to compare": "Second role to compare",
  "Negative number if the first role's position is lower (second role's is higher),\npositive number if the first's is higher (second's is lower), 0 if equal": "Negative number if the first role's position is lower (second role's is higher),\npositive number if the first's is higher (second's is lower), 0 if equal",
  "Represents a guild store channel on Discord.": "Represents a guild store channel on Discord.",
  "The guild the store channel is part of": "The guild the store channel is part of",
  "The data for the store channel": "The data for the store channel",
  "Represents a Client OAuth2 Application Team.": "Represents a Client OAuth2 Application Team.",
  "The ID of the Team": "The ID of the Team",
  "The name of the Team": "The name of the Team",
  "The Team's icon hash": "The Team's icon hash",
  "The Team's owner id": "The Team's owner id",
  "The Team's members": "The Team's members",
  "The owner of this team": "The owner of this team",
  "The timestamp the team was created at": "The timestamp the team was created at",
  "The time the team was created at": "The time the team was created at",
  "A link to the teams's icon.": "A link to the teams's icon.",
  "When concatenated with a string, this automatically returns the Team's name instead of the\nTeam object.": "When concatenated with a string, this automatically returns the Team's name instead of the\nTeam object.",
  "Represents a Client OAuth2 Application Team Member.": "Represents a Client OAuth2 Application Team Member.",
  "The Team this member is part of": "The Team this member is part of",
  "The permissions this Team Member has with regard to the team": "The permissions this Team Member has with regard to the team",
  "The user for this Team Member": "The user for this Team Member",
  "The ID of the Team Member": "The ID of the Team Member",
  "When concatenated with a string, this automatically returns the team members's mention instead of the\nTeamMember object.": "When concatenated with a string, this automatically returns the team members's mention instead of the\nTeamMember object.",
  "Represents a guild text channel on Discord.": "Represents a guild text channel on Discord.",
  "The guild the text channel is part of": "The guild the text channel is part of",
  "The data for the text channel": "The data for the text channel",
  "Represents a user on Discord.": "Represents a user on Discord.",
  "The data for the user": "The data for the user",
  "The presence of this user": "The presence of this user",
  "Represents a guild voice channel on Discord.": "Represents a guild voice channel on Discord.",
  "The bitrate of this voice channel": "The bitrate of this voice channel",
  "The maximum amount of users allowed in this channel - 0 means unlimited.": "The maximum amount of users allowed in this channel - 0 means unlimited.",
  "The members in this voice channel": "The members in this voice channel",
  "Checks if the voice channel is full": "Checks if the voice channel is full",
  "Whether the channel is editable by the client user": "Whether the channel is editable by the client user",
  "Whether the channel is joinable by the client user": "Whether the channel is joinable by the client user",
  "Checks if the client has permission to send audio to the voice channel": "Checks if the client has permission to send audio to the voice channel",
  "Sets the bitrate of the channel.": "Sets the bitrate of the channel.",
  "The new bitrate": "The new bitrate",
  "Reason for changing the channel's bitrate": "Reason for changing the channel's bitrate",
  "Sets the user limit of the channel.": "Sets the user limit of the channel.",
  "The new user limit": "The new user limit",
  "Reason for changing the user limit": "Reason for changing the user limit",
  "Attempts to join this voice channel.": "Attempts to join this voice channel.",
  "Leaves this voice channel.": "Leaves this voice channel.",
  "Represents a Discord voice region for guilds.": "Represents a Discord voice region for guilds.",
  "The ID of the region": "The ID of the region",
  "Name of the region": "Name of the region",
  "Whether the region is VIP-only": "Whether the region is VIP-only",
  "Whether the region is deprecated": "Whether the region is deprecated",
  "Whether the region is optimal": "Whether the region is optimal",
  "Whether the region is custom": "Whether the region is custom",
  "Represents the voice state for a Guild Member.": "Represents the voice state for a Guild Member.",
  "The guild the voice state is part of": "The guild the voice state is part of",
  "The data for the voice state": "The data for the voice state",
  "The guild of this voice state": "The guild of this voice state",
  "The ID of the member of this voice state": "The ID of the member of this voice state",
  "Whether this member is deafened server-wide": "Whether this member is deafened server-wide",
  "Whether this member is muted server-wide": "Whether this member is muted server-wide",
  "Whether this member is self-deafened": "Whether this member is self-deafened",
  "Whether this member is self-muted": "Whether this member is self-muted",
  "Whether this member's camera is enabled": "Whether this member's camera is enabled",
  "The session ID of this member's connection": "The session ID of this member's connection",
  "Whether this member is streaming using \"Go Live\"": "Whether this member is streaming using \"Go Live\"",
  "The ID of the voice channel that this member is in": "The ID of the voice channel that this member is in",
  "The member that this voice state belongs to": "The member that this voice state belongs to",
  "The channel that the member is connected to": "The channel that the member is connected to",
  "If this is a voice state of the client user, then this will refer to the active VoiceConnection for this guild": "If this is a voice state of the client user, then this will refer to the active VoiceConnection for this guild",
  "Whether this member is either self-deafened or server-deafened": "Whether this member is either self-deafened or server-deafened",
  "Whether this member is either self-muted or server-muted": "Whether this member is either self-muted or server-muted",
  "Whether this member is currently speaking. A boolean if the information is available (aka\nthe bot is connected to any voice channel in the guild), otherwise this is null": "Whether this member is currently speaking. A boolean if the information is available (aka\nthe bot is connected to any voice channel in the guild), otherwise this is null",
  "Mutes/unmutes the member of this voice state.": "Mutes/unmutes the member of this voice state.",
  "Whether or not the member should be muted": "Whether or not the member should be muted",
  "Reason for muting or unmuting": "Reason for muting or unmuting",
  "Deafens/undeafens the member of this voice state.": "Deafens/undeafens the member of this voice state.",
  "Whether or not the member should be deafened": "Whether or not the member should be deafened",
  "Reason for deafening or undeafening": "Reason for deafening or undeafening",
  "Kicks the member from the voice channel.": "Kicks the member from the voice channel.",
  "Reason for kicking member from the channel": "Reason for kicking member from the channel",
  "Moves the member to a different channel, or disconnects them from the one they're in.": "Moves the member to a different channel, or disconnects them from the one they're in.",
  "Channel to move the member to, or `null` if you want to disconnect them\nfrom voice.": "Channel to move the member to, or `null` if you want to disconnect them\nfrom voice.",
  "Reason for moving member to another channel or disconnecting": "Reason for moving member to another channel or disconnecting",
  "Self-mutes/unmutes the bot for this voice state.": "Self-mutes/unmutes the bot for this voice state.",
  "Whether or not the bot should be self-muted": "Whether or not the bot should be self-muted",
  "true if the voice state was successfully updated, otherwise false": "true if the voice state was successfully updated, otherwise false",
  "Self-deafens/undeafens the bot for this voice state.": "Self-deafens/undeafens the bot for this voice state.",
  "Whether or not the bot should be self-deafened": "Whether or not the bot should be self-deafened",
  "Represents a webhook.": "Represents a webhook.",
  "The client that instantiated the webhook": "The client that instantiated the webhook",
  "The token for the webhook": "The token for the webhook",
  "The avatar for the webhook": "The avatar for the webhook",
  "The type of the webhook": "The type of the webhook",
  "The guild the webhook belongs to": "The guild the webhook belongs to",
  "The channel the webhook belongs to": "The channel the webhook belongs to",
  "The owner of the webhook": "The owner of the webhook",
  "The timestamp the webhook was created at": "The timestamp the webhook was created at",
  "The time the webhook was created at": "The time the webhook was created at",
  "The url of this webhook": "The url of this webhook",
  "Sends a message with this webhook.": "Sends a message with this webhook.",
  "Sends a raw slack message with this webhook.": "Sends a raw slack message with this webhook.",
  "The raw body to send": "The raw body to send",
  "Edits the webhook.": "Edits the webhook.",
  "New name for this webhook": "New name for this webhook",
  "New avatar for this webhook": "New avatar for this webhook",
  "New channel for this webhook": "New channel for this webhook",
  "Reason for editing this webhook": "Reason for editing this webhook",
  "Deletes the webhook.": "Deletes the webhook.",
  "Reason for deleting this webhook": "Reason for deleting this webhook",
  "A link to the webhook's avatar.": "A link to the webhook's avatar.",
  "Data structure that makes it easy to interact with an {@link Activity#flags} bitfield.": "Data structure that makes it easy to interact with an {@link Activity#flags} bitfield.",
  "Bit(s) to read from": "Bit(s) to read from",
  "Bitfield of the packed bits": "Bitfield of the packed bits",
  "Numeric activity flags. All available properties:\n* `INSTANCE`\n* `JOIN`\n* `SPECTATE`\n* `JOIN_REQUEST`\n* `SYNC`\n* `PLAY`": "Numeric activity flags. All available properties:\n* `INSTANCE`\n* `JOIN`\n* `SPECTATE`\n* `JOIN_REQUEST`\n* `SYNC`\n* `PLAY`",
  "Checks whether the bitfield has a bit, or any of multiple bits.": "Checks whether the bitfield has a bit, or any of multiple bits.",
  "Bit(s) to check for": "Bit(s) to check for",
  "Checks if this bitfield equals another": "Checks if this bitfield equals another",
  "Checks whether the bitfield has a bit, or multiple bits.": "Checks whether the bitfield has a bit, or multiple bits.",
  "Gets all given bits that are missing from the bitfield.": "Gets all given bits that are missing from the bitfield.",
  "Additional parameters for the has method, if any": "Additional parameters for the has method, if any",
  "Freezes these bits, making them immutable.": "Freezes these bits, making them immutable.",
  "These bits": "These bits",
  "Adds bits to these ones.": "Adds bits to these ones.",
  "Bits to add": "Bits to add",
  "These bits or new BitField if the instance is frozen.": "These bits or new BitField if the instance is frozen.",
  "Removes bits from these.": "Removes bits from these.",
  "Bits to remove": "Bits to remove",
  "Gets an object mapping field names to a {@link boolean} indicating whether the\nbit is available.": "Gets an object mapping field names to a {@link boolean} indicating whether the\nbit is available.",
  "Gets an {@link Array} of bitfield names based on the bits available.": "Gets an {@link Array} of bitfield names based on the bits available.",
  "Data structure that makes it easy to interact with a bitfield.": "Data structure that makes it easy to interact with a bitfield.",
  "Numeric bitfield flags.\n<info>Defined in extension classes</info>": "Numeric bitfield flags.\n<info>Defined in extension classes</info>",
  "Resolves bitfields to their numeric form.": "Resolves bitfields to their numeric form.",
  "bit(s) to resolve": "bit(s) to resolve",
  "The DataResolver identifies different objects and tries to resolve a specific piece of information from them.": "The DataResolver identifies different objects and tries to resolve a specific piece of information from them.",
  "Resolves InviteResolvable to an invite code.": "Resolves InviteResolvable to an invite code.",
  "The invite resolvable to resolve": "The invite resolvable to resolve",
  "Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.": "Resolves a Base64Resolvable, a string, or a BufferResolvable to a Base 64 image.",
  "The image to be resolved": "The image to be resolved",
  "Resolves a Base64Resolvable to a Base 64 image.": "Resolves a Base64Resolvable to a Base 64 image.",
  "The base 64 resolvable you want to resolve": "The base 64 resolvable you want to resolve",
  "Resolves a BufferResolvable to a Buffer or a Stream.": "Resolves a BufferResolvable to a Buffer or a Stream.",
  "The buffer or stream resolvable to resolve": "The buffer or stream resolvable to resolve",
  "Resolves a BufferResolvable to a Buffer.": "Resolves a BufferResolvable to a Buffer.",
  "Data structure that makes it easy to calculate intents.": "Data structure that makes it easy to calculate intents.",
  "Numeric websocket intents. All available properties:\n* `GUILDS`\n* `GUILD_MEMBERS`\n* `GUILD_BANS`\n* `GUILD_EMOJIS`\n* `GUILD_INTEGRATIONS`\n* `GUILD_WEBHOOKS`\n* `GUILD_INVITES`\n* `GUILD_VOICE_STATES`\n* `GUILD_PRESENCES`\n* `GUILD_MESSAGES`\n* `GUILD_MESSAGE_REACTIONS`\n* `GUILD_MESSAGE_TYPING`\n* `DIRECT_MESSAGES`\n* `DIRECT_MESSAGE_REACTIONS`\n* `DIRECT_MESSAGE_TYPING`": "Numeric websocket intents. All available properties:\n* `GUILDS`\n* `GUILD_MEMBERS`\n* `GUILD_BANS`\n* `GUILD_EMOJIS`\n* `GUILD_INTEGRATIONS`\n* `GUILD_WEBHOOKS`\n* `GUILD_INVITES`\n* `GUILD_VOICE_STATES`\n* `GUILD_PRESENCES`\n* `GUILD_MESSAGES`\n* `GUILD_MESSAGE_REACTIONS`\n* `GUILD_MESSAGE_TYPING`\n* `DIRECT_MESSAGES`\n* `DIRECT_MESSAGE_REACTIONS`\n* `DIRECT_MESSAGE_TYPING`",
  "Bitfield representing all privileged intents": "Bitfield representing all privileged intents",
  "Bitfield representing all intents combined": "Bitfield representing all intents combined",
  "Bitfield representing all non-privileged intents": "Bitfield representing all non-privileged intents",
  "A Collection which holds a max amount of entries. The first key is deleted if the Collection has\nreached max size.": "A Collection which holds a max amount of entries. The first key is deleted if the Collection has\nreached max size.",
  "The maximum size of the Collection": "The maximum size of the Collection",
  "Optional entries passed to the Map constructor.": "Optional entries passed to the Map constructor.",
  "The max size of the Collection.": "The max size of the Collection.",
  "Data structure that makes it easy to interact with an {@link Message#flags} bitfield.": "Data structure that makes it easy to interact with an {@link Message#flags} bitfield.",
  "Numeric message flags. All available properties:\n* `CROSSPOSTED`\n* `IS_CROSSPOST`\n* `SUPPRESS_EMBEDS`\n* `SOURCE_MESSAGE_DELETED`\n* `URGENT`": "Numeric message flags. All available properties:\n* `CROSSPOSTED`\n* `IS_CROSSPOST`\n* `SUPPRESS_EMBEDS`\n* `SOURCE_MESSAGE_DELETED`\n* `URGENT`",
  "Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of\npermissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member\nthat override their default permissions.": "Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of\npermissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member\nthat override their default permissions.",
  "Numeric permission flags. All available properties:\n* `ADMINISTRATOR` (implicitly has *all* permissions, and bypasses all channel overwrites)\n* `CREATE_INSTANT_INVITE` (create invitations to the guild)\n* `KICK_MEMBERS`\n* `BAN_MEMBERS`\n* `MANAGE_CHANNELS` (edit and reorder channels)\n* `MANAGE_GUILD` (edit the guild information, region, etc.)\n* `ADD_REACTIONS` (add new reactions to messages)\n* `VIEW_AUDIT_LOG`\n* `PRIORITY_SPEAKER`\n* `STREAM`\n* `VIEW_CHANNEL`\n* `SEND_MESSAGES`\n* `SEND_TTS_MESSAGES`\n* `MANAGE_MESSAGES` (delete messages and reactions)\n* `EMBED_LINKS` (links posted will have a preview embedded)\n* `ATTACH_FILES`\n* `READ_MESSAGE_HISTORY` (view messages that were posted prior to opening Discord)\n* `MENTION_EVERYONE`\n* `USE_EXTERNAL_EMOJIS` (use emojis from different guilds)\n* `VIEW_GUILD_INSIGHTS`\n* `CONNECT` (connect to a voice channel)\n* `SPEAK` (speak in a voice channel)\n* `MUTE_MEMBERS` (mute members across all voice channels)\n* `DEAFEN_MEMBERS` (deafen members across all voice channels)\n* `MOVE_MEMBERS` (move members between voice channels)\n* `USE_VAD` (use voice activity detection)\n* `CHANGE_NICKNAME`\n* `MANAGE_NICKNAMES` (change other members' nicknames)\n* `MANAGE_ROLES`\n* `MANAGE_WEBHOOKS`\n* `MANAGE_EMOJIS`": "Numeric permission flags. All available properties:\n* `ADMINISTRATOR` (implicitly has *all* permissions, and bypasses all channel overwrites)\n* `CREATE_INSTANT_INVITE` (create invitations to the guild)\n* `KICK_MEMBERS`\n* `BAN_MEMBERS`\n* `MANAGE_CHANNELS` (edit and reorder channels)\n* `MANAGE_GUILD` (edit the guild information, region, etc.)\n* `ADD_REACTIONS` (add new reactions to messages)\n* `VIEW_AUDIT_LOG`\n* `PRIORITY_SPEAKER`\n* `STREAM`\n* `VIEW_CHANNEL`\n* `SEND_MESSAGES`\n* `SEND_TTS_MESSAGES`\n* `MANAGE_MESSAGES` (delete messages and reactions)\n* `EMBED_LINKS` (links posted will have a preview embedded)\n* `ATTACH_FILES`\n* `READ_MESSAGE_HISTORY` (view messages that were posted prior to opening Discord)\n* `MENTION_EVERYONE`\n* `USE_EXTERNAL_EMOJIS` (use emojis from different guilds)\n* `VIEW_GUILD_INSIGHTS`\n* `CONNECT` (connect to a voice channel)\n* `SPEAK` (speak in a voice channel)\n* `MUTE_MEMBERS` (mute members across all voice channels)\n* `DEAFEN_MEMBERS` (deafen members across all voice channels)\n* `MOVE_MEMBERS` (move members between voice channels)\n* `USE_VAD` (use voice activity detection)\n* `CHANGE_NICKNAME`\n* `MANAGE_NICKNAMES` (change other members' nicknames)\n* `MANAGE_ROLES`\n* `MANAGE_WEBHOOKS`\n* `MANAGE_EMOJIS`",
  "Bitfield representing every permission combined": "Bitfield representing every permission combined",
  "Bitfield representing the default permissions for users": "Bitfield representing the default permissions for users",
  "Checks whether the bitfield has a permission, or any of multiple permissions.": "Checks whether the bitfield has a permission, or any of multiple permissions.",
  "Checks whether the bitfield has a permission, or multiple permissions.": "Checks whether the bitfield has a permission, or multiple permissions.",
  "A container for useful snowflake-related methods.": "A container for useful snowflake-related methods.",
  "Generates a Discord snowflake.\n<info>This hardcodes the worker ID as 1 and the process ID as 0.</info>": "Generates a Discord snowflake.\n<info>This hardcodes the worker ID as 1 and the process ID as 0.</info>",
  "Timestamp or date of the snowflake to generate": "Timestamp or date of the snowflake to generate",
  "The generated snowflake": "The generated snowflake",
  "Deconstructs a Discord snowflake.": "Deconstructs a Discord snowflake.",
  "Snowflake to deconstruct": "Snowflake to deconstruct",
  "Deconstructed snowflake": "Deconstructed snowflake",
  "Data structure that makes it easy to interact with a {@link VoiceConnection#speaking}\nand {@link guildMemberSpeaking} event bitfields.": "Data structure that makes it easy to interact with a {@link VoiceConnection#speaking}\nand {@link guildMemberSpeaking} event bitfields.",
  "Numeric speaking flags. All available properties:\n* `SPEAKING`\n* `SOUNDSHARE`\n* `PRIORITY_SPEAKING`": "Numeric speaking flags. All available properties:\n* `SPEAKING`\n* `SOUNDSHARE`\n* `PRIORITY_SPEAKING`",
  "Allows for the extension of built-in Discord.js structures that are instantiated by {@link BaseManager Managers}.": "Allows for the extension of built-in Discord.js structures that are instantiated by {@link BaseManager Managers}.",
  "Retrieves a structure class.": "Retrieves a structure class.",
  "Name of the structure to retrieve": "Name of the structure to retrieve",
  "Extends a structure.\n<warn> Make sure to extend all structures before instantiating your client.\nExtending after doing so may not work as expected. </warn>": "Extends a structure.\n<warn> Make sure to extend all structures before instantiating your client.\nExtending after doing so may not work as expected. </warn>",
  "Name of the structure class to extend": "Name of the structure class to extend",
  "Function that takes the base class to extend as its only parameter and returns the\nextended class/prototype": "Function that takes the base class to extend as its only parameter and returns the\nextended class/prototype",
  "Extended class/prototype returned from the extender": "Extended class/prototype returned from the extender",
  "Data structure that makes it easy to interact with a {@link Guild#systemChannelFlags} bitfield.\n<info>Note that all event message types are enabled by default,\nand by setting their corresponding flags you are disabling them</info>": "Data structure that makes it easy to interact with a {@link Guild#systemChannelFlags} bitfield.\n<info>Note that all event message types are enabled by default,\nand by setting their corresponding flags you are disabling them</info>",
  "Numeric system channel flags. All available properties:\n* `WELCOME_MESSAGE_DISABLED`\n* `BOOST_MESSAGE_DISABLED`": "Numeric system channel flags. All available properties:\n* `WELCOME_MESSAGE_DISABLED`\n* `BOOST_MESSAGE_DISABLED`",
  "Data structure that makes it easy to interact with a {@link User#flags} bitfield.": "Data structure that makes it easy to interact with a {@link User#flags} bitfield.",
  "Numeric user flags. All available properties:\n* `DISCORD_EMPLOYEE`\n* `DISCORD_PARTNER`\n* `HYPESQUAD_EVENTS`\n* `BUGHUNTER_LEVEL_1`\n* `HOUSE_BRAVERY`\n* `HOUSE_BRILLIANCE`\n* `HOUSE_BALANCE`\n* `EARLY_SUPPORTER`\n* `TEAM_USER`\n* `SYSTEM`\n* `BUGHUNTER_LEVEL_2`\n* `VERIFIED_BOT`\n* `VERIFIED_DEVELOPER`": "Numeric user flags. All available properties:\n* `DISCORD_EMPLOYEE`\n* `DISCORD_PARTNER`\n* `HYPESQUAD_EVENTS`\n* `BUGHUNTER_LEVEL_1`\n* `HOUSE_BRAVERY`\n* `HOUSE_BRILLIANCE`\n* `HOUSE_BALANCE`\n* `EARLY_SUPPORTER`\n* `TEAM_USER`\n* `SYSTEM`\n* `BUGHUNTER_LEVEL_2`\n* `VERIFIED_BOT`\n* `VERIFIED_DEVELOPER`",
  "Contains various general-purpose utility methods. These functions are also available on the base `Discord` object.": "Contains various general-purpose utility methods. These functions are also available on the base `Discord` object.",
  "Flatten an object. Any properties that are collections will get converted to an array of keys.": "Flatten an object. Any properties that are collections will get converted to an array of keys.",
  "The object to flatten.": "The object to flatten.",
  "Specific properties to include/exclude.": "Specific properties to include/exclude.",
  "Splits a string into multiple chunks at a designated character that do not exceed a specific length.": "Splits a string into multiple chunks at a designated character that do not exceed a specific length.",
  "Content to split": "Content to split",
  "Options controlling the behavior of the split": "Options controlling the behavior of the split",
  "Escapes any Discord-flavour markdown in a string.": "Escapes any Discord-flavour markdown in a string.",
  "Content to escape": "Content to escape",
  "What types of markdown to escape": "What types of markdown to escape",
  "Whether to escape code blocks or not": "Whether to escape code blocks or not",
  "Whether to escape inline code or not": "Whether to escape inline code or not",
  "Whether to escape bolds or not": "Whether to escape bolds or not",
  "Whether to escape italics or not": "Whether to escape italics or not",
  "Whether to escape underlines or not": "Whether to escape underlines or not",
  "Whether to escape strikethroughs or not": "Whether to escape strikethroughs or not",
  "Whether to escape spoilers or not": "Whether to escape spoilers or not",
  "Whether to escape text inside code blocks or not": "Whether to escape text inside code blocks or not",
  "Whether to escape text inside inline code or not": "Whether to escape text inside inline code or not",
  "Escapes code block markdown in a string.": "Escapes code block markdown in a string.",
  "Escapes inline code markdown in a string.": "Escapes inline code markdown in a string.",
  "Escapes italic markdown in a string.": "Escapes italic markdown in a string.",
  "Escapes bold markdown in a string.": "Escapes bold markdown in a string.",
  "Escapes underline markdown in a string.": "Escapes underline markdown in a string.",
  "Escapes strikethrough markdown in a string.": "Escapes strikethrough markdown in a string.",
  "Escapes spoiler markdown in a string.": "Escapes spoiler markdown in a string.",
  "Gets the recommended shard count from Discord.": "Gets the recommended shard count from Discord.",
  "Discord auth token": "Discord auth token",
  "Number of guilds per shard": "Number of guilds per shard",
  "The recommended number of shards": "The recommended number of shards",
  "Parses emoji info out of a string. The string must be one of:\n* A UTF-8 emoji (no ID)\n* A URL-encoded UTF-8 emoji (no ID)\n* A Discord custom emoji (`<:name:id>` or `<a:name:id>`)": "Parses emoji info out of a string. The string must be one of:\n* A UTF-8 emoji (no ID)\n* A URL-encoded UTF-8 emoji (no ID)\n* A Discord custom emoji (`<:name:id>` or `<a:name:id>`)",
  "Emoji string to parse": "Emoji string to parse",
  "Object with `animated`, `name`, and `id` properties": "Object with `animated`, `name`, and `id` properties",
  "Shallow-copies an object with its class/prototype intact.": "Shallow-copies an object with its class/prototype intact.",
  "Object to clone": "Object to clone",
  "Sets default properties on an object that aren't already specified.": "Sets default properties on an object that aren't already specified.",
  "Default properties": "Default properties",
  "Object to assign defaults to": "Object to assign defaults to",
  "Converts an ArrayBuffer or string to a Buffer.": "Converts an ArrayBuffer or string to a Buffer.",
  "ArrayBuffer to convert": "ArrayBuffer to convert",
  "Converts a string to an ArrayBuffer.": "Converts a string to an ArrayBuffer.",
  "String to convert": "String to convert",
  "Makes an Error from a plain info object.": "Makes an Error from a plain info object.",
  "Error info": "Error info",
  "Error type": "Error type",
  "Message for the error": "Message for the error",
  "Stack for the error": "Stack for the error",
  "Makes a plain error info object from an Error.": "Makes a plain error info object from an Error.",
  "Error to get info from": "Error to get info from",
  "Moves an element in an array *in place*.": "Moves an element in an array *in place*.",
  "Array to modify": "Array to modify",
  "Element to move": "Element to move",
  "Index or offset to move the element to": "Index or offset to move the element to",
  "Move the element by an offset amount rather than to a set index": "Move the element by an offset amount rather than to a set index",
  "Resolves a StringResolvable to a string.": "Resolves a StringResolvable to a string.",
  "The string resolvable to resolve": "The string resolvable to resolve",
  "Resolves a ColorResolvable into a color number.": "Resolves a ColorResolvable into a color number.",
  "Color to resolve": "Color to resolve",
  "A color": "A color",
  "Sorts by Discord's position and ID.": "Sorts by Discord's position and ID.",
  "Collection of objects to sort": "Collection of objects to sort",
  "Sets the position of a Channel or Role.": "Sets the position of a Channel or Role.",
  "Object to set the position of": "Object to set the position of",
  "New position for the object": "New position for the object",
  "Whether `position` is relative to its current position": "Whether `position` is relative to its current position",
  "A collection of the objects sorted properly": "A collection of the objects sorted properly",
  "Route to call PATCH on": "Route to call PATCH on",
  "Reason for the change": "Reason for the change",
  "Updated item list, with `id` and `position` properties": "Updated item list, with `id` and `position` properties",
  "Alternative to Node's `path.basename`, removing query string after the extension if it exists.": "Alternative to Node's `path.basename`, removing query string after the extension if it exists.",
  "Path to get the basename of": "Path to get the basename of",
  "File extension to remove": "File extension to remove",
  "Basename of the path": "Basename of the path",
  "Transforms a snowflake from a decimal string to a bit string.": "Transforms a snowflake from a decimal string to a bit string.",
  "Snowflake to be transformed": "Snowflake to be transformed",
  "Transforms a snowflake from a bit string to a decimal string.": "Transforms a snowflake from a bit string to a decimal string.",
  "Bit string to be transformed": "Bit string to be transformed",
  "Breaks user, role and everyone/here mentions by adding a zero width space after every @ character": "Breaks user, role and everyone/here mentions by adding a zero width space after every @ character",
  "The string to sanitize": "The string to sanitize",
  "The content to have all mentions replaced by the equivalent text.": "The content to have all mentions replaced by the equivalent text.",
  "The string to be converted": "The string to be converted",
  "The message object to reference": "The message object to reference",
  "The content to put in a codeblock with all codeblock fences replaced by the equivalent backticks.": "The content to put in a codeblock with all codeblock fences replaced by the equivalent backticks.",
  "Creates a Promise that resolves after a specified duration.": "Creates a Promise that resolves after a specified duration.",
  "How long to wait before resolving (in milliseconds)": "How long to wait before resolving (in milliseconds)",
  "Options passed to `VoiceReceiver#createStream`.": "Options passed to `VoiceReceiver#createStream`.",
  "The mode for audio output. This defaults to opus, meaning discord.js won't decode\nthe packets for you. You can set this to 'pcm' so that the stream's output will be 16-bit little-endian stereo\naudio": "The mode for audio output. This defaults to opus, meaning discord.js won't decode\nthe packets for you. You can set this to 'pcm' so that the stream's output will be 16-bit little-endian stereo\naudio",
  "When the stream should be destroyed. If `silence`, this will be when the user\nstops talking. Otherwise, if `manual`, this should be handled by you.": "When the stream should be destroyed. If `silence`, this will be when the user\nstops talking. Otherwise, if `manual`, this should be handled by you.",
  "Options that can be passed to stream-playing methods:": "Options that can be passed to stream-playing methods:",
  "The type of stream.": "The type of stream.",
  "The time to seek to, will be ignored when playing `ogg/opus` or `webm/opus` streams": "The time to seek to, will be ignored when playing `ogg/opus` or `webm/opus` streams",
  "The volume to play at. Set this to false to disable volume transforms for\nthis stream to improve performance.": "The volume to play at. Set this to false to disable volume transforms for\nthis stream to improve performance.",
  "Expected packet loss percentage": "Expected packet loss percentage",
  "Enabled forward error correction": "Enabled forward error correction",
  "The bitrate (quality) of the audio in kbps.\nIf set to 'auto', the voice channel's bitrate will be used": "The bitrate (quality) of the audio in kbps.\nIf set to 'auto', the voice channel's bitrate will be used",
  "The maximum number of opus packets to make and store before they are\nactually needed. See https://nodejs.org/en/docs/guides/backpressuring-in-streams/. Setting this value to\n1 means that changes in volume will be more instant.": "The maximum number of opus packets to make and store before they are\nactually needed. See https://nodejs.org/en/docs/guides/backpressuring-in-streams/. Setting this value to\n1 means that changes in volume will be more instant.",
  "An option passed as part of `StreamOptions` specifying the type of the stream.\n* `unknown`: The default type, streams/input will be passed through to ffmpeg before encoding.\nWill play most streams.\n* `converted`: Play a stream of 16bit signed stereo PCM data, skipping ffmpeg.\n* `opus`: Play a stream of opus packets, skipping ffmpeg. You lose the ability to alter volume.\n* `ogg/opus`: Play an ogg file with the opus encoding, skipping ffmpeg. You lose the ability to alter volume.\n* `webm/opus`: Play a webm file with opus audio, skipping ffmpeg. You lose the ability to alter volume.": "An option passed as part of `StreamOptions` specifying the type of the stream.\n* `unknown`: The default type, streams/input will be passed through to ffmpeg before encoding.\nWill play most streams.\n* `converted`: Play a stream of 16bit signed stereo PCM data, skipping ffmpeg.\n* `opus`: Play a stream of opus packets, skipping ffmpeg. You lose the ability to alter volume.\n* `ogg/opus`: Play an ogg file with the opus encoding, skipping ffmpeg. You lose the ability to alter volume.\n* `webm/opus`: Play a webm file with opus audio, skipping ffmpeg. You lose the ability to alter volume.",
  "Data that can be resolved to give a Channel object. This can be:\n* A Channel object\n* A Snowflake": "Data that can be resolved to give a Channel object. This can be:\n* A Channel object\n* A Snowflake",
  "Data that can be resolved to give a Guild Channel object. This can be:\n* A GuildChannel object\n* A Snowflake": "Data that can be resolved to give a Guild Channel object. This can be:\n* A GuildChannel object\n* A Snowflake",
  "Data that can be resolved into an GuildEmoji object. This can be:\n* A custom emoji ID\n* A GuildEmoji object\n* A ReactionEmoji object": "Data that can be resolved into an GuildEmoji object. This can be:\n* A custom emoji ID\n* A GuildEmoji object\n* A ReactionEmoji object",
  "Data that can be resolved to give an emoji identifier. This can be:\n* The unicode representation of an emoji\n* An EmojiResolvable": "Data that can be resolved to give an emoji identifier. This can be:\n* The unicode representation of an emoji\n* An EmojiResolvable",
  "Data that resolves to give a Guild object. This can be:\n* A Guild object\n* A GuildChannel object\n* A GuildEmoji object\n* A Role object\n* A Snowflake\n* An Invite object": "Data that resolves to give a Guild object. This can be:\n* A Guild object\n* A GuildChannel object\n* A GuildEmoji object\n* A Role object\n* A Snowflake\n* An Invite object",
  "Partial data for a Role.": "Partial data for a Role.",
  "The ID for this role, used to set channel overrides,\nthis is a placeholder and will be replaced by the API after consumption": "The ID for this role, used to set channel overrides,\nthis is a placeholder and will be replaced by the API after consumption",
  "The color of the role, either a hex string or a base 10 number": "The color of the role, either a hex string or a base 10 number",
  "Whether or not the role should be hoisted": "Whether or not the role should be hoisted",
  "Whether or not the role should be mentionable": "Whether or not the role should be mentionable",
  "Partial overwrite data.": "Partial overwrite data.",
  "The Role or User ID for this overwrite": "The Role or User ID for this overwrite",
  "The permissions to allow": "The permissions to allow",
  "The permissions to deny": "The permissions to deny",
  "Partial data for a Channel.": "Partial data for a Channel.",
  "The ID for this channel, used to set its parent,\nthis is a placeholder and will be replaced by the API after consumption": "The ID for this channel, used to set its parent,\nthis is a placeholder and will be replaced by the API after consumption",
  "The parent ID for this channel": "The parent ID for this channel",
  "The type of the channel": "The type of the channel",
  "The name of the channel": "The name of the channel",
  "Whether the channel is NSFW": "Whether the channel is NSFW",
  "The bitrate of the voice channel": "The bitrate of the voice channel",
  "The user limit of the channel": "The user limit of the channel",
  "Overwrites of the channel": "Overwrites of the channel",
  "The rate limit per user of the channel in seconds": "The rate limit per user of the channel in seconds",
  "Data that resolves to give a GuildMember object. This can be:\n* A GuildMember object\n* A User resolvable": "Data that resolves to give a GuildMember object. This can be:\n* A GuildMember object\n* A User resolvable",
  "Options used to fetch a single member from a guild.": "Options used to fetch a single member from a guild.",
  "The user to fetch": "The user to fetch",
  "Whether or not to cache the fetched member": "Whether or not to cache the fetched member",
  "Options used to fetch multiple members from a guild.": "Options used to fetch multiple members from a guild.",
  "The user(s) to fetch": "The user(s) to fetch",
  "Limit fetch to members with similar usernames": "Limit fetch to members with similar usernames",
  "Maximum number of members to request": "Maximum number of members to request",
  "Whether or not to include the presences": "Whether or not to include the presences",
  "Timeout for receipt of members": "Timeout for receipt of members",
  "Nonce for this request (32 characters max - default to base 16 now timestamp)": "Nonce for this request (32 characters max - default to base 16 now timestamp)",
  "The parameters to pass in when requesting previous messages from a channel. `around`, `before` and\n`after` are mutually exclusive. All the parameters are optional.": "The parameters to pass in when requesting previous messages from a channel. `around`, `before` and\n`after` are mutually exclusive. All the parameters are optional.",
  "Number of messages to acquire": "Number of messages to acquire",
  "ID of a message to get the messages that were posted before it": "ID of a message to get the messages that were posted before it",
  "ID of a message to get the messages that were posted after it": "ID of a message to get the messages that were posted after it",
  "ID of a message to get the messages that were posted around it": "ID of a message to get the messages that were posted around it",
  "Data that can be resolved to a Message object. This can be:\n* A Message\n* A Snowflake": "Data that can be resolved to a Message object. This can be:\n* A Message\n* A Snowflake",
  "Data that can be resolved to a Presence object. This can be:\n* A Presence\n* A UserResolvable\n* A Snowflake": "Data that can be resolved to a Presence object. This can be:\n* A Presence\n* A UserResolvable\n* A Snowflake",
  "Data that can be resolved to a MessageReaction object. This can be:\n* A MessageReaction\n* A Snowflake": "Data that can be resolved to a MessageReaction object. This can be:\n* A MessageReaction\n* A Snowflake",
  "Data that can be resolved to a Role object. This can be:\n* A Role\n* A Snowflake": "Data that can be resolved to a Role object. This can be:\n* A Role\n* A Snowflake",
  "Data that resolves to give a User object. This can be:\n* A User object\n* A Snowflake\n* A Message object (resolves to the message author)\n* A GuildMember object": "Data that resolves to give a User object. This can be:\n* A User object\n* A Snowflake\n* A Message object (resolves to the message author)\n* A GuildMember object",
  "The mode to spawn shards with for a {@link ShardingManager}: either \"process\" to use child processes, or\n\"worker\" to use [Worker threads](https://nodejs.org/api/worker_threads.html).": "The mode to spawn shards with for a {@link ShardingManager}: either \"process\" to use child processes, or\n\"worker\" to use [Worker threads](https://nodejs.org/api/worker_threads.html).",
  "A target for a message.": "A target for a message.",
  "Additional items that can be sent with a message.": "Additional items that can be sent with a message.",
  "Asset data.": "Asset data.",
  "The asset ID": "The asset ID",
  "The asset name": "The asset name",
  "The asset type": "The asset type",
  "Data resembling a raw Discord presence.": "Data resembling a raw Discord presence.",
  "Status of the user": "Status of the user",
  "Whether the user is AFK": "Whether the user is AFK",
  "Activity the user is playing": "Activity the user is playing",
  "An application object or application id": "An application object or application id",
  "The id of the application": "The id of the application",
  "Name of the activity": "Name of the activity",
  "Type of the activity": "Type of the activity",
  "Stream url": "Stream url",
  "Shard Id(s) to have the activity set on": "Shard Id(s) to have the activity set on",
  "A user's status. Must be one of:\n* `online`\n* `idle`\n* `invisible`\n* `dnd` (do not disturb)": "A user's status. Must be one of:\n* `online`\n* `idle`\n* `invisible`\n* `dnd` (do not disturb)",
  "Options for setting an activity": "Options for setting an activity",
  "Twitch stream URL": "Twitch stream URL",
  "An array of enabled guild features, here are the possible values:\n* ANIMATED_ICON\n* BANNER\n* COMMERCE\n* COMMUNITY\n* DISCOVERABLE\n* FEATURABLE\n* INVITE_SPLASH\n* NEWS\n* PARTNERED\n* VANITY_URL\n* VERIFIED\n* VIP_REGIONS\n* WELCOME_SCREEN_ENABLED": "An array of enabled guild features, here are the possible values:\n* ANIMATED_ICON\n* BANNER\n* COMMERCE\n* COMMUNITY\n* DISCOVERABLE\n* FEATURABLE\n* INVITE_SPLASH\n* NEWS\n* PARTNERED\n* VANITY_URL\n* VERIFIED\n* VIP_REGIONS\n* WELCOME_SCREEN_ENABLED",
  "The type of premium tier:\n* 0: NONE\n* 1: TIER_1\n* 2: TIER_2\n* 3: TIER_3": "The type of premium tier:\n* 0: NONE\n* 1: TIER_1\n* 2: TIER_2\n* 3: TIER_3",
  "An object containing information about a guild member's ban.": "An object containing information about a guild member's ban.",
  "User that was banned": "User that was banned",
  "Reason the user was banned": "Reason the user was banned",
  "The data for creating an integration.": "The data for creating an integration.",
  "The integration type": "The integration type",
  "An object containing information about a guild's vanity invite.": "An object containing information about a guild's vanity invite.",
  "Vanity invite code": "Vanity invite code",
  "Data for the Guild Widget object": "Data for the Guild Widget object",
  "Whether the widget is enabled": "Whether the widget is enabled",
  "The widget channel": "The widget channel",
  "The Guild Widget object": "The Guild Widget object",
  "The data for editing a guild.": "The data for editing a guild.",
  "The region of the guild": "The region of the guild",
  "The level of the explicit content filter": "The level of the explicit content filter",
  "The AFK channel of the guild": "The AFK channel of the guild",
  "The system channel of the guild": "The system channel of the guild",
  "The AFK timeout of the guild": "The AFK timeout of the guild",
  "The icon of the guild": "The icon of the guild",
  "The invite splash image of the guild": "The invite splash image of the guild",
  "The discovery splash image of the guild": "The discovery splash image of the guild",
  "The banner of the guild": "The banner of the guild",
  "The default message notifications": "The default message notifications",
  "The system channel flags of the guild": "The system channel flags of the guild",
  "The rules channel of the guild": "The rules channel of the guild",
  "The community updates channel of the guild": "The community updates channel of the guild",
  "The preferred locale of the guild": "The preferred locale of the guild",
  "The data needed for updating a channel's position.": "The data needed for updating a channel's position.",
  "Channel to update": "Channel to update",
  "New position for the channel": "New position for the channel",
  "The data needed for updating a guild role's position": "The data needed for updating a guild role's position",
  "The ID of the role": "The ID of the role",
  "The position to update": "The position to update",
  "The target type of an entry, e.g. `GUILD`. Here are the available types:\n* GUILD\n* CHANNEL\n* USER\n* ROLE\n* INVITE\n* WEBHOOK\n* EMOJI\n* MESSAGE\n* INTEGRATION": "The target type of an entry, e.g. `GUILD`. Here are the available types:\n* GUILD\n* CHANNEL\n* USER\n* ROLE\n* INVITE\n* WEBHOOK\n* EMOJI\n* MESSAGE\n* INTEGRATION",
  "The action of an entry. Here are the available actions:\n* ALL: null\n* GUILD_UPDATE: 1\n* CHANNEL_CREATE: 10\n* CHANNEL_UPDATE: 11\n* CHANNEL_DELETE: 12\n* CHANNEL_OVERWRITE_CREATE: 13\n* CHANNEL_OVERWRITE_UPDATE: 14\n* CHANNEL_OVERWRITE_DELETE: 15\n* MEMBER_KICK: 20\n* MEMBER_PRUNE: 21\n* MEMBER_BAN_ADD: 22\n* MEMBER_BAN_REMOVE: 23\n* MEMBER_UPDATE: 24\n* MEMBER_ROLE_UPDATE: 25\n* MEMBER_MOVE: 26\n* MEMBER_DISCONNECT: 27\n* BOT_ADD: 28,\n* ROLE_CREATE: 30\n* ROLE_UPDATE: 31\n* ROLE_DELETE: 32\n* INVITE_CREATE: 40\n* INVITE_UPDATE: 41\n* INVITE_DELETE: 42\n* WEBHOOK_CREATE: 50\n* WEBHOOK_UPDATE: 51\n* WEBHOOK_DELETE: 52\n* EMOJI_CREATE: 60\n* EMOJI_UPDATE: 61\n* EMOJI_DELETE: 62\n* MESSAGE_DELETE: 72\n* MESSAGE_BULK_DELETE: 73\n* MESSAGE_PIN: 74\n* MESSAGE_UNPIN: 75\n* INTEGRATION_CREATE: 80\n* INTEGRATION_UPDATE: 81\n* INTEGRATION_DELETE: 82": "The action of an entry. Here are the available actions:\n* ALL: null\n* GUILD_UPDATE: 1\n* CHANNEL_CREATE: 10\n* CHANNEL_UPDATE: 11\n* CHANNEL_DELETE: 12\n* CHANNEL_OVERWRITE_CREATE: 13\n* CHANNEL_OVERWRITE_UPDATE: 14\n* CHANNEL_OVERWRITE_DELETE: 15\n* MEMBER_KICK: 20\n* MEMBER_PRUNE: 21\n* MEMBER_BAN_ADD: 22\n* MEMBER_BAN_REMOVE: 23\n* MEMBER_UPDATE: 24\n* MEMBER_ROLE_UPDATE: 25\n* MEMBER_MOVE: 26\n* MEMBER_DISCONNECT: 27\n* BOT_ADD: 28,\n* ROLE_CREATE: 30\n* ROLE_UPDATE: 31\n* ROLE_DELETE: 32\n* INVITE_CREATE: 40\n* INVITE_UPDATE: 41\n* INVITE_DELETE: 42\n* WEBHOOK_CREATE: 50\n* WEBHOOK_UPDATE: 51\n* WEBHOOK_DELETE: 52\n* EMOJI_CREATE: 60\n* EMOJI_UPDATE: 61\n* EMOJI_DELETE: 62\n* MESSAGE_DELETE: 72\n* MESSAGE_BULK_DELETE: 73\n* MESSAGE_PIN: 74\n* MESSAGE_UNPIN: 75\n* INTEGRATION_CREATE: 80\n* INTEGRATION_UPDATE: 81\n* INTEGRATION_DELETE: 82",
  "The target of an entry. It can be one of:\n* A guild\n* A user\n* A role\n* An emoji\n* An invite\n* A webhook\n* An integration\n* An object with an id key if target was deleted\n* An object where the keys represent either the new value or the old value": "The target of an entry. It can be one of:\n* A guild\n* A user\n* A role\n* An emoji\n* An invite\n* A webhook\n* An integration\n* An object with an id key if target was deleted\n* An object where the keys represent either the new value or the old value",
  "The action type of an entry, e.g. `CREATE`. Here are the available types:\n* CREATE\n* DELETE\n* UPDATE\n* ALL": "The action type of an entry, e.g. `CREATE`. Here are the available types:\n* CREATE\n* DELETE\n* UPDATE\n* ALL",
  "An entry in the audit log representing a specific change.": "An entry in the audit log representing a specific change.",
  "The property that was changed, e.g. `nick` for nickname changes": "The property that was changed, e.g. `nick` for nickname changes",
  "The old value of the change, e.g. for nicknames, the old nickname": "The old value of the change, e.g. for nicknames, the old nickname",
  "The new value of the change, e.g. for nicknames, the new nickname": "The new value of the change, e.g. for nicknames, the new nickname",
  "The data for a guild channel.": "The data for a guild channel.",
  "The user limit of the voice channel": "The user limit of the voice channel",
  "The parent ID of the channel": "The parent ID of the channel",
  "Lock the permissions of the channel to what the parent's permissions are": "Lock the permissions of the channel to what the parent's permissions are",
  "Permission overwrites for the channel": "Permission overwrites for the channel",
  "The ratelimit per user for the channel in seconds": "The ratelimit per user for the channel in seconds",
  "Data for editing an emoji.": "Data for editing an emoji.",
  "The name of the emoji": "The name of the emoji",
  "Roles to restrict emoji to": "Roles to restrict emoji to",
  "The data for editing a guild member.": "The data for editing a guild member.",
  "The nickname to set for the member": "The nickname to set for the member",
  "Channel to move member to (if they are connected to voice), or `null`\nif you want to kick them from voice": "Channel to move member to (if they are connected to voice), or `null`\nif you want to kick them from voice",
  "The information account for an integration": "The information account for an integration",
  "The id of the account": "The id of the account",
  "The name of the account": "The name of the account",
  "The data for editing an integration.": "The data for editing an integration.",
  "The new behaviour of expiring subscribers": "The new behaviour of expiring subscribers",
  "The new grace period before expiring subscribers": "The new grace period before expiring subscribers",
  "Filter to be applied to the collector.": "Filter to be applied to the collector.",
  "Options to be applied to the collector.": "Options to be applied to the collector.",
  "Whether to dispose data when it's deleted": "Whether to dispose data when it's deleted",
  "Options provided when sending or editing a message.": "Options provided when sending or editing a message.",
  "Whether or not the message should be spoken aloud": "Whether or not the message should be spoken aloud",
  "The nonce for the message": "The nonce for the message",
  "An embed for the message\n(see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)": "An embed for the message\n(see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)",
  "Which mentions should be parsed from the message content": "Which mentions should be parsed from the message content",
  "Whether or not all mentions or\neveryone/here mentions should be sanitized to prevent unexpected mentions": "Whether or not all mentions or\neveryone/here mentions should be sanitized to prevent unexpected mentions",
  "Files to send with the message": "Files to send with the message",
  "Language for optional codeblock formatting to apply": "Language for optional codeblock formatting to apply",
  "Whether or not the message should be split into multiple messages if\nit exceeds the character limit. If an object is provided, these are the options for splitting the message": "Whether or not the message should be split into multiple messages if\nit exceeds the character limit. If an object is provided, these are the options for splitting the message",
  "User to reply to (prefixes the message with a mention, except in DMs)": "User to reply to (prefixes the message with a mention, except in DMs)",
  "Options provided to control parsing of mentions by Discord": "Options provided to control parsing of mentions by Discord",
  "Types of mentions to be parsed": "Types of mentions to be parsed",
  "Snowflakes of Users to be parsed as mentions": "Snowflakes of Users to be parsed as mentions",
  "Snowflakes of Roles to be parsed as mentions": "Snowflakes of Roles to be parsed as mentions",
  "Types of mentions to enable in MessageMentionOptions.\n- `roles`\n- `users`\n- `everyone`": "Types of mentions to enable in MessageMentionOptions.\n- `roles`\n- `users`\n- `everyone`",
  "The type of mentions to disable.\n- `none`\n- `all`\n- `everyone`": "The type of mentions to disable.\n- `none`\n- `all`\n- `everyone`",
  "File to attach": "File to attach",
  "Filename of the attachment": "Filename of the attachment",
  "Options for splitting a message.": "Options for splitting a message.",
  "Maximum character length per message piece": "Maximum character length per message piece",
  "Character to split the message with": "Character to split the message with",
  "Text to prepend to every piece except the first": "Text to prepend to every piece except the first",
  "Text to append to every piece except the last": "Text to append to every piece except the last",
  "An object containing the same properties as CollectorOptions, but a few more:": "An object containing the same properties as CollectorOptions, but a few more:",
  "Stop/end reasons that cause the promise to reject": "Stop/end reasons that cause the promise to reject",
  "The type of the target user:\n* 1: STREAM": "The type of the target user:\n* 1: STREAM",
  "Reference data sent in a crossposted message.": "Reference data sent in a crossposted message.",
  "ID of the channel the message was crossposted from": "ID of the channel the message was crossposted from",
  "ID of the guild the message was crossposted from": "ID of the guild the message was crossposted from",
  "ID of the message that was crossposted": "ID of the message that was crossposted",
  "Options that can be passed into editMessage.": "Options that can be passed into editMessage.",
  "Content to be edited": "Content to be edited",
  "An embed to be added/edited": "An embed to be added/edited",
  "The maximum amount of messages to collect": "The maximum amount of messages to collect",
  "The maximum amount of messages to process": "The maximum amount of messages to process",
  "Represents a field of a MessageEmbed": "Represents a field of a MessageEmbed",
  "Represents the thumbnail of a MessageEmbed": "Represents the thumbnail of a MessageEmbed",
  "URL for this thumbnail": "URL for this thumbnail",
  "ProxyURL for this thumbnail": "ProxyURL for this thumbnail",
  "Height of this thumbnail": "Height of this thumbnail",
  "Width of this thumbnail": "Width of this thumbnail",
  "Represents the image of a MessageEmbed": "Represents the image of a MessageEmbed",
  "URL for this image": "URL for this image",
  "ProxyURL for this image": "ProxyURL for this image",
  "Height of this image": "Height of this image",
  "Width of this image": "Width of this image",
  "Represents the video of a MessageEmbed": "Represents the video of a MessageEmbed",
  "URL of this video": "URL of this video",
  "ProxyURL for this video": "ProxyURL for this video",
  "Height of this video": "Height of this video",
  "Width of this video": "Width of this video",
  "Represents the author field of a MessageEmbed": "Represents the author field of a MessageEmbed",
  "The name of this author": "The name of this author",
  "URL of this author": "URL of this author",
  "URL of the icon for this author": "URL of the icon for this author",
  "Proxied URL of the icon for this author": "Proxied URL of the icon for this author",
  "Represents the provider of a MessageEmbed": "Represents the provider of a MessageEmbed",
  "The name of this provider": "The name of this provider",
  "URL of this provider": "URL of this provider",
  "Represents the footer field of a MessageEmbed": "Represents the footer field of a MessageEmbed",
  "The text of this footer": "The text of this footer",
  "URL of the icon for this footer": "URL of the icon for this footer",
  "Proxied URL of the icon for this footer": "Proxied URL of the icon for this footer",
  "Crossposted channel data.": "Crossposted channel data.",
  "ID of the mentioned channel": "ID of the mentioned channel",
  "ID of the guild that has the channel": "ID of the guild that has the channel",
  "Type of the channel": "Type of the channel",
  "The type of a permission overwrite. It can be one of:\n* member\n* role": "The type of a permission overwrite. It can be one of:\n* member\n* role",
  "An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n```js\n{\n 'SEND_MESSAGES': true,\n 'EMBED_LINKS': null,\n 'ATTACH_FILES': false,\n}\n```": "An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n```js\n{\n 'SEND_MESSAGES': true,\n 'EMBED_LINKS': null,\n 'ATTACH_FILES': false,\n}\n```",
  "The allowed permissions": "The allowed permissions",
  "The denied permissions": "The denied permissions",
  "The raw data for a permission overwrite": "The raw data for a permission overwrite",
  "The id of the overwrite": "The id of the overwrite",
  "The type of this OverwriteData": "The type of this OverwriteData",
  "Data that can be resolved into {@link RawOverwriteData}": "Data that can be resolved into {@link RawOverwriteData}",
  "Data that can be used for a permission overwrite": "Data that can be used for a permission overwrite",
  "Member or role this overwrite is for": "Member or role this overwrite is for",
  "Activity sent in a message.": "Activity sent in a message.",
  "Id of the party represented in activity": "Id of the party represented in activity",
  "Type of activity sent": "Type of activity sent",
  "The status of this presence:\n* **`online`** - user is online\n* **`idle`** - user is AFK\n* **`offline`** - user is offline or invisible\n* **`dnd`** - user is in Do Not Disturb": "The status of this presence:\n* **`online`** - user is online\n* **`idle`** - user is AFK\n* **`offline`** - user is offline or invisible\n* **`dnd`** - user is in Do Not Disturb",
  "The status of this presence:\n* **`online`** - user is online\n* **`idle`** - user is AFK\n* **`dnd`** - user is in Do Not Disturb": "The status of this presence:\n* **`online`** - user is online\n* **`idle`** - user is AFK\n* **`dnd`** - user is in Do Not Disturb",
  "The maximum total amount of reactions to collect": "The maximum total amount of reactions to collect",
  "The maximum number of emojis to collect": "The maximum number of emojis to collect",
  "The maximum number of users to react": "The maximum number of users to react",
  "The data for a role.": "The data for a role.",
  "Options that can be passed into send.": "Options that can be passed into send.",
  "Username override for the message": "Username override for the message",
  "Avatar URL override for the message": "Avatar URL override for the message",
  "An array of embeds for the message": "An array of embeds for the message",
  "Which mentions should be parsed from the message content\n(see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)": "Which mentions should be parsed from the message content\n(see [here](https://discord.com/developers/docs/resources/channel#embed-object) for more details)",
  "Whether or not the message should be split into multiple messages if\nit exceeds the character limit. If an object is provided, these are the options for splitting the message.": "Whether or not the message should be split into multiple messages if\nit exceeds the character limit. If an object is provided, these are the options for splitting the message.",
  "Data that can be resolved to give a bitfield. This can be:\n* A string (see {@link BitField.FLAGS})\n* A bit number\n* An instance of BitField\n* An Array of BitFieldResolvable": "Data that can be resolved to give a bitfield. This can be:\n* A string (see {@link BitField.FLAGS})\n* A bit number\n* An instance of BitField\n* An Array of BitFieldResolvable",
  "Options for a client.": "Options for a client.",
  "ID of the shard to run, or an array of shard IDs. If not specified,\nthe client will spawn {@link ClientOptions#shardCount} shards. If set to `auto`, it will fetch the\nrecommended amount of shards from Discord and spawn that amount": "ID of the shard to run, or an array of shard IDs. If not specified,\nthe client will spawn {@link ClientOptions#shardCount} shards. If set to `auto`, it will fetch the\nrecommended amount of shards from Discord and spawn that amount",
  "The total amount of shards used by all processes of this bot\n(e.g. recommended shard count, shard count of the ShardingManager)": "The total amount of shards used by all processes of this bot\n(e.g. recommended shard count, shard count of the ShardingManager)",
  "Maximum number of messages to cache per channel\n(-1 or Infinity for unlimited - don't do this without message sweeping, otherwise memory usage will climb\nindefinitely)": "Maximum number of messages to cache per channel\n(-1 or Infinity for unlimited - don't do this without message sweeping, otherwise memory usage will climb\nindefinitely)",
  "How long a message should stay in the cache until it is considered\nsweepable (in seconds, 0 for forever)": "How long a message should stay in the cache until it is considered\nsweepable (in seconds, 0 for forever)",
  "How frequently to remove messages from the cache that are older than\nthe message cache lifetime (in seconds, 0 for never)": "How frequently to remove messages from the cache that are older than\nthe message cache lifetime (in seconds, 0 for never)",
  "Whether to cache all guild members and users upon startup, as well as\nupon joining a guild (should be avoided whenever possible)": "Whether to cache all guild members and users upon startup, as well as\nupon joining a guild (should be avoided whenever possible)",
  "Default value for {@link MessageOptions#disableMentions}": "Default value for {@link MessageOptions#disableMentions}",
  "Default value for {@link MessageOptions#allowedMentions}": "Default value for {@link MessageOptions#allowedMentions}",
  "Structures allowed to be partial. This means events can be emitted even when\nthey're missing all the data for a particular structure. See the \"Partials\" topic listed in the sidebar for some\nimportant usage information, as partials require you to put checks in place when handling data.": "Structures allowed to be partial. This means events can be emitted even when\nthey're missing all the data for a particular structure. See the \"Partials\" topic listed in the sidebar for some\nimportant usage information, as partials require you to put checks in place when handling data.",
  "Maximum time permitted between REST responses and their\ncorresponding websocket events": "Maximum time permitted between REST responses and their\ncorresponding websocket events",
  "Extra time in millseconds to wait before continuing to make REST\nrequests (higher values will reduce rate-limiting errors on bad connections)": "Extra time in millseconds to wait before continuing to make REST\nrequests (higher values will reduce rate-limiting errors on bad connections)",
  "Time to wait before cancelling a REST request, in milliseconds": "Time to wait before cancelling a REST request, in milliseconds",
  "How frequently to delete inactive request buckets, in seconds\n(or 0 for never)": "How frequently to delete inactive request buckets, in seconds\n(or 0 for never)",
  "How many times to retry on 5XX errors (Infinity for indefinite amount of retries)": "How many times to retry on 5XX errors (Infinity for indefinite amount of retries)",
  "Presence data to use upon login": "Presence data to use upon login",
  "Options for the WebSocket": "Options for the WebSocket",
  "HTTP options": "HTTP options",
  "WebSocket options (these are left as snake_case to match the API)": "WebSocket options (these are left as snake_case to match the API)",
  "Number of members in a guild after which offline users will no longer be\nsent in the initial guild member list, must be between 50 and 250": "Number of members in a guild after which offline users will no longer be\nsent in the initial guild member list, must be between 50 and 250",
  "Intents to enable for this connection": "Intents to enable for this connection",
  "API version to use": "API version to use",
  "Base url of the API": "Base url of the API",
  "Base url of the CDN": "Base url of the CDN",
  "Base url of invites": "Base url of invites",
  "Options for Image URLs.": "Options for Image URLs.",
  "One of `webp`, `png`, `jpg`, `jpeg`, `gif`. If no format is provided,\ndefaults to `webp`.": "One of `webp`, `png`, `jpg`, `jpeg`, `gif`. If no format is provided,\ndefaults to `webp`.",
  "If true, the format will dynamically change to `gif` for\nanimated avatars; the default is false.": "If true, the format will dynamically change to `gif` for\nanimated avatars; the default is false.",
  "One of `16`, `32`, `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`": "One of `16`, `32`, `64`, `128`, `256`, `512`, `1024`, `2048`, `4096`",
  "The current status of the client. Here are the available statuses:\n* READY: 0\n* CONNECTING: 1\n* RECONNECTING: 2\n* IDLE: 3\n* NEARLY: 4\n* DISCONNECTED: 5\n* WAITING_FOR_GUILDS: 6\n* IDENTIFYING: 7\n* RESUMING: 8": "The current status of the client. Here are the available statuses:\n* READY: 0\n* CONNECTING: 1\n* RECONNECTING: 2\n* IDLE: 3\n* NEARLY: 4\n* DISCONNECTED: 5\n* WAITING_FOR_GUILDS: 6\n* IDENTIFYING: 7\n* RESUMING: 8",
  "The current status of a voice connection. Here are the available statuses:\n* CONNECTED: 0\n* CONNECTING: 1\n* AUTHENTICATING: 2\n* RECONNECTING: 3\n* DISCONNECTED: 4": "The current status of a voice connection. Here are the available statuses:\n* CONNECTED: 0\n* CONNECTING: 1\n* AUTHENTICATING: 2\n* RECONNECTING: 3\n* DISCONNECTED: 4",
  "The type of Structure allowed to be a partial:\n* USER\n* CHANNEL (only affects DMChannels)\n* GUILD_MEMBER\n* MESSAGE\n* REACTION\n<warn>Partials require you to put checks in place when handling data, read the Partials topic listed in the\nsidebar for more information.</warn>": "The type of Structure allowed to be a partial:\n* USER\n* CHANNEL (only affects DMChannels)\n* GUILD_MEMBER\n* MESSAGE\n* REACTION\n<warn>Partials require you to put checks in place when handling data, read the Partials topic listed in the\nsidebar for more information.</warn>",
  "The type of a websocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:\n* READY\n* RESUMED\n* GUILD_CREATE\n* GUILD_DELETE\n* GUILD_UPDATE\n* INVITE_CREATE\n* INVITE_DELETE\n* GUILD_MEMBER_ADD\n* GUILD_MEMBER_REMOVE\n* GUILD_MEMBER_UPDATE\n* GUILD_MEMBERS_CHUNK\n* GUILD_INTEGRATIONS_UPDATE\n* GUILD_ROLE_CREATE\n* GUILD_ROLE_DELETE\n* GUILD_ROLE_UPDATE\n* GUILD_BAN_ADD\n* GUILD_BAN_REMOVE\n* GUILD_EMOJIS_UPDATE\n* CHANNEL_CREATE\n* CHANNEL_DELETE\n* CHANNEL_UPDATE\n* CHANNEL_PINS_UPDATE\n* MESSAGE_CREATE\n* MESSAGE_DELETE\n* MESSAGE_UPDATE\n* MESSAGE_DELETE_BULK\n* MESSAGE_REACTION_ADD\n* MESSAGE_REACTION_REMOVE\n* MESSAGE_REACTION_REMOVE_ALL\n* MESSAGE_REACTION_REMOVE_EMOJI\n* USER_UPDATE\n* PRESENCE_UPDATE\n* TYPING_START\n* VOICE_STATE_UPDATE\n* VOICE_SERVER_UPDATE\n* WEBHOOKS_UPDATE": "The type of a websocket message event, e.g. `MESSAGE_CREATE`. Here are the available events:\n* READY\n* RESUMED\n* GUILD_CREATE\n* GUILD_DELETE\n* GUILD_UPDATE\n* INVITE_CREATE\n* INVITE_DELETE\n* GUILD_MEMBER_ADD\n* GUILD_MEMBER_REMOVE\n* GUILD_MEMBER_UPDATE\n* GUILD_MEMBERS_CHUNK\n* GUILD_INTEGRATIONS_UPDATE\n* GUILD_ROLE_CREATE\n* GUILD_ROLE_DELETE\n* GUILD_ROLE_UPDATE\n* GUILD_BAN_ADD\n* GUILD_BAN_REMOVE\n* GUILD_EMOJIS_UPDATE\n* CHANNEL_CREATE\n* CHANNEL_DELETE\n* CHANNEL_UPDATE\n* CHANNEL_PINS_UPDATE\n* MESSAGE_CREATE\n* MESSAGE_DELETE\n* MESSAGE_UPDATE\n* MESSAGE_DELETE_BULK\n* MESSAGE_REACTION_ADD\n* MESSAGE_REACTION_REMOVE\n* MESSAGE_REACTION_REMOVE_ALL\n* MESSAGE_REACTION_REMOVE_EMOJI\n* USER_UPDATE\n* PRESENCE_UPDATE\n* TYPING_START\n* VOICE_STATE_UPDATE\n* VOICE_SERVER_UPDATE\n* WEBHOOKS_UPDATE",
  "The type of a message, e.g. `DEFAULT`. Here are the available types:\n* DEFAULT\n* RECIPIENT_ADD\n* RECIPIENT_REMOVE\n* CALL\n* CHANNEL_NAME_CHANGE\n* CHANNEL_ICON_CHANGE\n* PINS_ADD\n* GUILD_MEMBER_JOIN\n* USER_PREMIUM_GUILD_SUBSCRIPTION\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3\n* CHANNEL_FOLLOW_ADD\n* GUILD_DISCOVERY_DISQUALIFIED\n* GUILD_DISCOVERY_REQUALIFIED": "The type of a message, e.g. `DEFAULT`. Here are the available types:\n* DEFAULT\n* RECIPIENT_ADD\n* RECIPIENT_REMOVE\n* CALL\n* CHANNEL_NAME_CHANGE\n* CHANNEL_ICON_CHANGE\n* PINS_ADD\n* GUILD_MEMBER_JOIN\n* USER_PREMIUM_GUILD_SUBSCRIPTION\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_1\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_2\n* USER_PREMIUM_GUILD_SUBSCRIPTION_TIER_3\n* CHANNEL_FOLLOW_ADD\n* GUILD_DISCOVERY_DISQUALIFIED\n* GUILD_DISCOVERY_REQUALIFIED",
  "<info>Bots cannot set a `CUSTOM_STATUS`, it is only for custom statuses received from users</info>\nThe type of an activity of a users presence, e.g. `PLAYING`. Here are the available types:\n* PLAYING\n* STREAMING\n* LISTENING\n* WATCHING\n* CUSTOM_STATUS": "<info>Bots cannot set a `CUSTOM_STATUS`, it is only for custom statuses received from users</info>\nThe type of an activity of a users presence, e.g. `PLAYING`. Here are the available types:\n* PLAYING\n* STREAMING\n* LISTENING\n* WATCHING\n* CUSTOM_STATUS",
  "The value set for the explicit content filter levels for a guild:\n* DISABLED\n* MEMBERS_WITHOUT_ROLES\n* ALL_MEMBERS": "The value set for the explicit content filter levels for a guild:\n* DISABLED\n* MEMBERS_WITHOUT_ROLES\n* ALL_MEMBERS",
  "The value set for the verification levels for a guild:\n* NONE\n* LOW\n* MEDIUM\n* HIGH\n* VERY_HIGH": "The value set for the verification levels for a guild:\n* NONE\n* LOW\n* MEDIUM\n* HIGH\n* VERY_HIGH",
  "An error encountered while performing an API request. Here are the potential errors:\n* UNKNOWN_ACCOUNT\n* UNKNOWN_APPLICATION\n* UNKNOWN_CHANNEL\n* UNKNOWN_GUILD\n* UNKNOWN_INTEGRATION\n* UNKNOWN_INVITE\n* UNKNOWN_MEMBER\n* UNKNOWN_MESSAGE\n* UNKNOWN_OVERWRITE\n* UNKNOWN_PROVIDER\n* UNKNOWN_ROLE\n* UNKNOWN_TOKEN\n* UNKNOWN_USER\n* UNKNOWN_EMOJI\n* UNKNOWN_WEBHOOK\n* BOT_PROHIBITED_ENDPOINT\n* BOT_ONLY_ENDPOINT\n* MAXIMUM_GUILDS\n* MAXIMUM_FRIENDS\n* MAXIMUM_PINS\n* MAXIMUM_ROLES\n* MAXIMUM_REACTIONS\n* MAXIMUM_CHANNELS\n* MAXIMUM_INVITES\n* UNAUTHORIZED\n* USER_BANNED\n* MISSING_ACCESS\n* INVALID_ACCOUNT_TYPE\n* CANNOT_EXECUTE_ON_DM\n* EMBED_DISABLED\n* CANNOT_EDIT_MESSAGE_BY_OTHER\n* CANNOT_SEND_EMPTY_MESSAGE\n* CANNOT_MESSAGE_USER\n* CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL\n* CHANNEL_VERIFICATION_LEVEL_TOO_HIGH\n* OAUTH2_APPLICATION_BOT_ABSENT\n* MAXIMUM_OAUTH2_APPLICATIONS\n* INVALID_OAUTH_STATE\n* MISSING_PERMISSIONS\n* INVALID_AUTHENTICATION_TOKEN\n* NOTE_TOO_LONG\n* INVALID_BULK_DELETE_QUANTITY\n* CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL\n* INVALID_OR_TAKEN_INVITE_CODE\n* CANNOT_EXECUTE_ON_SYSTEM_MESSAGE\n* INVALID_OAUTH_TOKEN\n* BULK_DELETE_MESSAGE_TOO_OLD\n* INVALID_FORM_BODY\n* INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT\n* INVALID_API_VERSION\n* REACTION_BLOCKED\n* RESOURCE_OVERLOADED": "An error encountered while performing an API request. Here are the potential errors:\n* UNKNOWN_ACCOUNT\n* UNKNOWN_APPLICATION\n* UNKNOWN_CHANNEL\n* UNKNOWN_GUILD\n* UNKNOWN_INTEGRATION\n* UNKNOWN_INVITE\n* UNKNOWN_MEMBER\n* UNKNOWN_MESSAGE\n* UNKNOWN_OVERWRITE\n* UNKNOWN_PROVIDER\n* UNKNOWN_ROLE\n* UNKNOWN_TOKEN\n* UNKNOWN_USER\n* UNKNOWN_EMOJI\n* UNKNOWN_WEBHOOK\n* BOT_PROHIBITED_ENDPOINT\n* BOT_ONLY_ENDPOINT\n* MAXIMUM_GUILDS\n* MAXIMUM_FRIENDS\n* MAXIMUM_PINS\n* MAXIMUM_ROLES\n* MAXIMUM_REACTIONS\n* MAXIMUM_CHANNELS\n* MAXIMUM_INVITES\n* UNAUTHORIZED\n* USER_BANNED\n* MISSING_ACCESS\n* INVALID_ACCOUNT_TYPE\n* CANNOT_EXECUTE_ON_DM\n* EMBED_DISABLED\n* CANNOT_EDIT_MESSAGE_BY_OTHER\n* CANNOT_SEND_EMPTY_MESSAGE\n* CANNOT_MESSAGE_USER\n* CANNOT_SEND_MESSAGES_IN_VOICE_CHANNEL\n* CHANNEL_VERIFICATION_LEVEL_TOO_HIGH\n* OAUTH2_APPLICATION_BOT_ABSENT\n* MAXIMUM_OAUTH2_APPLICATIONS\n* INVALID_OAUTH_STATE\n* MISSING_PERMISSIONS\n* INVALID_AUTHENTICATION_TOKEN\n* NOTE_TOO_LONG\n* INVALID_BULK_DELETE_QUANTITY\n* CANNOT_PIN_MESSAGE_IN_OTHER_CHANNEL\n* INVALID_OR_TAKEN_INVITE_CODE\n* CANNOT_EXECUTE_ON_SYSTEM_MESSAGE\n* INVALID_OAUTH_TOKEN\n* BULK_DELETE_MESSAGE_TOO_OLD\n* INVALID_FORM_BODY\n* INVITE_ACCEPTED_TO_GUILD_NOT_CONTAINING_BOT\n* INVALID_API_VERSION\n* REACTION_BLOCKED\n* RESOURCE_OVERLOADED",
  "The value set for a guild's default message notifications, e.g. `ALL`. Here are the available types:\n* ALL\n* MENTIONS": "The value set for a guild's default message notifications, e.g. `ALL`. Here are the available types:\n* ALL\n* MENTIONS",
  "The value set for a team members's membership state:\n* INVITED\n* ACCEPTED": "The value set for a team members's membership state:\n* INVITED\n* ACCEPTED",
  "The value set for a webhook's type:\n* Incoming\n* Channel Follower": "The value set for a webhook's type:\n* Incoming\n* Channel Follower",
  "Data that can be resolved to give an invite code. This can be:\n* An invite code\n* An invite URL": "Data that can be resolved to give an invite code. This can be:\n* An invite code\n* An invite URL",
  "Data that resolves to give a Base64 string, typically for image uploading. This can be:\n* A Buffer\n* A base64 string": "Data that resolves to give a Base64 string, typically for image uploading. This can be:\n* A Buffer\n* A base64 string",
  "Data that can be resolved to give a Buffer. This can be:\n* A Buffer\n* The path to a local file\n* A URL": "Data that can be resolved to give a Buffer. This can be:\n* A Buffer\n* The path to a local file\n* A URL",
  "Data that can be resolved to give a permission number. This can be:\n* A string (see {@link Intents.FLAGS})\n* An intents flag\n* An instance of Intents\n* An array of IntentsResolvable": "Data that can be resolved to give a permission number. This can be:\n* A string (see {@link Intents.FLAGS})\n* An intents flag\n* An instance of Intents\n* An array of IntentsResolvable",
  "Data that can be resolved to give a permission number. This can be:\n* A string (see {@link Permissions.FLAGS})\n* A permission number\n* An instance of Permissions\n* An Array of PermissionResolvable": "Data that can be resolved to give a permission number. This can be:\n* A string (see {@link Permissions.FLAGS})\n* A permission number\n* An instance of Permissions\n* An Array of PermissionResolvable",
  "A Twitter snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```": "A Twitter snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
  "A deconstructed snowflake.": "A deconstructed snowflake.",
  "Timestamp the snowflake was created": "Timestamp the snowflake was created",
  "Date the snowflake was created": "Date the snowflake was created",
  "Worker ID in the snowflake": "Worker ID in the snowflake",
  "Process ID in the snowflake": "Process ID in the snowflake",
  "Increment in the snowflake": "Increment in the snowflake",
  "Binary representation of the snowflake": "Binary representation of the snowflake",
  "An extendable structure:\n* **`GuildEmoji`**\n* **`DMChannel`**\n* **`TextChannel`**\n* **`VoiceChannel`**\n* **`CategoryChannel`**\n* **`NewsChannel`**\n* **`StoreChannel`**\n* **`GuildMember`**\n* **`Guild`**\n* **`Message`**\n* **`MessageReaction`**\n* **`Presence`**\n* **`ClientPresence`**\n* **`VoiceState`**\n* **`Role`**\n* **`User`**": "An extendable structure:\n* **`GuildEmoji`**\n* **`DMChannel`**\n* **`TextChannel`**\n* **`VoiceChannel`**\n* **`CategoryChannel`**\n* **`NewsChannel`**\n* **`StoreChannel`**\n* **`GuildMember`**\n* **`Guild`**\n* **`Message`**\n* **`MessageReaction`**\n* **`Presence`**\n* **`ClientPresence`**\n* **`VoiceState`**\n* **`Role`**\n* **`User`**",
  "Data that can be resolved to give a sytem channel flag bitfield. This can be:\n* A string (see {@link SystemChannelFlags.FLAGS})\n* A sytem channel flag\n* An instance of SystemChannelFlags\n* An Array of SystemChannelFlagsResolvable": "Data that can be resolved to give a sytem channel flag bitfield. This can be:\n* A string (see {@link SystemChannelFlags.FLAGS})\n* A sytem channel flag\n* An instance of SystemChannelFlags\n* An Array of SystemChannelFlagsResolvable",
  "Data that can be resolved to give a string. This can be:\n* A string\n* An array (joined with a new line delimiter to give a string)\n* Any value": "Data that can be resolved to give a string. This can be:\n* A string\n* An array (joined with a new line delimiter to give a string)\n* Any value",
  "Can be a number, hex string, an RGB array like:\n```js\n[255, 0, 255] // purple\n```\nor one of the following strings:\n- `DEFAULT`\n- `WHITE`\n- `AQUA`\n- `GREEN`\n- `BLUE`\n- `YELLOW`\n- `PURPLE`\n- `LUMINOUS_VIVID_PINK`\n- `GOLD`\n- `ORANGE`\n- `RED`\n- `GREY`\n- `DARKER_GREY`\n- `NAVY`\n- `DARK_AQUA`\n- `DARK_GREEN`\n- `DARK_BLUE`\n- `DARK_PURPLE`\n- `DARK_VIVID_PINK`\n- `DARK_GOLD`\n- `DARK_ORANGE`\n- `DARK_RED`\n- `DARK_GREY`\n- `LIGHT_GREY`\n- `DARK_NAVY`\n- `BLURPLE`\n- `GREYPLE`\n- `DARK_BUT_NOT_BLACK`\n- `NOT_QUITE_BLACK`\n- `RANDOM`": "Can be a number, hex string, an RGB array like:\n```js\n[255, 0, 255] // purple\n```\nor one of the following strings:\n- `DEFAULT`\n- `WHITE`\n- `AQUA`\n- `GREEN`\n- `BLUE`\n- `YELLOW`\n- `PURPLE`\n- `LUMINOUS_VIVID_PINK`\n- `GOLD`\n- `ORANGE`\n- `RED`\n- `GREY`\n- `DARKER_GREY`\n- `NAVY`\n- `DARK_AQUA`\n- `DARK_GREEN`\n- `DARK_BLUE`\n- `DARK_PURPLE`\n- `DARK_VIVID_PINK`\n- `DARK_GOLD`\n- `DARK_ORANGE`\n- `DARK_RED`\n- `DARK_GREY`\n- `LIGHT_GREY`\n- `DARK_NAVY`\n- `BLURPLE`\n- `GREYPLE`\n- `DARK_BUT_NOT_BLACK`\n- `NOT_QUITE_BLACK`\n- `RANDOM`"
}