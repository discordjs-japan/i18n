{
  "General": "General",
  "Welcome": "Welcome",
  "# `@discordjs/rest`\n\n> The REST API module for Discord.js\n": "# `@discordjs/rest`\n\n> The REST API module for Discord.js\n",
  "The CDN link builder": "The CDN link builder",
  "Generates an app asset URL for a client's asset.": "Generates an app asset URL for a client's asset.",
  "The client id that has the asset": "The client id that has the asset",
  "The hash provided by Discord for this asset": "The hash provided by Discord for this asset",
  "Optional options for the asset": "Optional options for the asset",
  "Generates an app icon URL for a client's icon.": "Generates an app icon URL for a client's icon.",
  "The client id that has the icon": "The client id that has the icon",
  "The hash provided by Discord for this icon": "The hash provided by Discord for this icon",
  "Optional options for the icon": "Optional options for the icon",
  "Generates an avatar URL, e.g. for a user or a webhook.": "Generates an avatar URL, e.g. for a user or a webhook.",
  "The id that has the icon": "The id that has the icon",
  "The hash provided by Discord for this avatar": "The hash provided by Discord for this avatar",
  "Optional options for the avatar": "Optional options for the avatar",
  "Generates a banner URL, e.g. for a user or a guild.": "Generates a banner URL, e.g. for a user or a guild.",
  "The id that has the banner splash": "The id that has the banner splash",
  "The hash provided by Discord for this banner": "The hash provided by Discord for this banner",
  "Optional options for the banner": "Optional options for the banner",
  "Generates an icon URL for a channel, e.g. a group DM.": "Generates an icon URL for a channel, e.g. a group DM.",
  "The channel id that has the icon": "The channel id that has the icon",
  "The hash provided by Discord for this channel": "The hash provided by Discord for this channel",
  "Generates the default avatar URL for a discriminator.": "Generates the default avatar URL for a discriminator.",
  "The discriminator modulo 5": "The discriminator modulo 5",
  "Generates a discovery splash URL for a guild's discovery splash.": "Generates a discovery splash URL for a guild's discovery splash.",
  "The guild id that has the discovery splash": "The guild id that has the discovery splash",
  "The hash provided by Discord for this splash": "The hash provided by Discord for this splash",
  "Optional options for the splash": "Optional options for the splash",
  "Constructs the URL for the resource, checking whether or not `hash` starts with `a_` if `dynamic` is set to `true`.": "Constructs the URL for the resource, checking whether or not `hash` starts with `a_` if `dynamic` is set to `true`.",
  "The base cdn route": "The base cdn route",
  "Optional options for the link": "Optional options for the link",
  "Generates an emoji's URL for an emoji.": "Generates an emoji's URL for an emoji.",
  "The emoji id": "The emoji id",
  "The extension of the emoji": "The extension of the emoji",
  "Generates a guild member avatar URL.": "Generates a guild member avatar URL.",
  "The id of the guild": "The id of the guild",
  "The id of the user": "The id of the user",
  "Generates a cover image for a guild scheduled event.": "Generates a cover image for a guild scheduled event.",
  "The scheduled event id": "The scheduled event id",
  "The hash provided by discord for this cover image": "The hash provided by discord for this cover image",
  "Optional options for the cover image": "Optional options for the cover image",
  "Generates an icon URL, e.g. for a guild.": "Generates an icon URL, e.g. for a guild.",
  "The id that has the icon splash": "The id that has the icon splash",
  "Constructs the URL for the resource": "Constructs the URL for the resource",
  "The extension/size options for the link": "The extension/size options for the link",
  "Generates a URL for the icon of a role": "Generates a URL for the icon of a role",
  "The id of the role that has the icon": "The id of the role that has the icon",
  "The hash provided by Discord for this role icon": "The hash provided by Discord for this role icon",
  "Optional options for the role icon": "Optional options for the role icon",
  "Generates a guild invite splash URL for a guild's invite splash.": "Generates a guild invite splash URL for a guild's invite splash.",
  "The guild id that has the invite splash": "The guild id that has the invite splash",
  "Generates a sticker URL.": "Generates a sticker URL.",
  "The sticker id": "The sticker id",
  "The extension of the sticker": "The extension of the sticker",
  "Generates a sticker pack banner URL.": "Generates a sticker pack banner URL.",
  "The banner id": "The banner id",
  "Generates a team icon URL for a team's icon.": "Generates a team icon URL for a team's icon.",
  "The team id that has the icon": "The team id that has the icon",
  "Represents an API error returned by Discord": "Represents an API error returned by Discord",
  "The error reported by Discord": "The error reported by Discord",
  "The error code reported by Discord": "The error code reported by Discord",
  "The status code of the response": "The status code of the response",
  "The method of the request that erred": "The method of the request that erred",
  "The url of the request that erred": "The url of the request that erred",
  "The unparsed data for the request that errored": "The unparsed data for the request that errored",
  "The name of the error": "The name of the error",
  "Create .stack property on a target object": "Create .stack property on a target object",
  "Represents a HTTP error": "Represents a HTTP error",
  "The error message": "The error message",
  "Sets or gets the default captureRejection value for all emitters.": "Sets or gets the default captureRejection value for all emitters.",
  "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.": "This symbol shall be used to install a listener for only monitoring `'error'`\nevents. Listeners installed using this symbol are called before the regular\n`'error'` listeners are called.",
  "Alias for `emitter.on(eventName, listener)`.": "Alias for `emitter.on(eventName, listener)`.",
  "Runs a delete request from the api": "Runs a delete request from the api",
  "The full route to query": "The full route to query",
  "Optional request options": "Optional request options",
  "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or `Symbol`s.",
  "Runs a get request from the api": "Runs a get request from the api",
  "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.": "Returns the current max listener value for the `EventEmitter` which is either\nset by `emitter.setMaxListeners(n)` or defaults to {@link defaultMaxListeners}.",
  "Returns the number of listeners listening to the event named `eventName`.": "Returns the number of listeners listening to the event named `eventName`.",
  "The name of the event being listened for": "The name of the event being listened for",
  "Returns a copy of the array of listeners for the event named `eventName`.": "Returns a copy of the array of listeners for the event named `eventName`.",
  "Runs a patch request from the api": "Runs a patch request from the api",
  "Runs a post request from the api": "Runs a post request from the api",
  "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.": "Adds the `listener` function to the _beginning_ of the listeners array for the\nevent named `eventName`. No checks are made to see if the `listener` has\nalready been added. Multiple calls passing the same combination of `eventName`and `listener` will result in the `listener` being added, and called, multiple\ntimes.",
  "The name of the event.": "The name of the event.",
  "The callback function": "The callback function",
  "Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.": "Adds a **one-time**`listener` function for the event named `eventName` to the_beginning_ of the listeners array. The next time `eventName` is triggered, this\nlistener is removed, and then invoked.",
  "Runs a put request from the api": "Runs a put request from the api",
  "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).": "Returns a copy of the array of listeners for the event named `eventName`,\nincluding any wrappers (such as those created by `.once()`).",
  "Removes the specified `listener` from the listener array for the event named`eventName`.": "Removes the specified `listener` from the listener array for the event named`eventName`.",
  "Runs a request from the api": "Runs a request from the api",
  "Request options": "Request options",
  "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.": "By default `EventEmitter`s will print a warning if more than `10` listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The `emitter.setMaxListeners()` method allows the limit to be\nmodified for this specific `EventEmitter` instance. The value can be set to`Infinity` (or `0`) to indicate an unlimited number of listeners.",
  "Sets the authorization token that should be used for requests": "Sets the authorization token that should be used for requests",
  "The authorization token to use": "The authorization token to use",
  "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.": "A class method that returns the number of listeners for the given `eventName`registered on the given `emitter`.",
  "The emitter to query": "The emitter to query",
  "The event name": "The event name",
  "```js\nconst { on, EventEmitter } = require('events');": "```js\nconst { on, EventEmitter } = require('events');",
  "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.": "Creates a `Promise` that is fulfilled when the `EventEmitter` emits the given\nevent or that is rejected if the `EventEmitter` emits `'error'` while waiting.\nThe `Promise` will resolve with an array of all the arguments emitted to the\ngiven event.",
  "Whether the rate limit that was reached was the global limit": "Whether the rate limit that was reached was the global limit",
  "The bucket hash for this request": "The bucket hash for this request",
  "The amount of requests we can perform before locking requests": "The amount of requests we can perform before locking requests",
  "The major parameter of the route": "The major parameter of the route",
  "The HTTP method being performed": "The HTTP method being performed",
  "The route being hit in this request": "The route being hit in this request",
  "The time, in milliseconds, until the request-lock is reset": "The time, in milliseconds, until the request-lock is reset",
  "The full URL for this request": "The full URL for this request",
  "Represents the class that manages handlers for endpoints": "Represents the class that manages handlers for endpoints",
  "The promise used to wait out the global rate limit": "The promise used to wait out the global rate limit",
  "The number of requests remaining in the global bucket": "The number of requests remaining in the global bucket",
  "The timestamp at which the global bucket resets": "The timestamp at which the global bucket resets",
  "Request handlers created from the bucket hash and the major parameters": "Request handlers created from the bucket hash and the major parameters",
  "API bucket hashes that are cached from provided routes": "API bucket hashes that are cached from provided routes",
  "Stops the request handler sweeping interval": "Stops the request handler sweeping interval",
  "Stops the hash sweeping interval": "Stops the hash sweeping interval",
  "Creates a new rate limit handler from a hash, based on the hash and the major parameter": "Creates a new rate limit handler from a hash, based on the hash and the major parameter",
  "The hash for the route": "The hash for the route",
  "The major parameter for this handler": "The major parameter for this handler",
  "Queues a request to be sent": "Queues a request to be sent",
  "All the information needed to make a request": "All the information needed to make a request",
  "Formats the request data to a usable format for fetch": "Formats the request data to a usable format for fetch",
  "The request data": "The request data",
  "Generates route data for an endpoint:method": "Generates route data for an endpoint:method",
  "The raw endpoint to generalize": "The raw endpoint to generalize",
  "The HTTP method this endpoint is called without": "The HTTP method this endpoint is called without",
  "The events that the REST manager emits": "The events that the REST manager emits",
  "Possible API methods to be used when doing requests": "Possible API methods to be used when doing requests",
  "The data that was used to form the body of this request": "The data that was used to form the body of this request",
  "The HTTP method used in this request": "The HTTP method used in this request",
  "Additional HTTP options for this request": "Additional HTTP options for this request",
  "The full path used to make the request": "The full path used to make the request",
  "The number of times this request has been attempted": "The number of times this request has been attempted",
  "The API route identifying the ratelimit for this request": "The API route identifying the ratelimit for this request",
  "The options used for image URLs": "The options used for image URLs",
  "The extension to use for the image URL": "The extension to use for the image URL",
  "The size specified in the image URL": "The size specified in the image URL",
  "Represents a hash and its associated fields": "Represents a hash and its associated fields",
  "The options used for image URLs with animated content": "The options used for image URLs with animated content",
  "Whether or not to prefer the static version of an image asset.": "Whether or not to prefer the static version of an image asset.",
  "Internal request options": "Internal request options",
  "Whether to append JSON data to form data instead of `payload_json` when sending files": "Whether to append JSON data to form data instead of `payload_json` when sending files",
  "If this request needs the `Authorization` header": "If this request needs the `Authorization` header",
  "The authorization prefix to use for this request, useful if you use this with bearer tokens": "The authorization prefix to use for this request, useful if you use this with bearer tokens",
  "The body to send to this request.\nIf providing as BodyInit, set `passThroughBody: true`": "The body to send to this request.\nIf providing as BodyInit, set `passThroughBody: true`",
  "Files to be attached to this request": "Files to be attached to this request",
  "Additional headers to add to this request": "Additional headers to add to this request",
  "Whether to pass-through the body property directly to `fetch()`.\n<warn>This only applies when files is NOT present</warn>": "Whether to pass-through the body property directly to `fetch()`.\n<warn>This only applies when files is NOT present</warn>",
  "Query string parameters to append to the called endpoint": "Query string parameters to append to the called endpoint",
  "Reason to show in the audit logs": "Reason to show in the audit logs",
  "If this request should be versioned": "If this request should be versioned",
  "Number of invalid requests that have been made in the window": "Number of invalid requests that have been made in the window",
  "Time in milliseconds remaining before the count resets": "Time in milliseconds remaining before the count resets",
  "The options to use when making a CDN URL": "The options to use when making a CDN URL",
  "The allowed extensions that can be used": "The allowed extensions that can be used",
  "Options to be passed when creating the REST instance": "Options to be passed when creating the REST instance",
  "HTTPS Agent options": "HTTPS Agent options",
  "The base api path, without version": "The base api path, without version",
  "The cdn path": "The cdn path",
  "How many requests to allow sending per second (Infinity for unlimited, 50 for the standard global limit used by Discord)": "How many requests to allow sending per second (Infinity for unlimited, 50 for the standard global limit used by Discord)",
  "The amount of time in milliseconds that passes between each hash sweep. (defaults to 1h)": "The amount of time in milliseconds that passes between each hash sweep. (defaults to 1h)",
  "The maximum amount of time a hash can exist in milliseconds without being hit with a request (defaults to 24h)": "The maximum amount of time a hash can exist in milliseconds without being hit with a request (defaults to 24h)",
  "The amount of time in milliseconds that passes between each hash sweep. (defaults to 4h)": "The amount of time in milliseconds that passes between each hash sweep. (defaults to 4h)",
  "Additional headers to send for all API requests": "Additional headers to send for all API requests",
  "The number of invalid REST requests (those that return 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings).\nThat is, if set to 500, warnings will be emitted at invalid request number 500, 1000, 1500, and so on.": "The number of invalid REST requests (those that return 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings).\nThat is, if set to 500, warnings will be emitted at invalid request number 500, 1000, 1500, and so on.",
  "The extra offset to add to rate limits in milliseconds": "The extra offset to add to rate limits in milliseconds",
  "Determines how rate limiting and pre-emptive throttling should be handled.\nWhen an array of strings, each element is treated as a prefix for the request route\n(e.g. `/channels` to match any route starting with `/channels` such as `/channels/:id/messages`)\nfor which to throw {@link RateLimitError}s. All other request routes will be queued normally": "Determines how rate limiting and pre-emptive throttling should be handled.\nWhen an array of strings, each element is treated as a prefix for the request route\n(e.g. `/channels` to match any route starting with `/channels` such as `/channels/:id/messages`)\nfor which to throw {@link RateLimitError}s. All other request routes will be queued normally",
  "The number of retries for errors with the 500 code, or errors\nthat timeout": "The number of retries for errors with the 500 code, or errors\nthat timeout",
  "The time to wait in milliseconds before a request is aborted": "The time to wait in milliseconds before a request is aborted",
  "Extra information to add to the user agent": "Extra information to add to the user agent",
  "The version of the API to use": "The version of the API to use",
  "Data emitted on `RESTEvents.RateLimited`": "Data emitted on `RESTEvents.RateLimited`",
  "Represents a file to be added to the request": "Represents a file to be added to the request",
  "The actual data for the file": "The actual data for the file",
  "An explicit key to use for key of the formdata field for this file.\nWhen not provided, the index of the file in the files array is used in the form `files[${index}]`.\nIf you wish to alter the placeholder snowflake, you must provide this property in the same form (`files[${placeholder}]`)": "An explicit key to use for key of the formdata field for this file.\nWhen not provided, the index of the file in the files array is used in the form `files[${index}]`.\nIf you wish to alter the placeholder snowflake, you must provide this property in the same form (`files[${placeholder}]`)",
  "The name of the file": "The name of the file",
  "Represents possible data to be given to an endpoint": "Represents possible data to be given to an endpoint",
  "Possible headers for an API call": "Possible headers for an API call",
  "Parsed route data for an endpoint": "Parsed route data for an endpoint",
  "A function that determines whether the rate limit hit should throw an Error": "A function that determines whether the rate limit hit should throw an Error"
}